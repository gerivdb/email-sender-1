{
  "timestamp": "2025-06-05T21:58:53.4343678+02:00",
  "version": "2.0.0",
  "base_directory": "d:/DO/WEB/N8N_tests/PROJETS/EMAIL_SENDER_1/development/managers",
  "total_files": 182,
  "files_analyzed": 182,
  "files": null,
  "total_methods": 0,
  "interfaces": [
    {
      "name": "ErrorManager",
      "methods": [
        {
          "name": "CatalogError",
          "signature": "CatalogError(ctx context.Context, entry ErrorEntry) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "entry",
              "type": "ErrorEntry"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\circuit-breaker\\circuit_breaker.go",
            "Offset": 2577,
            "Line": 91,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\circuit-breaker\\circuit_breaker.go",
      "package": "circuitbreaker",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\circuit-breaker\\circuit_breaker.go",
        "Offset": 2550,
        "Line": 90,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    },
    {
      "name": "ErrorManager",
      "methods": [
        {
          "name": "ProcessError",
          "signature": "ProcessError(ctx context.Context, err error, component string, operation string, hooks *ErrorHooks) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "err",
              "type": "error"
            },
            {
              "name": "component",
              "type": "string"
            },
            {
              "name": "operation",
              "type": "string"
            },
            {
              "name": "hooks",
              "type": "*ErrorHooks"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\config-manager\\config_manager.go",
            "Offset": 579,
            "Line": 26,
            "Column": 2
          }
        },
        {
          "name": "CatalogError",
          "signature": "CatalogError(entry ErrorEntry) error",
          "parameters": [
            {
              "name": "entry",
              "type": "ErrorEntry"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\config-manager\\config_manager.go",
            "Offset": 680,
            "Line": 27,
            "Column": 2
          }
        },
        {
          "name": "ValidateErrorEntry",
          "signature": "ValidateErrorEntry(entry ErrorEntry) error",
          "parameters": [
            {
              "name": "entry",
              "type": "ErrorEntry"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\config-manager\\config_manager.go",
            "Offset": 719,
            "Line": 28,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\config-manager\\config_manager.go",
      "package": "configmanager",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\config-manager\\config_manager.go",
        "Offset": 552,
        "Line": 25,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    },
    {
      "name": "ConfigManager",
      "methods": [
        {
          "name": "GetString",
          "signature": "GetString(key string) (string, error)",
          "parameters": [
            {
              "name": "key",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "string"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [
            " Existing methods"
          ],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\config-manager\\config_manager.go",
            "Offset": 1437,
            "Line": 51,
            "Column": 2
          }
        },
        {
          "name": "GetInt",
          "signature": "GetInt(key string) (int, error)",
          "parameters": [
            {
              "name": "key",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "int"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\config-manager\\config_manager.go",
            "Offset": 1477,
            "Line": 52,
            "Column": 2
          }
        },
        {
          "name": "GetBool",
          "signature": "GetBool(key string) (bool, error)",
          "parameters": [
            {
              "name": "key",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "bool"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\config-manager\\config_manager.go",
            "Offset": 1511,
            "Line": 53,
            "Column": 2
          }
        },
        {
          "name": "UnmarshalKey",
          "signature": "UnmarshalKey(key string, targetStruct interface{}) error",
          "parameters": [
            {
              "name": "key",
              "type": "string"
            },
            {
              "name": "targetStruct",
              "type": "interface{}"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\config-manager\\config_manager.go",
            "Offset": 1547,
            "Line": 54,
            "Column": 2
          }
        },
        {
          "name": "IsSet",
          "signature": "IsSet(key string) bool",
          "parameters": [
            {
              "name": "key",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "bool"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\config-manager\\config_manager.go",
            "Offset": 1606,
            "Line": 55,
            "Column": 2
          }
        },
        {
          "name": "RegisterDefaults",
          "signature": "RegisterDefaults(defaults map[string]interface{})",
          "parameters": [
            {
              "name": "defaults",
              "type": "map[string]interface{}"
            }
          ],
          "returns": [],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\config-manager\\config_manager.go",
            "Offset": 1631,
            "Line": 56,
            "Column": 2
          }
        },
        {
          "name": "LoadConfigFile",
          "signature": "LoadConfigFile(filePath string, fileType string) error",
          "parameters": [
            {
              "name": "filePath",
              "type": "string"
            },
            {
              "name": "fileType",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\config-manager\\config_manager.go",
            "Offset": 1683,
            "Line": 57,
            "Column": 2
          }
        },
        {
          "name": "LoadFromEnv",
          "signature": "LoadFromEnv(prefix string)",
          "parameters": [
            {
              "name": "prefix",
              "type": "string"
            }
          ],
          "returns": [],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\config-manager\\config_manager.go",
            "Offset": 1740,
            "Line": 58,
            "Column": 2
          }
        },
        {
          "name": "Validate",
          "signature": "Validate() error",
          "parameters": [],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\config-manager\\config_manager.go",
            "Offset": 1769,
            "Line": 59,
            "Column": 2
          }
        },
        {
          "name": "SetRequiredKeys",
          "signature": "SetRequiredKeys(keys []string)",
          "parameters": [
            {
              "name": "keys",
              "type": "[]string"
            }
          ],
          "returns": [],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\config-manager\\config_manager.go",
            "Offset": 1788,
            "Line": 60,
            "Column": 2
          }
        },
        {
          "name": "Get",
          "signature": "Get(key string) interface{}",
          "parameters": [
            {
              "name": "key",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "interface{}"
            }
          ],
          "comments": [
            " Additional methods for complete functionality"
          ],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\config-manager\\config_manager.go",
            "Offset": 1874,
            "Line": 63,
            "Column": 2
          }
        },
        {
          "name": "Set",
          "signature": "Set(key string, value interface{})",
          "parameters": [
            {
              "name": "key",
              "type": "string"
            },
            {
              "name": "value",
              "type": "interface{}"
            }
          ],
          "returns": [],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\config-manager\\config_manager.go",
            "Offset": 1904,
            "Line": 64,
            "Column": 2
          }
        },
        {
          "name": "SetDefault",
          "signature": "SetDefault(key string, value interface{})",
          "parameters": [
            {
              "name": "key",
              "type": "string"
            },
            {
              "name": "value",
              "type": "interface{}"
            }
          ],
          "returns": [],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\config-manager\\config_manager.go",
            "Offset": 1941,
            "Line": 65,
            "Column": 2
          }
        },
        {
          "name": "GetAll",
          "signature": "GetAll() map[string]interface{}",
          "parameters": [],
          "returns": [
            {
              "name": "",
              "type": "map[string]interface{}"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\config-manager\\config_manager.go",
            "Offset": 1985,
            "Line": 66,
            "Column": 2
          }
        },
        {
          "name": "SaveToFile",
          "signature": "SaveToFile(filePath string, fileType string, config map[string]interface{}) error",
          "parameters": [
            {
              "name": "filePath",
              "type": "string"
            },
            {
              "name": "fileType",
              "type": "string"
            },
            {
              "name": "config",
              "type": "map[string]interface{}"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\config-manager\\config_manager.go",
            "Offset": 2019,
            "Line": 67,
            "Column": 2
          }
        },
        {
          "name": "Cleanup",
          "signature": "Cleanup() error",
          "parameters": [],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\config-manager\\config_manager.go",
            "Offset": 2103,
            "Line": 68,
            "Column": 2
          }
        },
        {
          "name": "GetErrorManager",
          "signature": "GetErrorManager() ErrorManager",
          "parameters": [],
          "returns": [
            {
              "name": "",
              "type": "ErrorManager"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\config-manager\\config_manager.go",
            "Offset": 2121,
            "Line": 69,
            "Column": 2
          }
        },
        {
          "name": "GetLogger",
          "signature": "GetLogger() *zap.Logger",
          "parameters": [],
          "returns": [
            {
              "name": "",
              "type": "*zap.Logger"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\config-manager\\config_manager.go",
            "Offset": 2154,
            "Line": 70,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\config-manager\\config_manager.go",
      "package": "configmanager",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\config-manager\\config_manager.go",
        "Offset": 1387,
        "Line": 49,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    },
    {
      "name": "IntegrationManager",
      "methods": [
        {
          "name": "InitializeConfigManager",
          "signature": "InitializeConfigManager() (ConfigManager, error)",
          "parameters": [],
          "returns": [
            {
              "name": "",
              "type": "ConfigManager"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\config-manager\\integration.go",
            "Offset": 246,
            "Line": 11,
            "Column": 2
          }
        },
        {
          "name": "GetConfigManager",
          "signature": "GetConfigManager() ConfigManager",
          "parameters": [],
          "returns": [
            {
              "name": "",
              "type": "ConfigManager"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\config-manager\\integration.go",
            "Offset": 297,
            "Line": 12,
            "Column": 2
          }
        },
        {
          "name": "PropagateError",
          "signature": "PropagateError(module string, err error, context map[string]interface{})",
          "parameters": [
            {
              "name": "module",
              "type": "string"
            },
            {
              "name": "err",
              "type": "error"
            },
            {
              "name": "context",
              "type": "map[string]interface{}"
            }
          ],
          "returns": [],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\config-manager\\integration.go",
            "Offset": 332,
            "Line": 13,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\config-manager\\integration.go",
      "package": "configmanager",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\config-manager\\integration.go",
        "Offset": 213,
        "Line": 10,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    },
    {
      "name": "IntegratedErrorManagerInterface",
      "methods": [
        {
          "name": "PropagateError",
          "signature": "PropagateError(module string, err error, context map[string]interface{})",
          "parameters": [
            {
              "name": "module",
              "type": "string"
            },
            {
              "name": "err",
              "type": "error"
            },
            {
              "name": "context",
              "type": "map[string]interface{}"
            }
          ],
          "returns": [],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\config-manager\\integration.go",
            "Offset": 753,
            "Line": 22,
            "Column": 2
          }
        },
        {
          "name": "AddHook",
          "signature": "AddHook(module string, hook ErrorHook)",
          "parameters": [
            {
              "name": "module",
              "type": "string"
            },
            {
              "name": "hook",
              "type": "ErrorHook"
            }
          ],
          "returns": [],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\config-manager\\integration.go",
            "Offset": 828,
            "Line": 23,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\config-manager\\integration.go",
      "package": "configmanager",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\config-manager\\integration.go",
        "Offset": 707,
        "Line": 21,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    },
    {
      "name": "RealIntegratedErrorManager",
      "methods": [
        {
          "name": "PropagateError",
          "signature": "PropagateError(module string, err error, context map[string]interface{})",
          "parameters": [
            {
              "name": "module",
              "type": "string"
            },
            {
              "name": "err",
              "type": "error"
            },
            {
              "name": "context",
              "type": "map[string]interface{}"
            }
          ],
          "returns": [],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\config-manager\\real_integration.go",
            "Offset": 310,
            "Line": 11,
            "Column": 2
          }
        },
        {
          "name": "AddHook",
          "signature": "AddHook(module string, hook unknown)",
          "parameters": [
            {
              "name": "module",
              "type": "string"
            },
            {
              "name": "hook",
              "type": "unknown"
            }
          ],
          "returns": [],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\config-manager\\real_integration.go",
            "Offset": 385,
            "Line": 12,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\config-manager\\real_integration.go",
      "package": "configmanager",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\config-manager\\real_integration.go",
        "Offset": 269,
        "Line": 10,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    },
    {
      "name": "ContainerManager",
      "methods": [
        {
          "name": "Initialize",
          "signature": "Initialize(ctx context.Context) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\container-manager\\development\\container_manager.go",
            "Offset": 227,
            "Line": 16,
            "Column": 2
          }
        },
        {
          "name": "StartContainers",
          "signature": "StartContainers(ctx context.Context, services []string) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "services",
              "type": "[]string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\container-manager\\development\\container_manager.go",
            "Offset": 267,
            "Line": 17,
            "Column": 2
          }
        },
        {
          "name": "StopContainers",
          "signature": "StopContainers(ctx context.Context, services []string) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "services",
              "type": "[]string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\container-manager\\development\\container_manager.go",
            "Offset": 331,
            "Line": 18,
            "Column": 2
          }
        },
        {
          "name": "GetContainerStatus",
          "signature": "GetContainerStatus(ctx context.Context, service string) (string, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "service",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "string"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\container-manager\\development\\container_manager.go",
            "Offset": 394,
            "Line": 19,
            "Column": 2
          }
        },
        {
          "name": "GetContainerLogs",
          "signature": "GetContainerLogs(ctx context.Context, service string) ([]string, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "service",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "[]string"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\container-manager\\development\\container_manager.go",
            "Offset": 468,
            "Line": 20,
            "Column": 2
          }
        },
        {
          "name": "ValidateForContainerization",
          "signature": "ValidateForContainerization(ctx context.Context, dependencies []Dependency) (*ContainerValidationResult, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "dependencies",
              "type": "[]Dependency"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "*ContainerValidationResult"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\container-manager\\development\\container_manager.go",
            "Offset": 542,
            "Line": 21,
            "Column": 2
          }
        },
        {
          "name": "OptimizeForContainer",
          "signature": "OptimizeForContainer(ctx context.Context, dependencies []Dependency) (*ContainerOptimization, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "dependencies",
              "type": "[]Dependency"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "*ContainerOptimization"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\container-manager\\development\\container_manager.go",
            "Offset": 656,
            "Line": 22,
            "Column": 2
          }
        },
        {
          "name": "BuildImage",
          "signature": "BuildImage(ctx context.Context, imageName string, dockerfile string) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "imageName",
              "type": "string"
            },
            {
              "name": "dockerfile",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\container-manager\\development\\container_manager.go",
            "Offset": 759,
            "Line": 23,
            "Column": 2
          }
        },
        {
          "name": "PushImage",
          "signature": "PushImage(ctx context.Context, imageName string) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "imageName",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\container-manager\\development\\container_manager.go",
            "Offset": 836,
            "Line": 24,
            "Column": 2
          }
        },
        {
          "name": "PullImage",
          "signature": "PullImage(ctx context.Context, imageName string) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "imageName",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\container-manager\\development\\container_manager.go",
            "Offset": 893,
            "Line": 25,
            "Column": 2
          }
        },
        {
          "name": "CreateNetwork",
          "signature": "CreateNetwork(ctx context.Context, networkName string) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "networkName",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\container-manager\\development\\container_manager.go",
            "Offset": 950,
            "Line": 26,
            "Column": 2
          }
        },
        {
          "name": "CreateVolume",
          "signature": "CreateVolume(ctx context.Context, volumeName string) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "volumeName",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\container-manager\\development\\container_manager.go",
            "Offset": 1013,
            "Line": 27,
            "Column": 2
          }
        },
        {
          "name": "HealthCheck",
          "signature": "HealthCheck(ctx context.Context) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\container-manager\\development\\container_manager.go",
            "Offset": 1074,
            "Line": 28,
            "Column": 2
          }
        },
        {
          "name": "Cleanup",
          "signature": "Cleanup() error",
          "parameters": [],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\container-manager\\development\\container_manager.go",
            "Offset": 1115,
            "Line": 29,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\container-manager\\development\\container_manager.go",
      "package": "main",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\container-manager\\development\\container_manager.go",
        "Offset": 196,
        "Line": 15,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    },
    {
      "name": "ErrorManager",
      "methods": [
        {
          "name": "ProcessError",
          "signature": "ProcessError(ctx context.Context, err error, component string, operation string, hooks *ErrorHooks) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "err",
              "type": "error"
            },
            {
              "name": "component",
              "type": "string"
            },
            {
              "name": "operation",
              "type": "string"
            },
            {
              "name": "hooks",
              "type": "*ErrorHooks"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\container-manager\\development\\container_manager.go",
            "Offset": 3062,
            "Line": 84,
            "Column": 2
          }
        },
        {
          "name": "CatalogError",
          "signature": "CatalogError(ctx context.Context, entry *ErrorEntry) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "entry",
              "type": "*ErrorEntry"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\container-manager\\development\\container_manager.go",
            "Offset": 3163,
            "Line": 85,
            "Column": 2
          }
        },
        {
          "name": "ValidateErrorEntry",
          "signature": "ValidateErrorEntry(entry *ErrorEntry) error",
          "parameters": [
            {
              "name": "entry",
              "type": "*ErrorEntry"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\container-manager\\development\\container_manager.go",
            "Offset": 3224,
            "Line": 86,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\container-manager\\development\\container_manager.go",
      "package": "main",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\container-manager\\development\\container_manager.go",
        "Offset": 3035,
        "Line": 83,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    },
    {
      "name": "SecurityManagerInterface",
      "methods": [
        {
          "name": "ScanDependenciesForVulnerabilities",
          "signature": "ScanDependenciesForVulnerabilities(ctx context.Context, deps []Dependency) (*SecurityAuditResult, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "deps",
              "type": "[]Dependency"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "*SecurityAuditResult"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\manager_interfaces.go",
            "Offset": 179,
            "Line": 10,
            "Column": 2
          }
        },
        {
          "name": "ValidateAPIKeyAccess",
          "signature": "ValidateAPIKeyAccess(ctx context.Context, key string) (bool, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "key",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "bool"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\manager_interfaces.go",
            "Offset": 286,
            "Line": 11,
            "Column": 2
          }
        },
        {
          "name": "HealthCheck",
          "signature": "HealthCheck(ctx context.Context) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\manager_interfaces.go",
            "Offset": 356,
            "Line": 12,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\manager_interfaces.go",
      "package": "main",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\manager_interfaces.go",
        "Offset": 140,
        "Line": 9,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    },
    {
      "name": "MonitoringManagerInterface",
      "methods": [
        {
          "name": "StartOperationMonitoring",
          "signature": "StartOperationMonitoring(ctx context.Context, operation string) (*OperationMetrics, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "operation",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "*OperationMetrics"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\manager_interfaces.go",
            "Offset": 534,
            "Line": 17,
            "Column": 2
          }
        },
        {
          "name": "StopOperationMonitoring",
          "signature": "StopOperationMonitoring(ctx context.Context, metrics *OperationMetrics) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "metrics",
              "type": "*OperationMetrics"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\manager_interfaces.go",
            "Offset": 627,
            "Line": 18,
            "Column": 2
          }
        },
        {
          "name": "CheckSystemHealth",
          "signature": "CheckSystemHealth(ctx context.Context) (*HealthStatus, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "*HealthStatus"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\manager_interfaces.go",
            "Offset": 707,
            "Line": 19,
            "Column": 2
          }
        },
        {
          "name": "ConfigureAlerts",
          "signature": "ConfigureAlerts(ctx context.Context, config *AlertConfig) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "config",
              "type": "*AlertConfig"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\manager_interfaces.go",
            "Offset": 771,
            "Line": 20,
            "Column": 2
          }
        },
        {
          "name": "HealthCheck",
          "signature": "HealthCheck(ctx context.Context) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\manager_interfaces.go",
            "Offset": 837,
            "Line": 21,
            "Column": 2
          }
        },
        {
          "name": "CollectMetrics",
          "signature": "CollectMetrics(ctx context.Context) (*SystemMetrics, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "*SystemMetrics"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\manager_interfaces.go",
            "Offset": 878,
            "Line": 22,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\manager_interfaces.go",
      "package": "main",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\manager_interfaces.go",
        "Offset": 493,
        "Line": 16,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    },
    {
      "name": "StorageManagerInterface",
      "methods": [
        {
          "name": "SaveDependencyMetadata",
          "signature": "SaveDependencyMetadata(ctx context.Context, metadata *DependencyMetadata) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "metadata",
              "type": "*DependencyMetadata"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\manager_interfaces.go",
            "Offset": 1068,
            "Line": 27,
            "Column": 2
          }
        },
        {
          "name": "GetDependencyMetadata",
          "signature": "GetDependencyMetadata(ctx context.Context, name string) (*DependencyMetadata, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "name",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "*DependencyMetadata"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\manager_interfaces.go",
            "Offset": 1150,
            "Line": 28,
            "Column": 2
          }
        },
        {
          "name": "QueryDependencies",
          "signature": "QueryDependencies(ctx context.Context, query *DependencyQuery) ([]*DependencyMetadata, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "query",
              "type": "*DependencyQuery"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "[]*DependencyMetadata"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\manager_interfaces.go",
            "Offset": 1237,
            "Line": 29,
            "Column": 2
          }
        },
        {
          "name": "HealthCheck",
          "signature": "HealthCheck(ctx context.Context) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\manager_interfaces.go",
            "Offset": 1333,
            "Line": 30,
            "Column": 2
          }
        },
        {
          "name": "StoreObject",
          "signature": "StoreObject(ctx context.Context, key string, data interface{}) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "key",
              "type": "string"
            },
            {
              "name": "data",
              "type": "interface{}"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\manager_interfaces.go",
            "Offset": 1374,
            "Line": 31,
            "Column": 2
          }
        },
        {
          "name": "GetObject",
          "signature": "GetObject(ctx context.Context, key string, target interface{}) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "key",
              "type": "string"
            },
            {
              "name": "target",
              "type": "interface{}"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\manager_interfaces.go",
            "Offset": 1445,
            "Line": 32,
            "Column": 2
          }
        },
        {
          "name": "DeleteObject",
          "signature": "DeleteObject(ctx context.Context, key string) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "key",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\manager_interfaces.go",
            "Offset": 1516,
            "Line": 33,
            "Column": 2
          }
        },
        {
          "name": "ListObjects",
          "signature": "ListObjects(ctx context.Context, prefix string) ([]string, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "prefix",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "[]string"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\manager_interfaces.go",
            "Offset": 1570,
            "Line": 34,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\manager_interfaces.go",
      "package": "main",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\manager_interfaces.go",
        "Offset": 1030,
        "Line": 26,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    },
    {
      "name": "ContainerManagerInterface",
      "methods": [
        {
          "name": "ValidateForContainerization",
          "signature": "ValidateForContainerization(ctx context.Context, deps []Dependency) (*ContainerValidationResult, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "deps",
              "type": "[]Dependency"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "*ContainerValidationResult"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\manager_interfaces.go",
            "Offset": 1772,
            "Line": 39,
            "Column": 2
          }
        },
        {
          "name": "OptimizeForContainer",
          "signature": "OptimizeForContainer(ctx context.Context, deps []Dependency) (*ContainerOptimization, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "deps",
              "type": "[]Dependency"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "*ContainerOptimization"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\manager_interfaces.go",
            "Offset": 1878,
            "Line": 40,
            "Column": 2
          }
        },
        {
          "name": "HealthCheck",
          "signature": "HealthCheck(ctx context.Context) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\manager_interfaces.go",
            "Offset": 1973,
            "Line": 41,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\manager_interfaces.go",
      "package": "main",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\manager_interfaces.go",
        "Offset": 1732,
        "Line": 38,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    },
    {
      "name": "DeploymentManagerInterface",
      "methods": [
        {
          "name": "CheckDeploymentReadiness",
          "signature": "CheckDeploymentReadiness(ctx context.Context, deps []Dependency, env string) (*DeploymentReadiness, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "deps",
              "type": "[]Dependency"
            },
            {
              "name": "env",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "*DeploymentReadiness"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\manager_interfaces.go",
            "Offset": 2151,
            "Line": 46,
            "Column": 2
          }
        },
        {
          "name": "GenerateDeploymentPlan",
          "signature": "GenerateDeploymentPlan(ctx context.Context, deps []Dependency, env string) (*DeploymentPlan, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "deps",
              "type": "[]Dependency"
            },
            {
              "name": "env",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "*DeploymentPlan"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\manager_interfaces.go",
            "Offset": 2260,
            "Line": 47,
            "Column": 2
          }
        },
        {
          "name": "HealthCheck",
          "signature": "HealthCheck(ctx context.Context) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\manager_interfaces.go",
            "Offset": 2362,
            "Line": 48,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\manager_interfaces.go",
      "package": "main",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\manager_interfaces.go",
        "Offset": 2110,
        "Line": 45,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    },
    {
      "name": "DeploymentManager",
      "methods": [
        {
          "name": "Initialize",
          "signature": "Initialize(ctx context.Context) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\deployment-manager\\development\\deployment_manager.go",
            "Offset": 287,
            "Line": 20,
            "Column": 2
          }
        },
        {
          "name": "BuildApplication",
          "signature": "BuildApplication(ctx context.Context, target string) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "target",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\deployment-manager\\development\\deployment_manager.go",
            "Offset": 327,
            "Line": 21,
            "Column": 2
          }
        },
        {
          "name": "DeployToEnvironment",
          "signature": "DeployToEnvironment(ctx context.Context, environment string) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "environment",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\deployment-manager\\development\\deployment_manager.go",
            "Offset": 388,
            "Line": 22,
            "Column": 2
          }
        },
        {
          "name": "BuildDockerImage",
          "signature": "BuildDockerImage(ctx context.Context, tag string) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "tag",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\deployment-manager\\development\\deployment_manager.go",
            "Offset": 457,
            "Line": 23,
            "Column": 2
          }
        },
        {
          "name": "CreateRelease",
          "signature": "CreateRelease(ctx context.Context, version string) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "version",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\deployment-manager\\development\\deployment_manager.go",
            "Offset": 515,
            "Line": 24,
            "Column": 2
          }
        },
        {
          "name": "HealthCheck",
          "signature": "HealthCheck(ctx context.Context) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\deployment-manager\\development\\deployment_manager.go",
            "Offset": 574,
            "Line": 25,
            "Column": 2
          }
        },
        {
          "name": "Cleanup",
          "signature": "Cleanup() error",
          "parameters": [],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\deployment-manager\\development\\deployment_manager.go",
            "Offset": 615,
            "Line": 26,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\deployment-manager\\development\\deployment_manager.go",
      "package": "main",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\deployment-manager\\development\\deployment_manager.go",
        "Offset": 255,
        "Line": 19,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    },
    {
      "name": "ErrorManager",
      "methods": [
        {
          "name": "ProcessError",
          "signature": "ProcessError(ctx context.Context, err error, component string, operation string, hooks *ErrorHooks) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "err",
              "type": "error"
            },
            {
              "name": "component",
              "type": "string"
            },
            {
              "name": "operation",
              "type": "string"
            },
            {
              "name": "hooks",
              "type": "*ErrorHooks"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\deployment-manager\\development\\deployment_manager.go",
            "Offset": 2108,
            "Line": 66,
            "Column": 2
          }
        },
        {
          "name": "CatalogError",
          "signature": "CatalogError(ctx context.Context, entry *ErrorEntry) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "entry",
              "type": "*ErrorEntry"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\deployment-manager\\development\\deployment_manager.go",
            "Offset": 2209,
            "Line": 67,
            "Column": 2
          }
        },
        {
          "name": "ValidateErrorEntry",
          "signature": "ValidateErrorEntry(entry *ErrorEntry) error",
          "parameters": [
            {
              "name": "entry",
              "type": "*ErrorEntry"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\deployment-manager\\development\\deployment_manager.go",
            "Offset": 2270,
            "Line": 68,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\deployment-manager\\development\\deployment_manager.go",
      "package": "main",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\deployment-manager\\development\\deployment_manager.go",
        "Offset": 2081,
        "Line": 65,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    },
    {
      "name": "SpecificFixer",
      "methods": [
        {
          "name": "CanFix",
          "signature": "CanFix(issue StaticIssue) bool",
          "parameters": [
            {
              "name": "issue",
              "type": "StaticIssue"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "bool"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\error-manager\\auto_fix\\suggestion_engine.go",
            "Offset": 5519,
            "Line": 152,
            "Column": 2
          }
        },
        {
          "name": "GenerateFix",
          "signature": "GenerateFix(issue StaticIssue, fset *token.FileSet, file *ast.File) (*FixSuggestion, error)",
          "parameters": [
            {
              "name": "issue",
              "type": "StaticIssue"
            },
            {
              "name": "fset",
              "type": "*token.FileSet"
            },
            {
              "name": "file",
              "type": "*ast.File"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "*FixSuggestion"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\error-manager\\auto_fix\\suggestion_engine.go",
            "Offset": 5552,
            "Line": 153,
            "Column": 2
          }
        },
        {
          "name": "GetCategory",
          "signature": "GetCategory() FixCategory",
          "parameters": [],
          "returns": [
            {
              "name": "",
              "type": "FixCategory"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\error-manager\\auto_fix\\suggestion_engine.go",
            "Offset": 5646,
            "Line": 154,
            "Column": 2
          }
        },
        {
          "name": "GetConfidence",
          "signature": "GetConfidence() float64",
          "parameters": [],
          "returns": [
            {
              "name": "",
              "type": "float64"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\error-manager\\auto_fix\\suggestion_engine.go",
            "Offset": 5674,
            "Line": 155,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\error-manager\\auto_fix\\suggestion_engine.go",
      "package": "auto_fix",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\error-manager\\auto_fix\\suggestion_engine.go",
        "Offset": 5491,
        "Line": 151,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    },
    {
      "name": "LintRule",
      "methods": [
        {
          "name": "Name",
          "signature": "Name() string",
          "parameters": [],
          "returns": [
            {
              "name": "",
              "type": "string"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\error-manager\\static\\ast_analyzer.go",
            "Offset": 5165,
            "Line": 148,
            "Column": 2
          }
        },
        {
          "name": "Description",
          "signature": "Description() string",
          "parameters": [],
          "returns": [
            {
              "name": "",
              "type": "string"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\error-manager\\static\\ast_analyzer.go",
            "Offset": 5181,
            "Line": 149,
            "Column": 2
          }
        },
        {
          "name": "Category",
          "signature": "Category() IssueCategory",
          "parameters": [],
          "returns": [
            {
              "name": "",
              "type": "IssueCategory"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\error-manager\\static\\ast_analyzer.go",
            "Offset": 5204,
            "Line": 150,
            "Column": 2
          }
        },
        {
          "name": "Severity",
          "signature": "Severity() IssueSeverity",
          "parameters": [],
          "returns": [
            {
              "name": "",
              "type": "IssueSeverity"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\error-manager\\static\\ast_analyzer.go",
            "Offset": 5231,
            "Line": 151,
            "Column": 2
          }
        },
        {
          "name": "Check",
          "signature": "Check(file *ast.File, fset *token.FileSet, info *types.Info) []StaticIssue",
          "parameters": [
            {
              "name": "file",
              "type": "*ast.File"
            },
            {
              "name": "fset",
              "type": "*token.FileSet"
            },
            {
              "name": "info",
              "type": "*types.Info"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "[]StaticIssue"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\error-manager\\static\\ast_analyzer.go",
            "Offset": 5258,
            "Line": 152,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\error-manager\\static\\ast_analyzer.go",
      "package": "static",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\error-manager\\static\\ast_analyzer.go",
        "Offset": 5142,
        "Line": 147,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    },
    {
      "name": "IConformityChecker",
      "methods": [
        {
          "name": "CheckManager",
          "signature": "CheckManager(ctx context.Context, managerName string) (*ConformityReport, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "managerName",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "*ConformityReport"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [
            " CheckManager vérifie la conformité d'un manager spécifique"
          ],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\conformity_manager.go",
            "Offset": 414,
            "Line": 21,
            "Column": 2
          }
        },
        {
          "name": "CheckEcosystem",
          "signature": "CheckEcosystem(ctx context.Context) (*EcosystemConformityReport, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "*EcosystemConformityReport"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [
            " CheckEcosystem vérifie la conformité de tout l'écosystème"
          ],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\conformity_manager.go",
            "Offset": 566,
            "Line": 24,
            "Column": 2
          }
        },
        {
          "name": "CheckArchitecture",
          "signature": "CheckArchitecture(ctx context.Context, managerPath string) (*ArchitectureReport, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "managerPath",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "*ArchitectureReport"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [
            " CheckArchitecture vérifie la conformité architecturale (SOLID/DRY/KISS)"
          ],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\conformity_manager.go",
            "Offset": 721,
            "Line": 27,
            "Column": 2
          }
        },
        {
          "name": "CheckErrorManagerIntegration",
          "signature": "CheckErrorManagerIntegration(ctx context.Context, managerName string) (*IntegrationReport, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "managerName",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "*IntegrationReport"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [
            " CheckErrorManagerIntegration vérifie l'intégration ErrorManager"
          ],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\conformity_manager.go",
            "Offset": 884,
            "Line": 30,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\conformity_manager.go",
      "package": "integratedmanager",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\conformity_manager.go",
        "Offset": 314,
        "Line": 19,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    },
    {
      "name": "IDocumentationValidator",
      "methods": [
        {
          "name": "ValidateReadme",
          "signature": "ValidateReadme(ctx context.Context, readmePath string) (*DocumentationReport, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "readmePath",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "*DocumentationReport"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [
            " ValidateReadme vérifie la conformité du README.md"
          ],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\conformity_manager.go",
            "Offset": 1158,
            "Line": 36,
            "Column": 2
          }
        },
        {
          "name": "ValidateAPIDocumentation",
          "signature": "ValidateAPIDocumentation(ctx context.Context, packagePath string) (*APIDocReport, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "packagePath",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "*APIDocReport"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [
            " ValidateAPIDocumentation vérifie la documentation API (GoDoc)"
          ],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\conformity_manager.go",
            "Offset": 1315,
            "Line": 39,
            "Column": 2
          }
        },
        {
          "name": "ValidateExamples",
          "signature": "ValidateExamples(ctx context.Context, examplesPath string) (*ExamplesReport, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "examplesPath",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "*ExamplesReport"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [
            " ValidateExamples vérifie les exemples de code"
          ],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\conformity_manager.go",
            "Offset": 1460,
            "Line": 42,
            "Column": 2
          }
        },
        {
          "name": "ValidateArchitectureDiagrams",
          "signature": "ValidateArchitectureDiagrams(ctx context.Context, diagramsPath string) (*DiagramsReport, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "diagramsPath",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "*DiagramsReport"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [
            " ValidateArchitectureDiagrams vérifie les diagrammes d'architecture"
          ],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\conformity_manager.go",
            "Offset": 1621,
            "Line": 45,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\conformity_manager.go",
      "package": "integratedmanager",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\conformity_manager.go",
        "Offset": 1063,
        "Line": 34,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    },
    {
      "name": "IMetricsCollector",
      "methods": [
        {
          "name": "CollectCodeMetrics",
          "signature": "CollectCodeMetrics(ctx context.Context, sourcePath string) (*CodeMetrics, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "sourcePath",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "*CodeMetrics"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [
            " CollectCodeMetrics collecte les métriques de qualité du code"
          ],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\conformity_manager.go",
            "Offset": 1891,
            "Line": 51,
            "Column": 2
          }
        },
        {
          "name": "CollectTestCoverage",
          "signature": "CollectTestCoverage(ctx context.Context, packagePath string) (*TestCoverageMetrics, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "packagePath",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "*TestCoverageMetrics"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [
            " CollectTestCoverage collecte les métriques de couverture de tests"
          ],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\conformity_manager.go",
            "Offset": 2048,
            "Line": 54,
            "Column": 2
          }
        },
        {
          "name": "CollectPerformanceMetrics",
          "signature": "CollectPerformanceMetrics(ctx context.Context, managerName string) (*PerformanceMetrics, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "managerName",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "*PerformanceMetrics"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [
            " CollectPerformanceMetrics collecte les métriques de performance"
          ],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\conformity_manager.go",
            "Offset": 2213,
            "Line": 57,
            "Column": 2
          }
        },
        {
          "name": "CollectDependencyMetrics",
          "signature": "CollectDependencyMetrics(ctx context.Context, modulePath string) (*DependencyMetrics, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "modulePath",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "*DependencyMetrics"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [
            " CollectDependencyMetrics collecte les métriques de dépendances"
          ],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\conformity_manager.go",
            "Offset": 2383,
            "Line": 60,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\conformity_manager.go",
      "package": "integratedmanager",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\conformity_manager.go",
        "Offset": 1791,
        "Line": 49,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    },
    {
      "name": "IComplianceReporter",
      "methods": [
        {
          "name": "GenerateReport",
          "signature": "GenerateReport(ctx context.Context, data interface{}, format ReportFormat) ([]byte, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "data",
              "type": "interface{}"
            },
            {
              "name": "format",
              "type": "ReportFormat"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "[]byte"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [
            " GenerateReport génère un rapport de conformité dans le format spécifié"
          ],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\conformity_manager.go",
            "Offset": 2669,
            "Line": 66,
            "Column": 2
          }
        },
        {
          "name": "GenerateBadge",
          "signature": "GenerateBadge(ctx context.Context, badgeType BadgeType, score float64) ([]byte, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "badgeType",
              "type": "BadgeType"
            },
            {
              "name": "score",
              "type": "float64"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "[]byte"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [
            " GenerateBadge génère un badge SVG de conformité"
          ],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\conformity_manager.go",
            "Offset": 2820,
            "Line": 69,
            "Column": 2
          }
        },
        {
          "name": "GenerateDashboard",
          "signature": "GenerateDashboard(ctx context.Context, ecosystemReport *EcosystemConformityReport) ([]byte, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "ecosystemReport",
              "type": "*EcosystemConformityReport"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "[]byte"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [
            " GenerateDashboard génère un tableau de bord HTML interactif"
          ],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\conformity_manager.go",
            "Offset": 2978,
            "Line": 72,
            "Column": 2
          }
        },
        {
          "name": "ExportMetrics",
          "signature": "ExportMetrics(ctx context.Context, metrics interface{}, target ExportTarget) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "metrics",
              "type": "interface{}"
            },
            {
              "name": "target",
              "type": "ExportTarget"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [
            " ExportMetrics exporte les métriques vers des systèmes externes"
          ],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\conformity_manager.go",
            "Offset": 3151,
            "Line": 75,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\conformity_manager.go",
      "package": "integratedmanager",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\conformity_manager.go",
        "Offset": 2554,
        "Line": 64,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    },
    {
      "name": "Validator",
      "methods": [
        {
          "name": "ValidateFix",
          "signature": "ValidateFix(ctx context.Context, fix *Fix) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "fix",
              "type": "*Fix"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\demos\\integration_demo_new.go",
            "Offset": 1357,
            "Line": 57,
            "Column": 2
          }
        },
        {
          "name": "ValidateFile",
          "signature": "ValidateFile(ctx context.Context, filePath string) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "filePath",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\demos\\integration_demo_new.go",
            "Offset": 1408,
            "Line": 58,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\demos\\integration_demo_new.go",
      "package": "main",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\demos\\integration_demo_new.go",
        "Offset": 1333,
        "Line": 56,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    },
    {
      "name": "IConformityManager",
      "methods": [
        {
          "name": "VerifyManagerConformity",
          "signature": "VerifyManagerConformity(ctx context.Context, managerName string) (*ConformityReport, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "managerName",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "*ConformityReport"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\error_integration.go",
            "Offset": 362,
            "Line": 17,
            "Column": 2
          }
        },
        {
          "name": "VerifyEcosystemConformity",
          "signature": "VerifyEcosystemConformity(ctx context.Context) (*EcosystemConformityReport, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "*EcosystemConformityReport"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\error_integration.go",
            "Offset": 456,
            "Line": 18,
            "Column": 2
          }
        },
        {
          "name": "GenerateConformityReport",
          "signature": "GenerateConformityReport(ctx context.Context, managerName string, format ReportFormat) ([]byte, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "managerName",
              "type": "string"
            },
            {
              "name": "format",
              "type": "ReportFormat"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "[]byte"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\error_integration.go",
            "Offset": 541,
            "Line": 19,
            "Column": 2
          }
        },
        {
          "name": "UpdateConformityStatus",
          "signature": "UpdateConformityStatus(ctx context.Context, managerName string, level ComplianceLevel) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "managerName",
              "type": "string"
            },
            {
              "name": "level",
              "type": "ComplianceLevel"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\error_integration.go",
            "Offset": 646,
            "Line": 20,
            "Column": 2
          }
        },
        {
          "name": "GetConformityConfig",
          "signature": "GetConformityConfig() *ConformityConfig",
          "parameters": [],
          "returns": [
            {
              "name": "",
              "type": "*ConformityConfig"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\error_integration.go",
            "Offset": 741,
            "Line": 21,
            "Column": 2
          }
        },
        {
          "name": "SetConformityConfig",
          "signature": "SetConformityConfig(config *ConformityConfig)",
          "parameters": [
            {
              "name": "config",
              "type": "*ConformityConfig"
            }
          ],
          "returns": [],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\error_integration.go",
            "Offset": 783,
            "Line": 22,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\error_integration.go",
      "package": "integratedmanager",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\error_integration.go",
        "Offset": 329,
        "Line": 16,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    },
    {
      "name": "ErrorManager",
      "methods": [
        {
          "name": "LogError",
          "signature": "LogError(err error, module string, code string)",
          "parameters": [
            {
              "name": "err",
              "type": "error"
            },
            {
              "name": "module",
              "type": "string"
            },
            {
              "name": "code",
              "type": "string"
            }
          ],
          "returns": [],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\error_integration.go",
            "Offset": 2609,
            "Line": 64,
            "Column": 2
          }
        },
        {
          "name": "CatalogError",
          "signature": "CatalogError(entry ErrorEntry) error",
          "parameters": [
            {
              "name": "entry",
              "type": "ErrorEntry"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\error_integration.go",
            "Offset": 2659,
            "Line": 65,
            "Column": 2
          }
        },
        {
          "name": "ValidateError",
          "signature": "ValidateError(entry ErrorEntry) error",
          "parameters": [
            {
              "name": "entry",
              "type": "ErrorEntry"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\error_integration.go",
            "Offset": 2698,
            "Line": 66,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\error_integration.go",
      "package": "integratedmanager",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\error_integration.go",
        "Offset": 2582,
        "Line": 63,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    },
    {
      "name": "BaseManager",
      "methods": [
        {
          "name": "HealthCheck",
          "signature": "HealthCheck(ctx context.Context) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\common.go",
            "Offset": 140,
            "Line": 9,
            "Column": 2
          }
        },
        {
          "name": "Initialize",
          "signature": "Initialize(ctx context.Context) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\common.go",
            "Offset": 180,
            "Line": 10,
            "Column": 2
          }
        },
        {
          "name": "Cleanup",
          "signature": "Cleanup() error",
          "parameters": [],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\common.go",
            "Offset": 219,
            "Line": 11,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\common.go",
      "package": "interfaces",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\common.go",
        "Offset": 115,
        "Line": 8,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    },
    {
      "name": "Initializer",
      "methods": [
        {
          "name": "Initialize",
          "signature": "Initialize(ctx context.Context) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\common.go",
            "Offset": 321,
            "Line": 16,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\common.go",
      "package": "interfaces",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\common.go",
        "Offset": 296,
        "Line": 15,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    },
    {
      "name": "HealthChecker",
      "methods": [
        {
          "name": "HealthCheck",
          "signature": "HealthCheck(ctx context.Context) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\common.go",
            "Offset": 459,
            "Line": 21,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\common.go",
      "package": "interfaces",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\common.go",
        "Offset": 432,
        "Line": 20,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    },
    {
      "name": "Cleaner",
      "methods": [
        {
          "name": "Cleanup",
          "signature": "Cleanup() error",
          "parameters": [],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\common.go",
            "Offset": 572,
            "Line": 26,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\common.go",
      "package": "interfaces",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\common.go",
        "Offset": 551,
        "Line": 25,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    },
    {
      "name": "ContainerManager",
      "methods": [
        {
          "name": "ValidateForContainerization",
          "signature": "ValidateForContainerization(ctx context.Context, deps []string) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "deps",
              "type": "[]string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\container.go",
            "Offset": 147,
            "Line": 8,
            "Column": 2
          }
        },
        {
          "name": "OptimizeForContainer",
          "signature": "OptimizeForContainer(ctx context.Context, config map[string]interface{}) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "config",
              "type": "map[string]interface{}"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\container.go",
            "Offset": 218,
            "Line": 9,
            "Column": 2
          }
        },
        {
          "name": "BuildImage",
          "signature": "BuildImage(ctx context.Context, config map[string]interface{}) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "config",
              "type": "map[string]interface{}"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\container.go",
            "Offset": 298,
            "Line": 10,
            "Column": 2
          }
        },
        {
          "name": "DeployContainer",
          "signature": "DeployContainer(ctx context.Context, config map[string]interface{}) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "config",
              "type": "map[string]interface{}"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\container.go",
            "Offset": 368,
            "Line": 11,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\container.go",
      "package": "interfaces",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\container.go",
        "Offset": 104,
        "Line": 6,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    },
    {
      "name": "DeploymentManager",
      "methods": [
        {
          "name": "CheckDeploymentReadiness",
          "signature": "CheckDeploymentReadiness(ctx context.Context, env string) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "env",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\deployment.go",
            "Offset": 152,
            "Line": 8,
            "Column": 2
          }
        },
        {
          "name": "GenerateDeploymentPlan",
          "signature": "GenerateDeploymentPlan(ctx context.Context, config map[string]interface{}) (string, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "config",
              "type": "map[string]interface{}"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "string"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\deployment.go",
            "Offset": 217,
            "Line": 9,
            "Column": 2
          }
        },
        {
          "name": "ExecuteDeployment",
          "signature": "ExecuteDeployment(ctx context.Context, plan string) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "plan",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\deployment.go",
            "Offset": 309,
            "Line": 10,
            "Column": 2
          }
        },
        {
          "name": "RollbackDeployment",
          "signature": "RollbackDeployment(ctx context.Context, version string) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "version",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\deployment.go",
            "Offset": 368,
            "Line": 11,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\deployment.go",
      "package": "interfaces",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\deployment.go",
        "Offset": 108,
        "Line": 6,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    },
    {
      "name": "MonitoringManager",
      "methods": [
        {
          "name": "StartOperationMonitoring",
          "signature": "StartOperationMonitoring(ctx context.Context, operation string) (*OperationMetrics, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "operation",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "*OperationMetrics"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\monitoring.go",
            "Offset": 139,
            "Line": 8,
            "Column": 2
          }
        },
        {
          "name": "StopOperationMonitoring",
          "signature": "StopOperationMonitoring(ctx context.Context, metrics *OperationMetrics) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "metrics",
              "type": "*OperationMetrics"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\monitoring.go",
            "Offset": 231,
            "Line": 9,
            "Column": 2
          }
        },
        {
          "name": "CheckSystemHealth",
          "signature": "CheckSystemHealth(ctx context.Context) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\monitoring.go",
            "Offset": 310,
            "Line": 10,
            "Column": 2
          }
        },
        {
          "name": "ConfigureAlerts",
          "signature": "ConfigureAlerts(ctx context.Context, config map[string]interface{}) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "config",
              "type": "map[string]interface{}"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\monitoring.go",
            "Offset": 356,
            "Line": 11,
            "Column": 2
          }
        },
        {
          "name": "CollectMetrics",
          "signature": "CollectMetrics(ctx context.Context) (*SystemMetrics, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "*SystemMetrics"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\monitoring.go",
            "Offset": 431,
            "Line": 12,
            "Column": 2
          }
        },
        {
          "name": "StartMonitoring",
          "signature": "StartMonitoring(ctx context.Context) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\monitoring.go",
            "Offset": 492,
            "Line": 13,
            "Column": 2
          }
        },
        {
          "name": "StopMonitoring",
          "signature": "StopMonitoring(ctx context.Context) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\monitoring.go",
            "Offset": 536,
            "Line": 14,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\monitoring.go",
      "package": "interfaces",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\monitoring.go",
        "Offset": 95,
        "Line": 6,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    },
    {
      "name": "SecurityManager",
      "methods": [
        {
          "name": "ScanDependenciesForVulnerabilities",
          "signature": "ScanDependenciesForVulnerabilities(ctx context.Context, deps []string) (*VulnerabilityReport, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "deps",
              "type": "[]string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "*VulnerabilityReport"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\security.go",
            "Offset": 147,
            "Line": 8,
            "Column": 2
          }
        },
        {
          "name": "ValidateAPIKeyAccess",
          "signature": "ValidateAPIKeyAccess(ctx context.Context, key string) (bool, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "key",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "bool"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\security.go",
            "Offset": 249,
            "Line": 9,
            "Column": 2
          }
        },
        {
          "name": "LoadSecrets",
          "signature": "LoadSecrets(ctx context.Context) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\security.go",
            "Offset": 318,
            "Line": 10,
            "Column": 2
          }
        },
        {
          "name": "GetSecret",
          "signature": "GetSecret(key string) (string, error)",
          "parameters": [
            {
              "name": "key",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "string"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\security.go",
            "Offset": 358,
            "Line": 11,
            "Column": 2
          }
        },
        {
          "name": "GenerateAPIKey",
          "signature": "GenerateAPIKey(ctx context.Context, scope string) (string, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "scope",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "string"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\security.go",
            "Offset": 397,
            "Line": 12,
            "Column": 2
          }
        },
        {
          "name": "EncryptData",
          "signature": "EncryptData(data []byte) ([]byte, error)",
          "parameters": [
            {
              "name": "data",
              "type": "[]byte"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "[]byte"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\security.go",
            "Offset": 464,
            "Line": 13,
            "Column": 2
          }
        },
        {
          "name": "DecryptData",
          "signature": "DecryptData(encryptedData []byte) ([]byte, error)",
          "parameters": [
            {
              "name": "encryptedData",
              "type": "[]byte"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "[]byte"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\security.go",
            "Offset": 506,
            "Line": 14,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\security.go",
      "package": "interfaces",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\security.go",
        "Offset": 105,
        "Line": 6,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    },
    {
      "name": "StorageManager",
      "methods": [
        {
          "name": "SaveDependencyMetadata",
          "signature": "SaveDependencyMetadata(ctx context.Context, metadata *DependencyMetadata) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "metadata",
              "type": "*DependencyMetadata"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\storage.go",
            "Offset": 140,
            "Line": 8,
            "Column": 2
          }
        },
        {
          "name": "GetDependencyMetadata",
          "signature": "GetDependencyMetadata(ctx context.Context, name string) (*DependencyMetadata, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "name",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "*DependencyMetadata"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\storage.go",
            "Offset": 221,
            "Line": 9,
            "Column": 2
          }
        },
        {
          "name": "QueryDependencies",
          "signature": "QueryDependencies(ctx context.Context, query string) ([]*DependencyMetadata, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "query",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "[]*DependencyMetadata"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\storage.go",
            "Offset": 307,
            "Line": 10,
            "Column": 2
          }
        },
        {
          "name": "StoreObject",
          "signature": "StoreObject(ctx context.Context, key string, obj interface{}) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "key",
              "type": "string"
            },
            {
              "name": "obj",
              "type": "interface{}"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\storage.go",
            "Offset": 392,
            "Line": 11,
            "Column": 2
          }
        },
        {
          "name": "GetObject",
          "signature": "GetObject(ctx context.Context, key string, obj interface{}) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "key",
              "type": "string"
            },
            {
              "name": "obj",
              "type": "interface{}"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\storage.go",
            "Offset": 461,
            "Line": 12,
            "Column": 2
          }
        },
        {
          "name": "DeleteObject",
          "signature": "DeleteObject(ctx context.Context, key string) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "key",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\storage.go",
            "Offset": 528,
            "Line": 13,
            "Column": 2
          }
        },
        {
          "name": "ListObjects",
          "signature": "ListObjects(ctx context.Context, prefix string) ([]string, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "prefix",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "[]string"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\storage.go",
            "Offset": 581,
            "Line": 14,
            "Column": 2
          }
        },
        {
          "name": "GetPostgreSQLConnection",
          "signature": "GetPostgreSQLConnection() (interface{}, error)",
          "parameters": [],
          "returns": [
            {
              "name": "",
              "type": "interface{}"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\storage.go",
            "Offset": 648,
            "Line": 15,
            "Column": 2
          }
        },
        {
          "name": "GetQdrantConnection",
          "signature": "GetQdrantConnection() (interface{}, error)",
          "parameters": [],
          "returns": [
            {
              "name": "",
              "type": "interface{}"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\storage.go",
            "Offset": 696,
            "Line": 16,
            "Column": 2
          }
        },
        {
          "name": "RunMigrations",
          "signature": "RunMigrations(ctx context.Context) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\storage.go",
            "Offset": 740,
            "Line": 17,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\storage.go",
      "package": "interfaces",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\storage.go",
        "Offset": 99,
        "Line": 6,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    },
    {
      "name": "MonitoringManager",
      "methods": [
        {
          "name": "Initialize",
          "signature": "Initialize(ctx context.Context) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\monitoring-manager\\development\\monitoring_manager.go",
            "Offset": 227,
            "Line": 16,
            "Column": 2
          }
        },
        {
          "name": "StartMonitoring",
          "signature": "StartMonitoring(ctx context.Context) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\monitoring-manager\\development\\monitoring_manager.go",
            "Offset": 267,
            "Line": 17,
            "Column": 2
          }
        },
        {
          "name": "StopMonitoring",
          "signature": "StopMonitoring(ctx context.Context) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\monitoring-manager\\development\\monitoring_manager.go",
            "Offset": 312,
            "Line": 18,
            "Column": 2
          }
        },
        {
          "name": "CollectMetrics",
          "signature": "CollectMetrics(ctx context.Context) (*SystemMetrics, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "*SystemMetrics"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\monitoring-manager\\development\\monitoring_manager.go",
            "Offset": 356,
            "Line": 19,
            "Column": 2
          }
        },
        {
          "name": "CheckSystemHealth",
          "signature": "CheckSystemHealth(ctx context.Context) (*HealthStatus, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "*HealthStatus"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\monitoring-manager\\development\\monitoring_manager.go",
            "Offset": 418,
            "Line": 20,
            "Column": 2
          }
        },
        {
          "name": "ConfigureAlerts",
          "signature": "ConfigureAlerts(ctx context.Context, config *AlertConfig) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "config",
              "type": "*AlertConfig"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\monitoring-manager\\development\\monitoring_manager.go",
            "Offset": 482,
            "Line": 21,
            "Column": 2
          }
        },
        {
          "name": "GenerateReport",
          "signature": "GenerateReport(ctx context.Context, duration time.Duration) (*PerformanceReport, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "duration",
              "type": "time.Duration"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "*PerformanceReport"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\monitoring-manager\\development\\monitoring_manager.go",
            "Offset": 548,
            "Line": 22,
            "Column": 2
          }
        },
        {
          "name": "StartOperationMonitoring",
          "signature": "StartOperationMonitoring(ctx context.Context, operation string) (*OperationMetrics, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "operation",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "*OperationMetrics"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\monitoring-manager\\development\\monitoring_manager.go",
            "Offset": 638,
            "Line": 23,
            "Column": 2
          }
        },
        {
          "name": "StopOperationMonitoring",
          "signature": "StopOperationMonitoring(ctx context.Context, metrics *OperationMetrics) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "metrics",
              "type": "*OperationMetrics"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\monitoring-manager\\development\\monitoring_manager.go",
            "Offset": 731,
            "Line": 24,
            "Column": 2
          }
        },
        {
          "name": "GetMetricsHistory",
          "signature": "GetMetricsHistory(ctx context.Context, duration time.Duration) ([]*SystemMetrics, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "duration",
              "type": "time.Duration"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "[]*SystemMetrics"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\monitoring-manager\\development\\monitoring_manager.go",
            "Offset": 811,
            "Line": 25,
            "Column": 2
          }
        },
        {
          "name": "HealthCheck",
          "signature": "HealthCheck(ctx context.Context) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\monitoring-manager\\development\\monitoring_manager.go",
            "Offset": 902,
            "Line": 26,
            "Column": 2
          }
        },
        {
          "name": "Cleanup",
          "signature": "Cleanup() error",
          "parameters": [],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\monitoring-manager\\development\\monitoring_manager.go",
            "Offset": 943,
            "Line": 27,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\monitoring-manager\\development\\monitoring_manager.go",
      "package": "main",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\monitoring-manager\\development\\monitoring_manager.go",
        "Offset": 195,
        "Line": 15,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    },
    {
      "name": "ErrorManager",
      "methods": [
        {
          "name": "ProcessError",
          "signature": "ProcessError(ctx context.Context, err error, component string, operation string, hooks *ErrorHooks) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "err",
              "type": "error"
            },
            {
              "name": "component",
              "type": "string"
            },
            {
              "name": "operation",
              "type": "string"
            },
            {
              "name": "hooks",
              "type": "*ErrorHooks"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\monitoring-manager\\development\\monitoring_manager.go",
            "Offset": 4543,
            "Line": 122,
            "Column": 2
          }
        },
        {
          "name": "CatalogError",
          "signature": "CatalogError(ctx context.Context, entry *ErrorEntry) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "entry",
              "type": "*ErrorEntry"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\monitoring-manager\\development\\monitoring_manager.go",
            "Offset": 4644,
            "Line": 123,
            "Column": 2
          }
        },
        {
          "name": "ValidateErrorEntry",
          "signature": "ValidateErrorEntry(entry *ErrorEntry) error",
          "parameters": [
            {
              "name": "entry",
              "type": "*ErrorEntry"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\monitoring-manager\\development\\monitoring_manager.go",
            "Offset": 4705,
            "Line": 124,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\monitoring-manager\\development\\monitoring_manager.go",
      "package": "main",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\monitoring-manager\\development\\monitoring_manager.go",
        "Offset": 4516,
        "Line": 121,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    },
    {
      "name": "RAGClient",
      "methods": [
        {
          "name": "IndexRoadmapItem",
          "signature": "IndexRoadmapItem(ctx context.Context, itemID string, title string, description string, metadata map[string]interface{}) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "itemID",
              "type": "string"
            },
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "description",
              "type": "string"
            },
            {
              "name": "metadata",
              "type": "map[string]interface{}"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\roadmap-manager\\roadmap-cli\\ingestion\\plans.go",
            "Offset": 644,
            "Line": 31,
            "Column": 2
          }
        },
        {
          "name": "HealthCheck",
          "signature": "HealthCheck(ctx context.Context) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\roadmap-manager\\roadmap-cli\\ingestion\\plans.go",
            "Offset": 758,
            "Line": 32,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\roadmap-manager\\roadmap-cli\\ingestion\\plans.go",
      "package": "ingestion",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\roadmap-manager\\roadmap-cli\\ingestion\\plans.go",
        "Offset": 620,
        "Line": 30,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    },
    {
      "name": "Storage",
      "methods": [
        {
          "name": "CreateEnrichedItem",
          "signature": "CreateEnrichedItem(types.EnrichedItemOptions) (*types.RoadmapItem, error)",
          "parameters": [
            {
              "name": "",
              "type": "types.EnrichedItemOptions"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "*types.RoadmapItem"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\roadmap-manager\\roadmap-cli\\ingestion\\plans.go",
            "Offset": 29072,
            "Line": 885,
            "Column": 2
          }
        },
        {
          "name": "GetAllItems",
          "signature": "GetAllItems() ([]types.RoadmapItem, error)",
          "parameters": [],
          "returns": [
            {
              "name": "",
              "type": "[]types.RoadmapItem"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\roadmap-manager\\roadmap-cli\\ingestion\\plans.go",
            "Offset": 29148,
            "Line": 886,
            "Column": 2
          }
        },
        {
          "name": "Close",
          "signature": "Close() error",
          "parameters": [],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\roadmap-manager\\roadmap-cli\\ingestion\\plans.go",
            "Offset": 29193,
            "Line": 887,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\roadmap-manager\\roadmap-cli\\ingestion\\plans.go",
      "package": "ingestion",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\roadmap-manager\\roadmap-cli\\ingestion\\plans.go",
        "Offset": 29050,
        "Line": 884,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    },
    {
      "name": "PriorityCalculator",
      "methods": [
        {
          "name": "Calculate",
          "signature": "Calculate(item types.RoadmapItem, config WeightingConfig) (TaskPriority, error)",
          "parameters": [
            {
              "name": "item",
              "type": "types.RoadmapItem"
            },
            {
              "name": "config",
              "type": "WeightingConfig"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "TaskPriority"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\roadmap-manager\\roadmap-cli\\priority\\engine.go",
            "Offset": 1947,
            "Line": 55,
            "Column": 2
          }
        },
        {
          "name": "GetName",
          "signature": "GetName() string",
          "parameters": [],
          "returns": [
            {
              "name": "",
              "type": "string"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\roadmap-manager\\roadmap-cli\\priority\\engine.go",
            "Offset": 2029,
            "Line": 56,
            "Column": 2
          }
        },
        {
          "name": "GetDescription",
          "signature": "GetDescription() string",
          "parameters": [],
          "returns": [
            {
              "name": "",
              "type": "string"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\roadmap-manager\\roadmap-cli\\priority\\engine.go",
            "Offset": 2048,
            "Line": 57,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\roadmap-manager\\roadmap-cli\\priority\\engine.go",
      "package": "priority",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\roadmap-manager\\roadmap-cli\\priority\\engine.go",
        "Offset": 1914,
        "Line": 54,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    },
    {
      "name": "PriorityEngine",
      "methods": [
        {
          "name": "Calculate",
          "signature": "Calculate(item types.RoadmapItem) (TaskPriority, error)",
          "parameters": [
            {
              "name": "item",
              "type": "types.RoadmapItem"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "TaskPriority"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\roadmap-manager\\roadmap-cli\\priority\\engine.go",
            "Offset": 2185,
            "Line": 62,
            "Column": 2
          }
        },
        {
          "name": "Update",
          "signature": "Update(taskID string) error",
          "parameters": [
            {
              "name": "taskID",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\roadmap-manager\\roadmap-cli\\priority\\engine.go",
            "Offset": 2243,
            "Line": 63,
            "Column": 2
          }
        },
        {
          "name": "Rank",
          "signature": "Rank(items []types.RoadmapItem) ([]types.RoadmapItem, error)",
          "parameters": [
            {
              "name": "items",
              "type": "[]types.RoadmapItem"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "[]types.RoadmapItem"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\roadmap-manager\\roadmap-cli\\priority\\engine.go",
            "Offset": 2273,
            "Line": 64,
            "Column": 2
          }
        },
        {
          "name": "SetCalculator",
          "signature": "SetCalculator(calculator PriorityCalculator)",
          "parameters": [
            {
              "name": "calculator",
              "type": "PriorityCalculator"
            }
          ],
          "returns": [],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\roadmap-manager\\roadmap-cli\\priority\\engine.go",
            "Offset": 2336,
            "Line": 65,
            "Column": 2
          }
        },
        {
          "name": "SetWeightingConfig",
          "signature": "SetWeightingConfig(config WeightingConfig)",
          "parameters": [
            {
              "name": "config",
              "type": "WeightingConfig"
            }
          ],
          "returns": [],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\roadmap-manager\\roadmap-cli\\priority\\engine.go",
            "Offset": 2383,
            "Line": 66,
            "Column": 2
          }
        },
        {
          "name": "GetWeightingConfig",
          "signature": "GetWeightingConfig() WeightingConfig",
          "parameters": [],
          "returns": [
            {
              "name": "",
              "type": "WeightingConfig"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\roadmap-manager\\roadmap-cli\\priority\\engine.go",
            "Offset": 2428,
            "Line": 67,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\roadmap-manager\\roadmap-cli\\priority\\engine.go",
      "package": "priority",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\roadmap-manager\\roadmap-cli\\priority\\engine.go",
        "Offset": 2156,
        "Line": 61,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    },
    {
      "name": "CircuitBreaker",
      "methods": [
        {
          "name": "Call",
          "signature": "Call(fn unknown) error",
          "parameters": [
            {
              "name": "fn",
              "type": "unknown"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\roadmap-manager\\roadmap-cli\\tui\\navigation\\mode_manager.go",
            "Offset": 722,
            "Line": 28,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\roadmap-manager\\roadmap-cli\\tui\\navigation\\mode_manager.go",
      "package": "navigation",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\roadmap-manager\\roadmap-cli\\tui\\navigation\\mode_manager.go",
        "Offset": 693,
        "Line": 27,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    },
    {
      "name": "ContentSerializer",
      "methods": [
        {
          "name": "GetType",
          "signature": "GetType() string",
          "parameters": [],
          "returns": [
            {
              "name": "",
              "type": "string"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\roadmap-manager\\roadmap-cli\\tui\\panels\\context.go",
            "Offset": 5188,
            "Line": 163,
            "Column": 2
          }
        },
        {
          "name": "Serialize",
          "signature": "Serialize() (interface{}, error)",
          "parameters": [],
          "returns": [
            {
              "name": "",
              "type": "interface{}"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\roadmap-manager\\roadmap-cli\\tui\\panels\\context.go",
            "Offset": 5207,
            "Line": 164,
            "Column": 2
          }
        },
        {
          "name": "Deserialize",
          "signature": "Deserialize(data interface{}) error",
          "parameters": [
            {
              "name": "data",
              "type": "interface{}"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\roadmap-manager\\roadmap-cli\\tui\\panels\\context.go",
            "Offset": 5242,
            "Line": 165,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\roadmap-manager\\roadmap-cli\\tui\\panels\\context.go",
      "package": "panels",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\roadmap-manager\\roadmap-cli\\tui\\panels\\context.go",
        "Offset": 5156,
        "Line": 162,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    },
    {
      "name": "ValidationRule",
      "methods": [
        {
          "name": "Name",
          "signature": "Name() string",
          "parameters": [],
          "returns": [
            {
              "name": "",
              "type": "string"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\roadmap-manager\\roadmap-cli\\tui\\panels\\context.go",
            "Offset": 43974,
            "Line": 1550,
            "Column": 2
          }
        },
        {
          "name": "Description",
          "signature": "Description() string",
          "parameters": [],
          "returns": [
            {
              "name": "",
              "type": "string"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\roadmap-manager\\roadmap-cli\\tui\\panels\\context.go",
            "Offset": 43990,
            "Line": 1551,
            "Column": 2
          }
        },
        {
          "name": "Validate",
          "signature": "Validate(*ContextState) *ValidationError",
          "parameters": [
            {
              "name": "",
              "type": "*ContextState"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "*ValidationError"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\roadmap-manager\\roadmap-cli\\tui\\panels\\context.go",
            "Offset": 44013,
            "Line": 1552,
            "Column": 2
          }
        },
        {
          "name": "Severity",
          "signature": "Severity() ValidationSeverity",
          "parameters": [],
          "returns": [
            {
              "name": "",
              "type": "ValidationSeverity"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\roadmap-manager\\roadmap-cli\\tui\\panels\\context.go",
            "Offset": 44056,
            "Line": 1553,
            "Column": 2
          }
        },
        {
          "name": "AutoRepair",
          "signature": "AutoRepair() bool",
          "parameters": [],
          "returns": [
            {
              "name": "",
              "type": "bool"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\roadmap-manager\\roadmap-cli\\tui\\panels\\context.go",
            "Offset": 44088,
            "Line": 1554,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\roadmap-manager\\roadmap-cli\\tui\\panels\\context.go",
      "package": "panels",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\roadmap-manager\\roadmap-cli\\tui\\panels\\context.go",
        "Offset": 43945,
        "Line": 1549,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    },
    {
      "name": "SecurityManager",
      "methods": [
        {
          "name": "Initialize",
          "signature": "Initialize(ctx context.Context) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\security-manager\\development\\security_manager.go",
            "Offset": 334,
            "Line": 23,
            "Column": 2
          }
        },
        {
          "name": "LoadSecrets",
          "signature": "LoadSecrets(ctx context.Context) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\security-manager\\development\\security_manager.go",
            "Offset": 374,
            "Line": 24,
            "Column": 2
          }
        },
        {
          "name": "GetSecret",
          "signature": "GetSecret(key string) (string, error)",
          "parameters": [
            {
              "name": "key",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "string"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\security-manager\\development\\security_manager.go",
            "Offset": 415,
            "Line": 25,
            "Column": 2
          }
        },
        {
          "name": "GenerateAPIKey",
          "signature": "GenerateAPIKey(ctx context.Context, scope string) (string, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "scope",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "string"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\security-manager\\development\\security_manager.go",
            "Offset": 455,
            "Line": 26,
            "Column": 2
          }
        },
        {
          "name": "ValidateAPIKey",
          "signature": "ValidateAPIKey(ctx context.Context, key string) (bool, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "key",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "bool"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\security-manager\\development\\security_manager.go",
            "Offset": 523,
            "Line": 27,
            "Column": 2
          }
        },
        {
          "name": "EncryptData",
          "signature": "EncryptData(data []byte) ([]byte, error)",
          "parameters": [
            {
              "name": "data",
              "type": "[]byte"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "[]byte"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\security-manager\\development\\security_manager.go",
            "Offset": 587,
            "Line": 28,
            "Column": 2
          }
        },
        {
          "name": "DecryptData",
          "signature": "DecryptData(encryptedData []byte) ([]byte, error)",
          "parameters": [
            {
              "name": "encryptedData",
              "type": "[]byte"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "[]byte"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\security-manager\\development\\security_manager.go",
            "Offset": 630,
            "Line": 29,
            "Column": 2
          }
        },
        {
          "name": "ScanForVulnerabilities",
          "signature": "ScanForVulnerabilities(ctx context.Context, dependencies []Dependency) (*VulnerabilityReport, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "dependencies",
              "type": "[]Dependency"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "*VulnerabilityReport"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\security-manager\\development\\security_manager.go",
            "Offset": 682,
            "Line": 30,
            "Column": 2
          }
        },
        {
          "name": "HealthCheck",
          "signature": "HealthCheck(ctx context.Context) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\security-manager\\development\\security_manager.go",
            "Offset": 785,
            "Line": 31,
            "Column": 2
          }
        },
        {
          "name": "Cleanup",
          "signature": "Cleanup() error",
          "parameters": [],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\security-manager\\development\\security_manager.go",
            "Offset": 826,
            "Line": 32,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\security-manager\\development\\security_manager.go",
      "package": "main",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\security-manager\\development\\security_manager.go",
        "Offset": 304,
        "Line": 22,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    },
    {
      "name": "ErrorManager",
      "methods": [
        {
          "name": "ProcessError",
          "signature": "ProcessError(ctx context.Context, err error, component string, operation string, hooks *ErrorHooks) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "err",
              "type": "error"
            },
            {
              "name": "component",
              "type": "string"
            },
            {
              "name": "operation",
              "type": "string"
            },
            {
              "name": "hooks",
              "type": "*ErrorHooks"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\security-manager\\development\\security_manager.go",
            "Offset": 2269,
            "Line": 73,
            "Column": 2
          }
        },
        {
          "name": "CatalogError",
          "signature": "CatalogError(ctx context.Context, entry *ErrorEntry) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "entry",
              "type": "*ErrorEntry"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\security-manager\\development\\security_manager.go",
            "Offset": 2370,
            "Line": 74,
            "Column": 2
          }
        },
        {
          "name": "ValidateErrorEntry",
          "signature": "ValidateErrorEntry(entry *ErrorEntry) error",
          "parameters": [
            {
              "name": "entry",
              "type": "*ErrorEntry"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\security-manager\\development\\security_manager.go",
            "Offset": 2431,
            "Line": 75,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\security-manager\\development\\security_manager.go",
      "package": "main",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\security-manager\\development\\security_manager.go",
        "Offset": 2242,
        "Line": 72,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    },
    {
      "name": "StorageManager",
      "methods": [
        {
          "name": "Initialize",
          "signature": "Initialize(ctx context.Context) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\storage-manager\\development\\storage_manager.go",
            "Offset": 290,
            "Line": 18,
            "Column": 2
          }
        },
        {
          "name": "GetPostgreSQLConnection",
          "signature": "GetPostgreSQLConnection() (interface{}, error)",
          "parameters": [],
          "returns": [
            {
              "name": "",
              "type": "interface{}"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\storage-manager\\development\\storage_manager.go",
            "Offset": 330,
            "Line": 19,
            "Column": 2
          }
        },
        {
          "name": "GetQdrantConnection",
          "signature": "GetQdrantConnection() (interface{}, error)",
          "parameters": [],
          "returns": [
            {
              "name": "",
              "type": "interface{}"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\storage-manager\\development\\storage_manager.go",
            "Offset": 379,
            "Line": 20,
            "Column": 2
          }
        },
        {
          "name": "RunMigrations",
          "signature": "RunMigrations(ctx context.Context) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\storage-manager\\development\\storage_manager.go",
            "Offset": 424,
            "Line": 21,
            "Column": 2
          }
        },
        {
          "name": "SaveDependencyMetadata",
          "signature": "SaveDependencyMetadata(ctx context.Context, metadata *DependencyMetadata) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "metadata",
              "type": "*DependencyMetadata"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\storage-manager\\development\\storage_manager.go",
            "Offset": 467,
            "Line": 22,
            "Column": 2
          }
        },
        {
          "name": "GetDependencyMetadata",
          "signature": "GetDependencyMetadata(ctx context.Context, name string) (*DependencyMetadata, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "name",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "*DependencyMetadata"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\storage-manager\\development\\storage_manager.go",
            "Offset": 549,
            "Line": 23,
            "Column": 2
          }
        },
        {
          "name": "QueryDependencies",
          "signature": "QueryDependencies(ctx context.Context, query *DependencyQuery) ([]*DependencyMetadata, error)",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "query",
              "type": "*DependencyQuery"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "[]*DependencyMetadata"
            },
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\storage-manager\\development\\storage_manager.go",
            "Offset": 636,
            "Line": 24,
            "Column": 2
          }
        },
        {
          "name": "HealthCheck",
          "signature": "HealthCheck(ctx context.Context) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\storage-manager\\development\\storage_manager.go",
            "Offset": 732,
            "Line": 25,
            "Column": 2
          }
        },
        {
          "name": "Cleanup",
          "signature": "Cleanup() error",
          "parameters": [],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\storage-manager\\development\\storage_manager.go",
            "Offset": 773,
            "Line": 26,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\storage-manager\\development\\storage_manager.go",
      "package": "main",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\storage-manager\\development\\storage_manager.go",
        "Offset": 261,
        "Line": 17,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    },
    {
      "name": "ErrorManager",
      "methods": [
        {
          "name": "ProcessError",
          "signature": "ProcessError(ctx context.Context, err error, component string, operation string, hooks *ErrorHooks) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "err",
              "type": "error"
            },
            {
              "name": "component",
              "type": "string"
            },
            {
              "name": "operation",
              "type": "string"
            },
            {
              "name": "hooks",
              "type": "*ErrorHooks"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\storage-manager\\development\\storage_manager.go",
            "Offset": 2413,
            "Line": 71,
            "Column": 2
          }
        },
        {
          "name": "CatalogError",
          "signature": "CatalogError(ctx context.Context, entry *ErrorEntry) error",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "entry",
              "type": "*ErrorEntry"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\storage-manager\\development\\storage_manager.go",
            "Offset": 2514,
            "Line": 72,
            "Column": 2
          }
        },
        {
          "name": "ValidateErrorEntry",
          "signature": "ValidateErrorEntry(entry *ErrorEntry) error",
          "parameters": [
            {
              "name": "entry",
              "type": "*ErrorEntry"
            }
          ],
          "returns": [
            {
              "name": "",
              "type": "error"
            }
          ],
          "comments": [],
          "position": {
            "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\storage-manager\\development\\storage_manager.go",
            "Offset": 2575,
            "Line": 73,
            "Column": 2
          }
        }
      ],
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\storage-manager\\development\\storage_manager.go",
      "package": "main",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\storage-manager\\development\\storage_manager.go",
        "Offset": 2386,
        "Line": 70,
        "Column": 6
      },
      "comments": [],
      "annotations": {}
    }
  ],
  "duplications": {
    "ContainerManager": [
      {
        "name": "ContainerManager",
        "methods": [
          {
            "name": "Initialize",
            "signature": "Initialize(ctx context.Context) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\container-manager\\development\\container_manager.go",
              "Offset": 227,
              "Line": 16,
              "Column": 2
            }
          },
          {
            "name": "StartContainers",
            "signature": "StartContainers(ctx context.Context, services []string) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "services",
                "type": "[]string"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\container-manager\\development\\container_manager.go",
              "Offset": 267,
              "Line": 17,
              "Column": 2
            }
          },
          {
            "name": "StopContainers",
            "signature": "StopContainers(ctx context.Context, services []string) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "services",
                "type": "[]string"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\container-manager\\development\\container_manager.go",
              "Offset": 331,
              "Line": 18,
              "Column": 2
            }
          },
          {
            "name": "GetContainerStatus",
            "signature": "GetContainerStatus(ctx context.Context, service string) (string, error)",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "service",
                "type": "string"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "string"
              },
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\container-manager\\development\\container_manager.go",
              "Offset": 394,
              "Line": 19,
              "Column": 2
            }
          },
          {
            "name": "GetContainerLogs",
            "signature": "GetContainerLogs(ctx context.Context, service string) ([]string, error)",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "service",
                "type": "string"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "[]string"
              },
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\container-manager\\development\\container_manager.go",
              "Offset": 468,
              "Line": 20,
              "Column": 2
            }
          },
          {
            "name": "ValidateForContainerization",
            "signature": "ValidateForContainerization(ctx context.Context, dependencies []Dependency) (*ContainerValidationResult, error)",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "dependencies",
                "type": "[]Dependency"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "*ContainerValidationResult"
              },
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\container-manager\\development\\container_manager.go",
              "Offset": 542,
              "Line": 21,
              "Column": 2
            }
          },
          {
            "name": "OptimizeForContainer",
            "signature": "OptimizeForContainer(ctx context.Context, dependencies []Dependency) (*ContainerOptimization, error)",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "dependencies",
                "type": "[]Dependency"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "*ContainerOptimization"
              },
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\container-manager\\development\\container_manager.go",
              "Offset": 656,
              "Line": 22,
              "Column": 2
            }
          },
          {
            "name": "BuildImage",
            "signature": "BuildImage(ctx context.Context, imageName string, dockerfile string) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "imageName",
                "type": "string"
              },
              {
                "name": "dockerfile",
                "type": "string"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\container-manager\\development\\container_manager.go",
              "Offset": 759,
              "Line": 23,
              "Column": 2
            }
          },
          {
            "name": "PushImage",
            "signature": "PushImage(ctx context.Context, imageName string) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "imageName",
                "type": "string"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\container-manager\\development\\container_manager.go",
              "Offset": 836,
              "Line": 24,
              "Column": 2
            }
          },
          {
            "name": "PullImage",
            "signature": "PullImage(ctx context.Context, imageName string) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "imageName",
                "type": "string"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\container-manager\\development\\container_manager.go",
              "Offset": 893,
              "Line": 25,
              "Column": 2
            }
          },
          {
            "name": "CreateNetwork",
            "signature": "CreateNetwork(ctx context.Context, networkName string) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "networkName",
                "type": "string"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\container-manager\\development\\container_manager.go",
              "Offset": 950,
              "Line": 26,
              "Column": 2
            }
          },
          {
            "name": "CreateVolume",
            "signature": "CreateVolume(ctx context.Context, volumeName string) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "volumeName",
                "type": "string"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\container-manager\\development\\container_manager.go",
              "Offset": 1013,
              "Line": 27,
              "Column": 2
            }
          },
          {
            "name": "HealthCheck",
            "signature": "HealthCheck(ctx context.Context) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\container-manager\\development\\container_manager.go",
              "Offset": 1074,
              "Line": 28,
              "Column": 2
            }
          },
          {
            "name": "Cleanup",
            "signature": "Cleanup() error",
            "parameters": [],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\container-manager\\development\\container_manager.go",
              "Offset": 1115,
              "Line": 29,
              "Column": 2
            }
          }
        ],
        "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\container-manager\\development\\container_manager.go",
        "package": "main",
        "position": {
          "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\container-manager\\development\\container_manager.go",
          "Offset": 196,
          "Line": 15,
          "Column": 6
        },
        "comments": [],
        "annotations": {}
      },
      {
        "name": "ContainerManager",
        "methods": [
          {
            "name": "ValidateForContainerization",
            "signature": "ValidateForContainerization(ctx context.Context, deps []string) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "deps",
                "type": "[]string"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\container.go",
              "Offset": 147,
              "Line": 8,
              "Column": 2
            }
          },
          {
            "name": "OptimizeForContainer",
            "signature": "OptimizeForContainer(ctx context.Context, config map[string]interface{}) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "config",
                "type": "map[string]interface{}"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\container.go",
              "Offset": 218,
              "Line": 9,
              "Column": 2
            }
          },
          {
            "name": "BuildImage",
            "signature": "BuildImage(ctx context.Context, config map[string]interface{}) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "config",
                "type": "map[string]interface{}"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\container.go",
              "Offset": 298,
              "Line": 10,
              "Column": 2
            }
          },
          {
            "name": "DeployContainer",
            "signature": "DeployContainer(ctx context.Context, config map[string]interface{}) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "config",
                "type": "map[string]interface{}"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\container.go",
              "Offset": 368,
              "Line": 11,
              "Column": 2
            }
          }
        ],
        "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\container.go",
        "package": "interfaces",
        "position": {
          "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\container.go",
          "Offset": 104,
          "Line": 6,
          "Column": 6
        },
        "comments": [],
        "annotations": {}
      }
    ],
    "DeploymentManager": [
      {
        "name": "DeploymentManager",
        "methods": [
          {
            "name": "Initialize",
            "signature": "Initialize(ctx context.Context) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\deployment-manager\\development\\deployment_manager.go",
              "Offset": 287,
              "Line": 20,
              "Column": 2
            }
          },
          {
            "name": "BuildApplication",
            "signature": "BuildApplication(ctx context.Context, target string) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "target",
                "type": "string"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\deployment-manager\\development\\deployment_manager.go",
              "Offset": 327,
              "Line": 21,
              "Column": 2
            }
          },
          {
            "name": "DeployToEnvironment",
            "signature": "DeployToEnvironment(ctx context.Context, environment string) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "environment",
                "type": "string"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\deployment-manager\\development\\deployment_manager.go",
              "Offset": 388,
              "Line": 22,
              "Column": 2
            }
          },
          {
            "name": "BuildDockerImage",
            "signature": "BuildDockerImage(ctx context.Context, tag string) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "tag",
                "type": "string"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\deployment-manager\\development\\deployment_manager.go",
              "Offset": 457,
              "Line": 23,
              "Column": 2
            }
          },
          {
            "name": "CreateRelease",
            "signature": "CreateRelease(ctx context.Context, version string) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "version",
                "type": "string"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\deployment-manager\\development\\deployment_manager.go",
              "Offset": 515,
              "Line": 24,
              "Column": 2
            }
          },
          {
            "name": "HealthCheck",
            "signature": "HealthCheck(ctx context.Context) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\deployment-manager\\development\\deployment_manager.go",
              "Offset": 574,
              "Line": 25,
              "Column": 2
            }
          },
          {
            "name": "Cleanup",
            "signature": "Cleanup() error",
            "parameters": [],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\deployment-manager\\development\\deployment_manager.go",
              "Offset": 615,
              "Line": 26,
              "Column": 2
            }
          }
        ],
        "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\deployment-manager\\development\\deployment_manager.go",
        "package": "main",
        "position": {
          "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\deployment-manager\\development\\deployment_manager.go",
          "Offset": 255,
          "Line": 19,
          "Column": 6
        },
        "comments": [],
        "annotations": {}
      },
      {
        "name": "DeploymentManager",
        "methods": [
          {
            "name": "CheckDeploymentReadiness",
            "signature": "CheckDeploymentReadiness(ctx context.Context, env string) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "env",
                "type": "string"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\deployment.go",
              "Offset": 152,
              "Line": 8,
              "Column": 2
            }
          },
          {
            "name": "GenerateDeploymentPlan",
            "signature": "GenerateDeploymentPlan(ctx context.Context, config map[string]interface{}) (string, error)",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "config",
                "type": "map[string]interface{}"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "string"
              },
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\deployment.go",
              "Offset": 217,
              "Line": 9,
              "Column": 2
            }
          },
          {
            "name": "ExecuteDeployment",
            "signature": "ExecuteDeployment(ctx context.Context, plan string) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "plan",
                "type": "string"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\deployment.go",
              "Offset": 309,
              "Line": 10,
              "Column": 2
            }
          },
          {
            "name": "RollbackDeployment",
            "signature": "RollbackDeployment(ctx context.Context, version string) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "version",
                "type": "string"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\deployment.go",
              "Offset": 368,
              "Line": 11,
              "Column": 2
            }
          }
        ],
        "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\deployment.go",
        "package": "interfaces",
        "position": {
          "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\deployment.go",
          "Offset": 108,
          "Line": 6,
          "Column": 6
        },
        "comments": [],
        "annotations": {}
      }
    ],
    "ErrorManager": [
      {
        "name": "ErrorManager",
        "methods": [
          {
            "name": "CatalogError",
            "signature": "CatalogError(ctx context.Context, entry ErrorEntry) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "entry",
                "type": "ErrorEntry"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\circuit-breaker\\circuit_breaker.go",
              "Offset": 2577,
              "Line": 91,
              "Column": 2
            }
          }
        ],
        "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\circuit-breaker\\circuit_breaker.go",
        "package": "circuitbreaker",
        "position": {
          "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\circuit-breaker\\circuit_breaker.go",
          "Offset": 2550,
          "Line": 90,
          "Column": 6
        },
        "comments": [],
        "annotations": {}
      },
      {
        "name": "ErrorManager",
        "methods": [
          {
            "name": "ProcessError",
            "signature": "ProcessError(ctx context.Context, err error, component string, operation string, hooks *ErrorHooks) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "err",
                "type": "error"
              },
              {
                "name": "component",
                "type": "string"
              },
              {
                "name": "operation",
                "type": "string"
              },
              {
                "name": "hooks",
                "type": "*ErrorHooks"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\config-manager\\config_manager.go",
              "Offset": 579,
              "Line": 26,
              "Column": 2
            }
          },
          {
            "name": "CatalogError",
            "signature": "CatalogError(entry ErrorEntry) error",
            "parameters": [
              {
                "name": "entry",
                "type": "ErrorEntry"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\config-manager\\config_manager.go",
              "Offset": 680,
              "Line": 27,
              "Column": 2
            }
          },
          {
            "name": "ValidateErrorEntry",
            "signature": "ValidateErrorEntry(entry ErrorEntry) error",
            "parameters": [
              {
                "name": "entry",
                "type": "ErrorEntry"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\config-manager\\config_manager.go",
              "Offset": 719,
              "Line": 28,
              "Column": 2
            }
          }
        ],
        "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\config-manager\\config_manager.go",
        "package": "configmanager",
        "position": {
          "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\config-manager\\config_manager.go",
          "Offset": 552,
          "Line": 25,
          "Column": 6
        },
        "comments": [],
        "annotations": {}
      },
      {
        "name": "ErrorManager",
        "methods": [
          {
            "name": "ProcessError",
            "signature": "ProcessError(ctx context.Context, err error, component string, operation string, hooks *ErrorHooks) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "err",
                "type": "error"
              },
              {
                "name": "component",
                "type": "string"
              },
              {
                "name": "operation",
                "type": "string"
              },
              {
                "name": "hooks",
                "type": "*ErrorHooks"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\container-manager\\development\\container_manager.go",
              "Offset": 3062,
              "Line": 84,
              "Column": 2
            }
          },
          {
            "name": "CatalogError",
            "signature": "CatalogError(ctx context.Context, entry *ErrorEntry) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "entry",
                "type": "*ErrorEntry"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\container-manager\\development\\container_manager.go",
              "Offset": 3163,
              "Line": 85,
              "Column": 2
            }
          },
          {
            "name": "ValidateErrorEntry",
            "signature": "ValidateErrorEntry(entry *ErrorEntry) error",
            "parameters": [
              {
                "name": "entry",
                "type": "*ErrorEntry"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\container-manager\\development\\container_manager.go",
              "Offset": 3224,
              "Line": 86,
              "Column": 2
            }
          }
        ],
        "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\container-manager\\development\\container_manager.go",
        "package": "main",
        "position": {
          "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\container-manager\\development\\container_manager.go",
          "Offset": 3035,
          "Line": 83,
          "Column": 6
        },
        "comments": [],
        "annotations": {}
      },
      {
        "name": "ErrorManager",
        "methods": [
          {
            "name": "ProcessError",
            "signature": "ProcessError(ctx context.Context, err error, component string, operation string, hooks *ErrorHooks) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "err",
                "type": "error"
              },
              {
                "name": "component",
                "type": "string"
              },
              {
                "name": "operation",
                "type": "string"
              },
              {
                "name": "hooks",
                "type": "*ErrorHooks"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\deployment-manager\\development\\deployment_manager.go",
              "Offset": 2108,
              "Line": 66,
              "Column": 2
            }
          },
          {
            "name": "CatalogError",
            "signature": "CatalogError(ctx context.Context, entry *ErrorEntry) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "entry",
                "type": "*ErrorEntry"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\deployment-manager\\development\\deployment_manager.go",
              "Offset": 2209,
              "Line": 67,
              "Column": 2
            }
          },
          {
            "name": "ValidateErrorEntry",
            "signature": "ValidateErrorEntry(entry *ErrorEntry) error",
            "parameters": [
              {
                "name": "entry",
                "type": "*ErrorEntry"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\deployment-manager\\development\\deployment_manager.go",
              "Offset": 2270,
              "Line": 68,
              "Column": 2
            }
          }
        ],
        "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\deployment-manager\\development\\deployment_manager.go",
        "package": "main",
        "position": {
          "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\deployment-manager\\development\\deployment_manager.go",
          "Offset": 2081,
          "Line": 65,
          "Column": 6
        },
        "comments": [],
        "annotations": {}
      },
      {
        "name": "ErrorManager",
        "methods": [
          {
            "name": "LogError",
            "signature": "LogError(err error, module string, code string)",
            "parameters": [
              {
                "name": "err",
                "type": "error"
              },
              {
                "name": "module",
                "type": "string"
              },
              {
                "name": "code",
                "type": "string"
              }
            ],
            "returns": [],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\error_integration.go",
              "Offset": 2609,
              "Line": 64,
              "Column": 2
            }
          },
          {
            "name": "CatalogError",
            "signature": "CatalogError(entry ErrorEntry) error",
            "parameters": [
              {
                "name": "entry",
                "type": "ErrorEntry"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\error_integration.go",
              "Offset": 2659,
              "Line": 65,
              "Column": 2
            }
          },
          {
            "name": "ValidateError",
            "signature": "ValidateError(entry ErrorEntry) error",
            "parameters": [
              {
                "name": "entry",
                "type": "ErrorEntry"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\error_integration.go",
              "Offset": 2698,
              "Line": 66,
              "Column": 2
            }
          }
        ],
        "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\error_integration.go",
        "package": "integratedmanager",
        "position": {
          "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\error_integration.go",
          "Offset": 2582,
          "Line": 63,
          "Column": 6
        },
        "comments": [],
        "annotations": {}
      },
      {
        "name": "ErrorManager",
        "methods": [
          {
            "name": "ProcessError",
            "signature": "ProcessError(ctx context.Context, err error, component string, operation string, hooks *ErrorHooks) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "err",
                "type": "error"
              },
              {
                "name": "component",
                "type": "string"
              },
              {
                "name": "operation",
                "type": "string"
              },
              {
                "name": "hooks",
                "type": "*ErrorHooks"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\monitoring-manager\\development\\monitoring_manager.go",
              "Offset": 4543,
              "Line": 122,
              "Column": 2
            }
          },
          {
            "name": "CatalogError",
            "signature": "CatalogError(ctx context.Context, entry *ErrorEntry) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "entry",
                "type": "*ErrorEntry"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\monitoring-manager\\development\\monitoring_manager.go",
              "Offset": 4644,
              "Line": 123,
              "Column": 2
            }
          },
          {
            "name": "ValidateErrorEntry",
            "signature": "ValidateErrorEntry(entry *ErrorEntry) error",
            "parameters": [
              {
                "name": "entry",
                "type": "*ErrorEntry"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\monitoring-manager\\development\\monitoring_manager.go",
              "Offset": 4705,
              "Line": 124,
              "Column": 2
            }
          }
        ],
        "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\monitoring-manager\\development\\monitoring_manager.go",
        "package": "main",
        "position": {
          "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\monitoring-manager\\development\\monitoring_manager.go",
          "Offset": 4516,
          "Line": 121,
          "Column": 6
        },
        "comments": [],
        "annotations": {}
      },
      {
        "name": "ErrorManager",
        "methods": [
          {
            "name": "ProcessError",
            "signature": "ProcessError(ctx context.Context, err error, component string, operation string, hooks *ErrorHooks) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "err",
                "type": "error"
              },
              {
                "name": "component",
                "type": "string"
              },
              {
                "name": "operation",
                "type": "string"
              },
              {
                "name": "hooks",
                "type": "*ErrorHooks"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\security-manager\\development\\security_manager.go",
              "Offset": 2269,
              "Line": 73,
              "Column": 2
            }
          },
          {
            "name": "CatalogError",
            "signature": "CatalogError(ctx context.Context, entry *ErrorEntry) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "entry",
                "type": "*ErrorEntry"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\security-manager\\development\\security_manager.go",
              "Offset": 2370,
              "Line": 74,
              "Column": 2
            }
          },
          {
            "name": "ValidateErrorEntry",
            "signature": "ValidateErrorEntry(entry *ErrorEntry) error",
            "parameters": [
              {
                "name": "entry",
                "type": "*ErrorEntry"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\security-manager\\development\\security_manager.go",
              "Offset": 2431,
              "Line": 75,
              "Column": 2
            }
          }
        ],
        "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\security-manager\\development\\security_manager.go",
        "package": "main",
        "position": {
          "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\security-manager\\development\\security_manager.go",
          "Offset": 2242,
          "Line": 72,
          "Column": 6
        },
        "comments": [],
        "annotations": {}
      },
      {
        "name": "ErrorManager",
        "methods": [
          {
            "name": "ProcessError",
            "signature": "ProcessError(ctx context.Context, err error, component string, operation string, hooks *ErrorHooks) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "err",
                "type": "error"
              },
              {
                "name": "component",
                "type": "string"
              },
              {
                "name": "operation",
                "type": "string"
              },
              {
                "name": "hooks",
                "type": "*ErrorHooks"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\storage-manager\\development\\storage_manager.go",
              "Offset": 2413,
              "Line": 71,
              "Column": 2
            }
          },
          {
            "name": "CatalogError",
            "signature": "CatalogError(ctx context.Context, entry *ErrorEntry) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "entry",
                "type": "*ErrorEntry"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\storage-manager\\development\\storage_manager.go",
              "Offset": 2514,
              "Line": 72,
              "Column": 2
            }
          },
          {
            "name": "ValidateErrorEntry",
            "signature": "ValidateErrorEntry(entry *ErrorEntry) error",
            "parameters": [
              {
                "name": "entry",
                "type": "*ErrorEntry"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\storage-manager\\development\\storage_manager.go",
              "Offset": 2575,
              "Line": 73,
              "Column": 2
            }
          }
        ],
        "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\storage-manager\\development\\storage_manager.go",
        "package": "main",
        "position": {
          "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\storage-manager\\development\\storage_manager.go",
          "Offset": 2386,
          "Line": 70,
          "Column": 6
        },
        "comments": [],
        "annotations": {}
      }
    ],
    "MonitoringManager": [
      {
        "name": "MonitoringManager",
        "methods": [
          {
            "name": "StartOperationMonitoring",
            "signature": "StartOperationMonitoring(ctx context.Context, operation string) (*OperationMetrics, error)",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "operation",
                "type": "string"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "*OperationMetrics"
              },
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\monitoring.go",
              "Offset": 139,
              "Line": 8,
              "Column": 2
            }
          },
          {
            "name": "StopOperationMonitoring",
            "signature": "StopOperationMonitoring(ctx context.Context, metrics *OperationMetrics) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "metrics",
                "type": "*OperationMetrics"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\monitoring.go",
              "Offset": 231,
              "Line": 9,
              "Column": 2
            }
          },
          {
            "name": "CheckSystemHealth",
            "signature": "CheckSystemHealth(ctx context.Context) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\monitoring.go",
              "Offset": 310,
              "Line": 10,
              "Column": 2
            }
          },
          {
            "name": "ConfigureAlerts",
            "signature": "ConfigureAlerts(ctx context.Context, config map[string]interface{}) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "config",
                "type": "map[string]interface{}"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\monitoring.go",
              "Offset": 356,
              "Line": 11,
              "Column": 2
            }
          },
          {
            "name": "CollectMetrics",
            "signature": "CollectMetrics(ctx context.Context) (*SystemMetrics, error)",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "*SystemMetrics"
              },
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\monitoring.go",
              "Offset": 431,
              "Line": 12,
              "Column": 2
            }
          },
          {
            "name": "StartMonitoring",
            "signature": "StartMonitoring(ctx context.Context) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\monitoring.go",
              "Offset": 492,
              "Line": 13,
              "Column": 2
            }
          },
          {
            "name": "StopMonitoring",
            "signature": "StopMonitoring(ctx context.Context) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\monitoring.go",
              "Offset": 536,
              "Line": 14,
              "Column": 2
            }
          }
        ],
        "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\monitoring.go",
        "package": "interfaces",
        "position": {
          "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\monitoring.go",
          "Offset": 95,
          "Line": 6,
          "Column": 6
        },
        "comments": [],
        "annotations": {}
      },
      {
        "name": "MonitoringManager",
        "methods": [
          {
            "name": "Initialize",
            "signature": "Initialize(ctx context.Context) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\monitoring-manager\\development\\monitoring_manager.go",
              "Offset": 227,
              "Line": 16,
              "Column": 2
            }
          },
          {
            "name": "StartMonitoring",
            "signature": "StartMonitoring(ctx context.Context) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\monitoring-manager\\development\\monitoring_manager.go",
              "Offset": 267,
              "Line": 17,
              "Column": 2
            }
          },
          {
            "name": "StopMonitoring",
            "signature": "StopMonitoring(ctx context.Context) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\monitoring-manager\\development\\monitoring_manager.go",
              "Offset": 312,
              "Line": 18,
              "Column": 2
            }
          },
          {
            "name": "CollectMetrics",
            "signature": "CollectMetrics(ctx context.Context) (*SystemMetrics, error)",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "*SystemMetrics"
              },
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\monitoring-manager\\development\\monitoring_manager.go",
              "Offset": 356,
              "Line": 19,
              "Column": 2
            }
          },
          {
            "name": "CheckSystemHealth",
            "signature": "CheckSystemHealth(ctx context.Context) (*HealthStatus, error)",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "*HealthStatus"
              },
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\monitoring-manager\\development\\monitoring_manager.go",
              "Offset": 418,
              "Line": 20,
              "Column": 2
            }
          },
          {
            "name": "ConfigureAlerts",
            "signature": "ConfigureAlerts(ctx context.Context, config *AlertConfig) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "config",
                "type": "*AlertConfig"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\monitoring-manager\\development\\monitoring_manager.go",
              "Offset": 482,
              "Line": 21,
              "Column": 2
            }
          },
          {
            "name": "GenerateReport",
            "signature": "GenerateReport(ctx context.Context, duration time.Duration) (*PerformanceReport, error)",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "duration",
                "type": "time.Duration"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "*PerformanceReport"
              },
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\monitoring-manager\\development\\monitoring_manager.go",
              "Offset": 548,
              "Line": 22,
              "Column": 2
            }
          },
          {
            "name": "StartOperationMonitoring",
            "signature": "StartOperationMonitoring(ctx context.Context, operation string) (*OperationMetrics, error)",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "operation",
                "type": "string"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "*OperationMetrics"
              },
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\monitoring-manager\\development\\monitoring_manager.go",
              "Offset": 638,
              "Line": 23,
              "Column": 2
            }
          },
          {
            "name": "StopOperationMonitoring",
            "signature": "StopOperationMonitoring(ctx context.Context, metrics *OperationMetrics) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "metrics",
                "type": "*OperationMetrics"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\monitoring-manager\\development\\monitoring_manager.go",
              "Offset": 731,
              "Line": 24,
              "Column": 2
            }
          },
          {
            "name": "GetMetricsHistory",
            "signature": "GetMetricsHistory(ctx context.Context, duration time.Duration) ([]*SystemMetrics, error)",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "duration",
                "type": "time.Duration"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "[]*SystemMetrics"
              },
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\monitoring-manager\\development\\monitoring_manager.go",
              "Offset": 811,
              "Line": 25,
              "Column": 2
            }
          },
          {
            "name": "HealthCheck",
            "signature": "HealthCheck(ctx context.Context) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\monitoring-manager\\development\\monitoring_manager.go",
              "Offset": 902,
              "Line": 26,
              "Column": 2
            }
          },
          {
            "name": "Cleanup",
            "signature": "Cleanup() error",
            "parameters": [],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\monitoring-manager\\development\\monitoring_manager.go",
              "Offset": 943,
              "Line": 27,
              "Column": 2
            }
          }
        ],
        "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\monitoring-manager\\development\\monitoring_manager.go",
        "package": "main",
        "position": {
          "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\monitoring-manager\\development\\monitoring_manager.go",
          "Offset": 195,
          "Line": 15,
          "Column": 6
        },
        "comments": [],
        "annotations": {}
      }
    ],
    "SecurityManager": [
      {
        "name": "SecurityManager",
        "methods": [
          {
            "name": "ScanDependenciesForVulnerabilities",
            "signature": "ScanDependenciesForVulnerabilities(ctx context.Context, deps []string) (*VulnerabilityReport, error)",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "deps",
                "type": "[]string"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "*VulnerabilityReport"
              },
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\security.go",
              "Offset": 147,
              "Line": 8,
              "Column": 2
            }
          },
          {
            "name": "ValidateAPIKeyAccess",
            "signature": "ValidateAPIKeyAccess(ctx context.Context, key string) (bool, error)",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "key",
                "type": "string"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "bool"
              },
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\security.go",
              "Offset": 249,
              "Line": 9,
              "Column": 2
            }
          },
          {
            "name": "LoadSecrets",
            "signature": "LoadSecrets(ctx context.Context) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\security.go",
              "Offset": 318,
              "Line": 10,
              "Column": 2
            }
          },
          {
            "name": "GetSecret",
            "signature": "GetSecret(key string) (string, error)",
            "parameters": [
              {
                "name": "key",
                "type": "string"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "string"
              },
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\security.go",
              "Offset": 358,
              "Line": 11,
              "Column": 2
            }
          },
          {
            "name": "GenerateAPIKey",
            "signature": "GenerateAPIKey(ctx context.Context, scope string) (string, error)",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "scope",
                "type": "string"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "string"
              },
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\security.go",
              "Offset": 397,
              "Line": 12,
              "Column": 2
            }
          },
          {
            "name": "EncryptData",
            "signature": "EncryptData(data []byte) ([]byte, error)",
            "parameters": [
              {
                "name": "data",
                "type": "[]byte"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "[]byte"
              },
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\security.go",
              "Offset": 464,
              "Line": 13,
              "Column": 2
            }
          },
          {
            "name": "DecryptData",
            "signature": "DecryptData(encryptedData []byte) ([]byte, error)",
            "parameters": [
              {
                "name": "encryptedData",
                "type": "[]byte"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "[]byte"
              },
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\security.go",
              "Offset": 506,
              "Line": 14,
              "Column": 2
            }
          }
        ],
        "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\security.go",
        "package": "interfaces",
        "position": {
          "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\security.go",
          "Offset": 105,
          "Line": 6,
          "Column": 6
        },
        "comments": [],
        "annotations": {}
      },
      {
        "name": "SecurityManager",
        "methods": [
          {
            "name": "Initialize",
            "signature": "Initialize(ctx context.Context) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\security-manager\\development\\security_manager.go",
              "Offset": 334,
              "Line": 23,
              "Column": 2
            }
          },
          {
            "name": "LoadSecrets",
            "signature": "LoadSecrets(ctx context.Context) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\security-manager\\development\\security_manager.go",
              "Offset": 374,
              "Line": 24,
              "Column": 2
            }
          },
          {
            "name": "GetSecret",
            "signature": "GetSecret(key string) (string, error)",
            "parameters": [
              {
                "name": "key",
                "type": "string"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "string"
              },
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\security-manager\\development\\security_manager.go",
              "Offset": 415,
              "Line": 25,
              "Column": 2
            }
          },
          {
            "name": "GenerateAPIKey",
            "signature": "GenerateAPIKey(ctx context.Context, scope string) (string, error)",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "scope",
                "type": "string"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "string"
              },
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\security-manager\\development\\security_manager.go",
              "Offset": 455,
              "Line": 26,
              "Column": 2
            }
          },
          {
            "name": "ValidateAPIKey",
            "signature": "ValidateAPIKey(ctx context.Context, key string) (bool, error)",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "key",
                "type": "string"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "bool"
              },
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\security-manager\\development\\security_manager.go",
              "Offset": 523,
              "Line": 27,
              "Column": 2
            }
          },
          {
            "name": "EncryptData",
            "signature": "EncryptData(data []byte) ([]byte, error)",
            "parameters": [
              {
                "name": "data",
                "type": "[]byte"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "[]byte"
              },
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\security-manager\\development\\security_manager.go",
              "Offset": 587,
              "Line": 28,
              "Column": 2
            }
          },
          {
            "name": "DecryptData",
            "signature": "DecryptData(encryptedData []byte) ([]byte, error)",
            "parameters": [
              {
                "name": "encryptedData",
                "type": "[]byte"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "[]byte"
              },
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\security-manager\\development\\security_manager.go",
              "Offset": 630,
              "Line": 29,
              "Column": 2
            }
          },
          {
            "name": "ScanForVulnerabilities",
            "signature": "ScanForVulnerabilities(ctx context.Context, dependencies []Dependency) (*VulnerabilityReport, error)",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "dependencies",
                "type": "[]Dependency"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "*VulnerabilityReport"
              },
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\security-manager\\development\\security_manager.go",
              "Offset": 682,
              "Line": 30,
              "Column": 2
            }
          },
          {
            "name": "HealthCheck",
            "signature": "HealthCheck(ctx context.Context) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\security-manager\\development\\security_manager.go",
              "Offset": 785,
              "Line": 31,
              "Column": 2
            }
          },
          {
            "name": "Cleanup",
            "signature": "Cleanup() error",
            "parameters": [],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\security-manager\\development\\security_manager.go",
              "Offset": 826,
              "Line": 32,
              "Column": 2
            }
          }
        ],
        "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\security-manager\\development\\security_manager.go",
        "package": "main",
        "position": {
          "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\security-manager\\development\\security_manager.go",
          "Offset": 304,
          "Line": 22,
          "Column": 6
        },
        "comments": [],
        "annotations": {}
      }
    ],
    "StorageManager": [
      {
        "name": "StorageManager",
        "methods": [
          {
            "name": "SaveDependencyMetadata",
            "signature": "SaveDependencyMetadata(ctx context.Context, metadata *DependencyMetadata) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "metadata",
                "type": "*DependencyMetadata"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\storage.go",
              "Offset": 140,
              "Line": 8,
              "Column": 2
            }
          },
          {
            "name": "GetDependencyMetadata",
            "signature": "GetDependencyMetadata(ctx context.Context, name string) (*DependencyMetadata, error)",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "name",
                "type": "string"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "*DependencyMetadata"
              },
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\storage.go",
              "Offset": 221,
              "Line": 9,
              "Column": 2
            }
          },
          {
            "name": "QueryDependencies",
            "signature": "QueryDependencies(ctx context.Context, query string) ([]*DependencyMetadata, error)",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "query",
                "type": "string"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "[]*DependencyMetadata"
              },
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\storage.go",
              "Offset": 307,
              "Line": 10,
              "Column": 2
            }
          },
          {
            "name": "StoreObject",
            "signature": "StoreObject(ctx context.Context, key string, obj interface{}) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "key",
                "type": "string"
              },
              {
                "name": "obj",
                "type": "interface{}"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\storage.go",
              "Offset": 392,
              "Line": 11,
              "Column": 2
            }
          },
          {
            "name": "GetObject",
            "signature": "GetObject(ctx context.Context, key string, obj interface{}) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "key",
                "type": "string"
              },
              {
                "name": "obj",
                "type": "interface{}"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\storage.go",
              "Offset": 461,
              "Line": 12,
              "Column": 2
            }
          },
          {
            "name": "DeleteObject",
            "signature": "DeleteObject(ctx context.Context, key string) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "key",
                "type": "string"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\storage.go",
              "Offset": 528,
              "Line": 13,
              "Column": 2
            }
          },
          {
            "name": "ListObjects",
            "signature": "ListObjects(ctx context.Context, prefix string) ([]string, error)",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "prefix",
                "type": "string"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "[]string"
              },
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\storage.go",
              "Offset": 581,
              "Line": 14,
              "Column": 2
            }
          },
          {
            "name": "GetPostgreSQLConnection",
            "signature": "GetPostgreSQLConnection() (interface{}, error)",
            "parameters": [],
            "returns": [
              {
                "name": "",
                "type": "interface{}"
              },
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\storage.go",
              "Offset": 648,
              "Line": 15,
              "Column": 2
            }
          },
          {
            "name": "GetQdrantConnection",
            "signature": "GetQdrantConnection() (interface{}, error)",
            "parameters": [],
            "returns": [
              {
                "name": "",
                "type": "interface{}"
              },
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\storage.go",
              "Offset": 696,
              "Line": 16,
              "Column": 2
            }
          },
          {
            "name": "RunMigrations",
            "signature": "RunMigrations(ctx context.Context) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\storage.go",
              "Offset": 740,
              "Line": 17,
              "Column": 2
            }
          }
        ],
        "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\storage.go",
        "package": "interfaces",
        "position": {
          "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\interfaces\\storage.go",
          "Offset": 99,
          "Line": 6,
          "Column": 6
        },
        "comments": [],
        "annotations": {}
      },
      {
        "name": "StorageManager",
        "methods": [
          {
            "name": "Initialize",
            "signature": "Initialize(ctx context.Context) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\storage-manager\\development\\storage_manager.go",
              "Offset": 290,
              "Line": 18,
              "Column": 2
            }
          },
          {
            "name": "GetPostgreSQLConnection",
            "signature": "GetPostgreSQLConnection() (interface{}, error)",
            "parameters": [],
            "returns": [
              {
                "name": "",
                "type": "interface{}"
              },
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\storage-manager\\development\\storage_manager.go",
              "Offset": 330,
              "Line": 19,
              "Column": 2
            }
          },
          {
            "name": "GetQdrantConnection",
            "signature": "GetQdrantConnection() (interface{}, error)",
            "parameters": [],
            "returns": [
              {
                "name": "",
                "type": "interface{}"
              },
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\storage-manager\\development\\storage_manager.go",
              "Offset": 379,
              "Line": 20,
              "Column": 2
            }
          },
          {
            "name": "RunMigrations",
            "signature": "RunMigrations(ctx context.Context) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\storage-manager\\development\\storage_manager.go",
              "Offset": 424,
              "Line": 21,
              "Column": 2
            }
          },
          {
            "name": "SaveDependencyMetadata",
            "signature": "SaveDependencyMetadata(ctx context.Context, metadata *DependencyMetadata) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "metadata",
                "type": "*DependencyMetadata"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\storage-manager\\development\\storage_manager.go",
              "Offset": 467,
              "Line": 22,
              "Column": 2
            }
          },
          {
            "name": "GetDependencyMetadata",
            "signature": "GetDependencyMetadata(ctx context.Context, name string) (*DependencyMetadata, error)",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "name",
                "type": "string"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "*DependencyMetadata"
              },
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\storage-manager\\development\\storage_manager.go",
              "Offset": 549,
              "Line": 23,
              "Column": 2
            }
          },
          {
            "name": "QueryDependencies",
            "signature": "QueryDependencies(ctx context.Context, query *DependencyQuery) ([]*DependencyMetadata, error)",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              },
              {
                "name": "query",
                "type": "*DependencyQuery"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "[]*DependencyMetadata"
              },
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\storage-manager\\development\\storage_manager.go",
              "Offset": 636,
              "Line": 24,
              "Column": 2
            }
          },
          {
            "name": "HealthCheck",
            "signature": "HealthCheck(ctx context.Context) error",
            "parameters": [
              {
                "name": "ctx",
                "type": "context.Context"
              }
            ],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\storage-manager\\development\\storage_manager.go",
              "Offset": 732,
              "Line": 25,
              "Column": 2
            }
          },
          {
            "name": "Cleanup",
            "signature": "Cleanup() error",
            "parameters": [],
            "returns": [
              {
                "name": "",
                "type": "error"
              }
            ],
            "comments": [],
            "position": {
              "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\storage-manager\\development\\storage_manager.go",
              "Offset": 773,
              "Line": 26,
              "Column": 2
            }
          }
        ],
        "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\storage-manager\\development\\storage_manager.go",
        "package": "main",
        "position": {
          "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\storage-manager\\development\\storage_manager.go",
          "Offset": 261,
          "Line": 17,
          "Column": 6
        },
        "comments": [],
        "annotations": {}
      }
    ]
  },
  "syntax_errors": [
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\dependency_manager.go",
      "line": 582,
      "message": "expected ';', found bool",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\dependency_manager.go",
        "Offset": 18531,
        "Line": 582,
        "Column": 34
      },
      "description": "expected ';', found bool",
      "context": "\t\t\tGoModPath          string `json:\"goModPath\"`\n\t\t\tAutoTidy           bool   `json:\"autoTidy\"`\n\t\t\tinterfaces.VulnerabilityCheck bool   `json:\"vulnerabilityCheck\"`\n\t\t\tBackupOnChange     bool   `json:\"backupOnChange\"`\n\t\t}{",
      "severity": "error",
      "fix_suggestion": "Add missing semicolon"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\dependency_manager.go",
      "line": 597,
      "message": "expected '}', found 'if'",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\dependency_manager.go",
        "Offset": 18950,
        "Line": 597,
        "Column": 2
      },
      "description": "expected '}', found 'if'",
      "context": "// validateConfig validates the loaded configuration.\nfunc validateConfig(config *Config) error {\n\tif config.Name == \"\" {\n\t\treturn fmt.Errorf(\"config name cannot be empty\")\n\t}",
      "severity": "error",
      "fix_suggestion": "Add missing closing brace"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\dependency_manager.go",
      "line": 598,
      "message": "missing ',' in composite literal",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\dependency_manager.go",
        "Offset": 18975,
        "Line": 598,
        "Column": 3
      },
      "description": "missing ',' in composite literal",
      "context": "func validateConfig(config *Config) error {\n\tif config.Name == \"\" {\n\t\treturn fmt.Errorf(\"config name cannot be empty\")\n\t}\n\tif config.Version == \"\" {",
      "severity": "warning",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\dependency_manager.go",
      "line": 1448,
      "message": "expected '(', found '.'",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\dependency_manager.go",
        "Offset": 46271,
        "Line": 1448,
        "Column": 38
      },
      "description": "expected '(', found '.'",
      "context": "\n// Syncinterfaces.DependencyMetadata synchronizes dependency metadata with StorageManager\nfunc (m *GoModManager) Syncinterfaces.DependencyMetadata() error {\n\tm.Log(\"INFO\", \"Synchronizing dependency metadata with StorageManager\")\n\tctx := context.Background()",
      "severity": "error",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\dependency_manager.go",
      "line": 1449,
      "message": "expected ')', found \"Synchronizing dependency metadata with StorageManager\"",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\dependency_manager.go",
        "Offset": 46316,
        "Line": 1449,
        "Column": 16
      },
      "description": "expected ')', found \"Synchronizing dependency metadata with StorageManager\"",
      "context": "// Syncinterfaces.DependencyMetadata synchronizes dependency metadata with StorageManager\nfunc (m *GoModManager) Syncinterfaces.DependencyMetadata() error {\n\tm.Log(\"INFO\", \"Synchronizing dependency metadata with StorageManager\")\n\tctx := context.Background()\n",
      "severity": "error",
      "fix_suggestion": "Add missing closing parenthesis"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\dependency_manager.go",
      "line": 1450,
      "message": "expected declaration, found ctx",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\dependency_manager.go",
        "Offset": 46374,
        "Line": 1450,
        "Column": 2
      },
      "description": "expected declaration, found ctx",
      "context": "func (m *GoModManager) Syncinterfaces.DependencyMetadata() error {\n\tm.Log(\"INFO\", \"Synchronizing dependency metadata with StorageManager\")\n\tctx := context.Background()\n\n\t// Get current dependencies",
      "severity": "error",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\manager_integration.go",
      "line": 246,
      "message": "expected '(', found '.'",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\manager_integration.go",
        "Offset": 8721,
        "Line": 246,
        "Column": 47
      },
      "description": "expected '(', found '.'",
      "context": "\r\n// Persistinterfaces.DependencyMetadata saves metadata using real StorageManager\r\nfunc (mi *ManagerIntegrator) Persistinterfaces.DependencyMetadata(ctx context.Context, dependencies []Dependency) error {\r\n\tif mi.storageManager == nil {\r\n\t\tmi.logger.Warn(\"StorageManager not configured, skipping metadata persistence\")\r",
      "severity": "error",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\manager_integrator.go",
      "line": 1,
      "message": "expected 'package', found 'EOF'",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\manager_integrator.go",
        "Offset": 0,
        "Line": 1,
        "Column": 1
      },
      "description": "expected 'package', found 'EOF'",
      "context": "",
      "severity": "error",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\real_manager_integration.go",
      "line": 554,
      "message": "expected '(', found '.'",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\real_manager_integration.go",
        "Offset": 19227,
        "Line": 554,
        "Column": 56
      },
      "description": "expected '(', found '.'",
      "context": "}\r\n\r\nfunc (rsmc *RealStorageManagerConnector) Saveinterfaces.DependencyMetadata(ctx context.Context, metadata *interfaces.interfaces.DependencyMetadata) error {\r\n\tif !rsmc.initialized {\r\n\t\treturn fmt.Errorf(\"StorageManager not initialized\")\r",
      "severity": "error",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\real_manager_integration.go",
      "line": 575,
      "message": "missing ',' in parameter list",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\real_manager_integration.go",
        "Offset": 20121,
        "Line": 575,
        "Column": 90
      },
      "description": "missing ',' in parameter list",
      "context": "\r\n// validateMetadata validates dependency metadata before storage\r\nfunc (rsmc *RealStorageManagerConnector) validateMetadata(metadata *interfaces.interfaces.DependencyMetadata) error {\r\n\tif metadata.Name == \"\" {\r\n\t\treturn fmt.Errorf(\"dependency name cannot be empty\")\r",
      "severity": "warning",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\real_manager_integration.go",
      "line": 585,
      "message": "expected '(', found '.'",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\real_manager_integration.go",
        "Offset": 20403,
        "Line": 585,
        "Column": 55
      },
      "description": "expected '(', found '.'",
      "context": "}\r\n\r\nfunc (rsmc *RealStorageManagerConnector) Getinterfaces.DependencyMetadata(ctx context.Context, name string) (*interfaces.interfaces.DependencyMetadata, error) {\r\n\tif !rsmc.initialized {\r\n\t\treturn nil, fmt.Errorf(\"StorageManager not initialized\")\r",
      "severity": "error",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\real_manager_integration.go",
      "line": 615,
      "message": "missing ',' in parameter list",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\modules\\real_manager_integration.go",
        "Offset": 21722,
        "Line": 615,
        "Column": 130
      },
      "description": "missing ',' in parameter list",
      "context": "}\r\n\r\nfunc (rsmc *RealStorageManagerConnector) QueryDependencies(ctx context.Context, query *DependencyQuery) ([]*interfaces.interfaces.DependencyMetadata, error) {\r\n\tif !rsmc.initialized {\r\n\t\treturn nil, fmt.Errorf(\"StorageManager not initialized\")\r",
      "severity": "warning",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\tests\\dependency_manager_config_test.go",
      "line": 183,
      "message": "expected '(', found TestStorageManagerIntegration",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\tests\\dependency_manager_config_test.go",
        "Offset": 6039,
        "Line": 183,
        "Column": 6
      },
      "description": "expected '(', found TestStorageManagerIntegration",
      "context": "\r\n// TestStorageManagerIntegration tests integration with StorageManager\r\nfunc TestStorageManagerIntegration(t *testing.T) {\r\n\tlogger := zaptest.NewLogger(t)\r\n\terrorManager := \u0026ErrorManagerImpl{logger: logger}\r",
      "severity": "error",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\tests\\dependency_manager_config_test.go",
      "line": 231,
      "message": "missing ',' before newline in argument list",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\tests\\dependency_manager_config_test.go",
        "Offset": 7602,
        "Line": 231,
        "Column": 3
      },
      "description": "missing ',' before newline in argument list",
      "context": "\t// The mock might return empty or have pre-populated data\r\n\tt.Logf(\"Retrieved %d enhanced dependencies\", len(enhancedDeps))\r\n}\r\n\r\n// TestSecurityManagerIntegration tests integration with SecurityManager\r",
      "severity": "warning",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\tests\\dependency_manager_config_test.go",
      "line": 234,
      "message": "expected '(', found TestSecurityManagerIntegration",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\tests\\dependency_manager_config_test.go",
        "Offset": 7684,
        "Line": 234,
        "Column": 6
      },
      "description": "expected '(', found TestSecurityManagerIntegration",
      "context": "\r\n// TestSecurityManagerIntegration tests integration with SecurityManager\r\nfunc TestSecurityManagerIntegration(t *testing.T) {\r\n\tlogger := zaptest.NewLogger(t)\r\n\terrorManager := \u0026ErrorManagerImpl{logger: logger}\r",
      "severity": "error",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\tests\\dependency_manager_config_test.go",
      "line": 260,
      "message": "missing ',' before newline in argument list",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\tests\\dependency_manager_config_test.go",
        "Offset": 8543,
        "Line": 260,
        "Column": 3
      },
      "description": "missing ',' before newline in argument list",
      "context": "\t\tt.Errorf(\"AuditWithSecurityManager failed: %v\", err)\r\n\t}\r\n}\r\n\r\n// Mock types for testing\r",
      "severity": "warning",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\tests\\dependency_manager_config_test.go",
      "line": 264,
      "message": "expected operand, found 'type'",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\tests\\dependency_manager_config_test.go",
        "Offset": 8575,
        "Line": 264,
        "Column": 1
      },
      "description": "expected operand, found 'type'",
      "context": "// Mock types for testing\r\n\r\ntype MockSecurityManager struct {\r\n\tlogger *zap.Logger\r\n}\r",
      "severity": "error",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\tests\\dependency_manager_config_test.go",
      "line": 269,
      "message": "missing ',' in argument list",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\tests\\dependency_manager_config_test.go",
        "Offset": 8708,
        "Line": 269,
        "Column": 2
      },
      "description": "missing ',' in argument list",
      "context": "\r\nfunc (m *MockSecurityManager) GetSecret(key string) (string, error) {\r\n\treturn \"mock-secret\", nil\r\n}\r\n\r",
      "severity": "warning",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\tests\\dependency_manager_config_test.go",
      "line": 270,
      "message": "expected operand, found '}'",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\tests\\dependency_manager_config_test.go",
        "Offset": 8735,
        "Line": 270,
        "Column": 1
      },
      "description": "expected operand, found '}'",
      "context": "func (m *MockSecurityManager) GetSecret(key string) (string, error) {\r\n\treturn \"mock-secret\", nil\r\n}\r\n\r\nfunc (m *MockSecurityManager) EncryptData(data []byte) ([]byte, error) {\r",
      "severity": "error",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\tests\\dependency_manager_config_test.go",
      "line": 273,
      "message": "missing ',' in argument list",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\tests\\dependency_manager_config_test.go",
        "Offset": 8815,
        "Line": 273,
        "Column": 2
      },
      "description": "missing ',' in argument list",
      "context": "\r\nfunc (m *MockSecurityManager) EncryptData(data []byte) ([]byte, error) {\r\n\treturn append([]byte(\"encrypted:\"), data...), nil\r\n}\r\n\r",
      "severity": "warning",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\tests\\dependency_manager_config_test.go",
      "line": 274,
      "message": "expected operand, found '}'",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\tests\\dependency_manager_config_test.go",
        "Offset": 8866,
        "Line": 274,
        "Column": 1
      },
      "description": "expected operand, found '}'",
      "context": "func (m *MockSecurityManager) EncryptData(data []byte) ([]byte, error) {\r\n\treturn append([]byte(\"encrypted:\"), data...), nil\r\n}\r\n\r\nfunc (m *MockSecurityManager) DecryptData(encryptedData []byte) ([]byte, error) {\r",
      "severity": "error",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\tests\\dependency_manager_config_test.go",
      "line": 277,
      "message": "missing ',' in argument list",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\tests\\dependency_manager_config_test.go",
        "Offset": 8955,
        "Line": 277,
        "Column": 2
      },
      "description": "missing ',' in argument list",
      "context": "\r\nfunc (m *MockSecurityManager) DecryptData(encryptedData []byte) ([]byte, error) {\r\n\treturn []byte(\"decrypted-data\"), nil\r\n}\r\n\r",
      "severity": "warning",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\tests\\dependency_manager_config_test.go",
      "line": 278,
      "message": "expected operand, found '}'",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\dependency-manager\\tests\\dependency_manager_config_test.go",
        "Offset": 8993,
        "Line": 278,
        "Column": 1
      },
      "description": "expected operand, found '}'",
      "context": "func (m *MockSecurityManager) DecryptData(encryptedData []byte) ([]byte, error) {\r\n\treturn []byte(\"decrypted-data\"), nil\r\n}\r\n\r\nfunc (m *MockSecurityManager) ScanForVulnerabilities(ctx context.Context, dependencies []Dependency) (*VulnerabilityReport, error) {\r",
      "severity": "error",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\error-manager\\auto_fix\\benchmark_test.go",
      "line": 1,
      "message": "expected 'package', found 'EOF'",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\error-manager\\auto_fix\\benchmark_test.go",
        "Offset": 0,
        "Line": 1,
        "Column": 1
      },
      "description": "expected 'package', found 'EOF'",
      "context": "",
      "severity": "error",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\error-manager\\bridges\\demo\\main.go",
      "line": 27,
      "message": "expected declaration, found config",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\error-manager\\bridges\\demo\\main.go",
        "Offset": 574,
        "Line": 27,
        "Column": 2
      },
      "description": "expected declaration, found config",
      "context": "\r\n\t// Create demo configuration\r\n\tconfig := bridges.DefaultRealtimeBridgeConfig()\r\n\tconfig.HTTPPort = 8088\r\n\tconfig.LogFilePath = \"./demo_realtime.log\"\r",
      "severity": "error",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\error-manager\\bridges\\demo\\main.go",
      "line": 229,
      "message": "expected declaration, found 'if'",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\error-manager\\bridges\\demo\\main.go",
        "Offset": 7288,
        "Line": 229,
        "Column": 2
      },
      "description": "expected declaration, found 'if'",
      "context": "\r\n\tvar health map[string]interface{}\r\n\tif err := json.NewDecoder(resp.Body).Decode(\u0026health); err != nil {\r\n\t\tfmt.Printf(\"    ❌ Failed to decode health response: %v\\n\", err)\r\n\t\treturn\r",
      "severity": "error",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\error-manager\\bridges\\demo\\main.go",
      "line": 247,
      "message": "expected declaration, found 'if'",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\error-manager\\bridges\\demo\\main.go",
        "Offset": 7862,
        "Line": 247,
        "Column": 2
      },
      "description": "expected declaration, found 'if'",
      "context": "\r\n\tvar status map[string]interface{}\r\n\tif err := json.NewDecoder(resp.Body).Decode(\u0026status); err != nil {\r\n\t\tfmt.Printf(\"    ❌ Failed to decode status response: %v\\n\", err)\r\n\t\treturn\r",
      "severity": "error",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\n8n-manager\\n8n_manager.go",
      "line": 15,
      "message": "expected ';', found github",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\n8n-manager\\n8n_manager.go",
        "Offset": 186,
        "Line": 15,
        "Column": 18
      },
      "description": "expected ';', found github",
      "context": "\t\"github.com/google/uuid\"\r\n\t\"go.uber.org/zap\"\r\n\t\"\terrormanager \"github.com/email-sender/managers/error-manager\"\"\r\n)\r\n\r",
      "severity": "error",
      "fix_suggestion": "Add missing semicolon"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\n8n-manager\\n8n_manager.go",
      "line": 19,
      "message": "missing import path",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\n8n-manager\\n8n_manager.go",
        "Offset": 325,
        "Line": 19,
        "Column": 1
      },
      "description": "missing import path",
      "context": "\r\n// N8NManager manages n8n workflows and executions with centralized error handling\r\ntype N8NManager struct {\r\n\tbaseURL      string\r\n\tapiKey       string\r",
      "severity": "warning",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\n8n-manager\\n8n_manager.go",
      "line": 21,
      "message": "import path must be a string",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\n8n-manager\\n8n_manager.go",
        "Offset": 387,
        "Line": 21,
        "Column": 15
      },
      "description": "import path must be a string",
      "context": "type N8NManager struct {\r\n\tbaseURL      string\r\n\tapiKey       string\r\n\thttpClient   *http.Client\r\n\tlogger       *zap.Logger\r",
      "severity": "warning",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\n8n-manager\\n8n_manager.go",
      "line": 22,
      "message": "missing import path",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\n8n-manager\\n8n_manager.go",
        "Offset": 409,
        "Line": 22,
        "Column": 15
      },
      "description": "missing import path",
      "context": "\tbaseURL      string\r\n\tapiKey       string\r\n\thttpClient   *http.Client\r\n\tlogger       *zap.Logger\r\n\terrorManager *ErrorManager\r",
      "severity": "warning",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\n8n-manager\\n8n_manager.go",
      "line": 23,
      "message": "missing import path",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\n8n-manager\\n8n_manager.go",
        "Offset": 437,
        "Line": 23,
        "Column": 15
      },
      "description": "missing import path",
      "context": "\tapiKey       string\r\n\thttpClient   *http.Client\r\n\tlogger       *zap.Logger\r\n\terrorManager *ErrorManager\r\n\tmetrics      *N8NMetrics\r",
      "severity": "warning",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\n8n-manager\\n8n_manager.go",
      "line": 24,
      "message": "missing import path",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\n8n-manager\\n8n_manager.go",
        "Offset": 464,
        "Line": 24,
        "Column": 15
      },
      "description": "missing import path",
      "context": "\thttpClient   *http.Client\r\n\tlogger       *zap.Logger\r\n\terrorManager *ErrorManager\r\n\tmetrics      *N8NMetrics\r\n\tmu           sync.RWMutex\r",
      "severity": "warning",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\n8n-manager\\n8n_manager.go",
      "line": 25,
      "message": "missing import path",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\n8n-manager\\n8n_manager.go",
        "Offset": 493,
        "Line": 25,
        "Column": 15
      },
      "description": "missing import path",
      "context": "\tlogger       *zap.Logger\r\n\terrorManager *ErrorManager\r\n\tmetrics      *N8NMetrics\r\n\tmu           sync.RWMutex\r\n}\r",
      "severity": "warning",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\n8n-manager\\n8n_manager.go",
      "line": 26,
      "message": "import path must be a string",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\n8n-manager\\n8n_manager.go",
        "Offset": 520,
        "Line": 26,
        "Column": 15
      },
      "description": "import path must be a string",
      "context": "\terrorManager *ErrorManager\r\n\tmetrics      *N8NMetrics\r\n\tmu           sync.RWMutex\r\n}\r\n\r",
      "severity": "warning",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\n8n-manager\\n8n_manager.go",
      "line": 30,
      "message": "missing import path",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\n8n-manager\\n8n_manager.go",
        "Offset": 591,
        "Line": 30,
        "Column": 1
      },
      "description": "missing import path",
      "context": "\r\n// ErrorManager interface for dependency injection\r\ntype ErrorManager interface {\r\n\tValidateErrorEntry(entry errormanager.ErrorEntry) error\r\n\tCatalogError(entry errormanager.ErrorEntry) error\r",
      "severity": "warning",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\n8n-manager\\n8n_manager.go",
      "line": 31,
      "message": "expected ';', found error",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\n8n-manager\\n8n_manager.go",
        "Offset": 673,
        "Line": 31,
        "Column": 52
      },
      "description": "expected ';', found error",
      "context": "// ErrorManager interface for dependency injection\r\ntype ErrorManager interface {\r\n\tValidateErrorEntry(entry errormanager.ErrorEntry) error\r\n\tCatalogError(entry errormanager.ErrorEntry) error\r\n}\r",
      "severity": "error",
      "fix_suggestion": "Add missing semicolon"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\powershell-bridge\\bridge_server.go",
      "line": 15,
      "message": "expected ';', found \"time\"",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\powershell-bridge\\bridge_server.go",
        "Offset": 275,
        "Line": 15,
        "Column": 12
      },
      "description": "expected ';', found \"time\"",
      "context": "\t\"strconv\"\r\n\t\"sync\"\r\n\t\"syscall\"\t\"time\"\r\n\r\n\t\"github.com/google/uuid\"\r",
      "severity": "error",
      "fix_suggestion": "Add missing semicolon"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\powershell-bridge\\bridge_server.go",
      "line": 24,
      "message": "missing import path",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\powershell-bridge\\bridge_server.go",
        "Offset": 455,
        "Line": 24,
        "Column": 1
      },
      "description": "missing import path",
      "context": "\r\n// PowerShellError represents an error received from PowerShell\r\ntype PowerShellError struct {\r\n\tErrorMessage      string                 `json:\"error_message\"`\r\n\tComponent         string                 `json:\"component\"`\r",
      "severity": "warning",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\powershell-bridge\\bridge_server.go",
      "line": 26,
      "message": "import path must be a string",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\powershell-bridge\\bridge_server.go",
        "Offset": 571,
        "Line": 26,
        "Column": 20
      },
      "description": "import path must be a string",
      "context": "type PowerShellError struct {\r\n\tErrorMessage      string                 `json:\"error_message\"`\r\n\tComponent         string                 `json:\"component\"`\r\n\tContext           map[string]interface{} `json:\"context\"`\r\n\tSeverity          string                 `json:\"severity\"`\r",
      "severity": "warning",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\powershell-bridge\\bridge_server.go",
      "line": 40,
      "message": "missing import path",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\powershell-bridge\\bridge_server.go",
        "Offset": 1304,
        "Line": 40,
        "Column": 1
      },
      "description": "missing import path",
      "context": "\r\n// PowerShellErrorResponse represents the response sent back to PowerShell\r\ntype PowerShellErrorResponse struct {\r\n\tSuccess        bool      `json:\"success\"`\r\n\tErrorID        string    `json:\"error_id\"`\r",
      "severity": "warning",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\powershell-bridge\\bridge_server.go",
      "line": 42,
      "message": "import path must be a string",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\powershell-bridge\\bridge_server.go",
        "Offset": 1403,
        "Line": 42,
        "Column": 17
      },
      "description": "import path must be a string",
      "context": "type PowerShellErrorResponse struct {\r\n\tSuccess        bool      `json:\"success\"`\r\n\tErrorID        string    `json:\"error_id\"`\r\n\tRecoveryAction string    `json:\"recovery_action\"`\r\n\tProcessedAt    time.Time `json:\"processed_at\"`\r",
      "severity": "warning",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\powershell-bridge\\bridge_server.go",
      "line": 49,
      "message": "missing import path",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\powershell-bridge\\bridge_server.go",
        "Offset": 1645,
        "Line": 49,
        "Column": 1
      },
      "description": "missing import path",
      "context": "\r\n// BridgeConfig holds configuration for the PowerShell bridge\r\ntype BridgeConfig struct {\r\n\tPort         int    `json:\"port\"`\r\n\tLogLevel     string `json:\"log_level\"`\r",
      "severity": "warning",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\powershell-bridge\\bridge_server.go",
      "line": 51,
      "message": "import path must be a string",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\powershell-bridge\\bridge_server.go",
        "Offset": 1723,
        "Line": 51,
        "Column": 15
      },
      "description": "import path must be a string",
      "context": "type BridgeConfig struct {\r\n\tPort         int    `json:\"port\"`\r\n\tLogLevel     string `json:\"log_level\"`\r\n\tLogFile      string `json:\"log_file\"`\r\n\tEnableCORS   bool   `json:\"enable_cors\"`\r",
      "severity": "warning",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\powershell-bridge\\bridge_server.go",
      "line": 60,
      "message": "missing import path",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\powershell-bridge\\bridge_server.go",
        "Offset": 2025,
        "Line": 60,
        "Column": 2
      },
      "description": "missing import path",
      "context": "// DefaultBridgeConfig returns default configuration\r\nfunc DefaultBridgeConfig() BridgeConfig {\r\n\treturn BridgeConfig{\r\n\t\tPort:         8081,\r\n\t\tLogLevel:     \"INFO\",\r",
      "severity": "warning",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\powershell-bridge\\bridge_server.go",
      "line": 61,
      "message": "expected ';', found ':'",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\powershell-bridge\\bridge_server.go",
        "Offset": 2053,
        "Line": 61,
        "Column": 7
      },
      "description": "expected ';', found ':'",
      "context": "func DefaultBridgeConfig() BridgeConfig {\r\n\treturn BridgeConfig{\r\n\t\tPort:         8081,\r\n\t\tLogLevel:     \"INFO\",\r\n\t\tLogFile:      \"./powershell_bridge.log\",\r",
      "severity": "error",
      "fix_suggestion": "Add missing semicolon"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\powershell-bridge\\bridge_server.go",
      "line": 71,
      "message": "missing import path",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\powershell-bridge\\bridge_server.go",
        "Offset": 2263,
        "Line": 71,
        "Column": 1
      },
      "description": "missing import path",
      "context": "\r\n// PowerShellBridge implements the bridge server\r\ntype PowerShellBridge struct {\r\n\tconfig       BridgeConfig\r\n\tserver       *http.Server\r",
      "severity": "warning",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\powershell-bridge\\bridge_server.go",
      "line": 73,
      "message": "missing import path",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\powershell-bridge\\bridge_server.go",
        "Offset": 2337,
        "Line": 73,
        "Column": 15
      },
      "description": "missing import path",
      "context": "type PowerShellBridge struct {\r\n\tconfig       BridgeConfig\r\n\tserver       *http.Server\r\n\tlogger       *zap.Logger\r\n\terrorManager *ErrorManagerService\r",
      "severity": "warning",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\script-manager\\script_manager.go",
      "line": 15,
      "message": "expected ';', found \"path/filepath\"",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\script-manager\\script_manager.go",
        "Offset": 385,
        "Line": 15,
        "Column": 12
      },
      "description": "expected ';', found \"path/filepath\"",
      "context": "\t\"io/ioutil\"\r\n\t\"os\"\r\n\t\"os/exec\"\t\"path/filepath\"\r\n\t\"runtime\"\r\n\t\"strings\"\r",
      "severity": "error",
      "fix_suggestion": "Add missing semicolon"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\script-manager\\script_manager.go",
      "line": 27,
      "message": "missing import path",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\script-manager\\script_manager.go",
        "Offset": 636,
        "Line": 27,
        "Column": 1
      },
      "description": "missing import path",
      "context": "\r\n// ScriptManager manages script execution and lifecycle with ErrorManager integration\r\ntype ScriptManager struct {\r\n\tconfig         *Config\r\n\tlogger         *zap.Logger\r",
      "severity": "warning",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\script-manager\\script_manager.go",
      "line": 29,
      "message": "missing import path",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\script-manager\\script_manager.go",
        "Offset": 706,
        "Line": 29,
        "Column": 17
      },
      "description": "missing import path",
      "context": "type ScriptManager struct {\r\n\tconfig         *Config\r\n\tlogger         *zap.Logger\r\n\terrorManager   *ErrorManager\r\n\tcircuitBreaker *CircuitBreaker\r",
      "severity": "warning",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\script-manager\\script_manager.go",
      "line": 30,
      "message": "missing import path",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\script-manager\\script_manager.go",
        "Offset": 735,
        "Line": 30,
        "Column": 17
      },
      "description": "missing import path",
      "context": "\tconfig         *Config\r\n\tlogger         *zap.Logger\r\n\terrorManager   *ErrorManager\r\n\tcircuitBreaker *CircuitBreaker\r\n\tscripts        map[string]*ManagedScript\r",
      "severity": "warning",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\script-manager\\script_manager.go",
      "line": 31,
      "message": "missing import path",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\script-manager\\script_manager.go",
        "Offset": 766,
        "Line": 31,
        "Column": 17
      },
      "description": "missing import path",
      "context": "\tlogger         *zap.Logger\r\n\terrorManager   *ErrorManager\r\n\tcircuitBreaker *CircuitBreaker\r\n\tscripts        map[string]*ManagedScript\r\n\tmodules        map[string]*ScriptModule\r",
      "severity": "warning",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\script-manager\\script_manager.go",
      "line": 32,
      "message": "missing import path",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\script-manager\\script_manager.go",
        "Offset": 799,
        "Line": 32,
        "Column": 17
      },
      "description": "missing import path",
      "context": "\terrorManager   *ErrorManager\r\n\tcircuitBreaker *CircuitBreaker\r\n\tscripts        map[string]*ManagedScript\r\n\tmodules        map[string]*ScriptModule\r\n\ttemplates      map[string]*ScriptTemplate\r",
      "severity": "warning",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\script-manager\\script_manager.go",
      "line": 42,
      "message": "missing import path",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\script-manager\\script_manager.go",
        "Offset": 1114,
        "Line": 42,
        "Column": 1
      },
      "description": "missing import path",
      "context": "\r\n// ManagedScript represents a script under management\r\ntype ManagedScript struct {\r\n\tID           string                 `json:\"id\"`\r\n\tName         string                 `json:\"name\"`\r",
      "severity": "warning",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\script-manager\\script_manager.go",
      "line": 44,
      "message": "import path must be a string",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\script-manager\\script_manager.go",
        "Offset": 1207,
        "Line": 44,
        "Column": 15
      },
      "description": "import path must be a string",
      "context": "type ManagedScript struct {\r\n\tID           string                 `json:\"id\"`\r\n\tName         string                 `json:\"name\"`\r\n\tPath         string                 `json:\"path\"`\r\n\tType         ScriptType             `json:\"type\"`\r",
      "severity": "warning",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\script-manager\\script_manager.go",
      "line": 61,
      "message": "missing import path",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\script-manager\\script_manager.go",
        "Offset": 2045,
        "Line": 61,
        "Column": 1
      },
      "description": "missing import path",
      "context": "\r\n// ScriptModule represents a PowerShell module or script library\r\ntype ScriptModule struct {\r\n\tID          string            `json:\"id\"`\r\n\tName        string            `json:\"name\"`\r",
      "severity": "warning",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\script-manager\\script_manager.go",
      "line": 63,
      "message": "import path must be a string",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\script-manager\\script_manager.go",
        "Offset": 2130,
        "Line": 63,
        "Column": 14
      },
      "description": "import path must be a string",
      "context": "type ScriptModule struct {\r\n\tID          string            `json:\"id\"`\r\n\tName        string            `json:\"name\"`\r\n\tPath        string            `json:\"path\"`\r\n\tVersion     string            `json:\"version\"`\r",
      "severity": "warning",
      "fix_suggestion": "Review syntax and formatting"
    },
    {
      "file": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\script-manager\\script_manager.go",
      "line": 73,
      "message": "missing import path",
      "position": {
        "Filename": "d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\script-manager\\script_manager.go",
        "Offset": 2533,
        "Line": 73,
        "Column": 1
      },
      "description": "missing import path",
      "context": "\r\n// ScriptTemplate represents a script template for generation\r\ntype ScriptTemplate struct {\r\n\tID          string                 `json:\"id\"`\r\n\tName        string                 `json:\"name\"`\r",
      "severity": "warning",
      "fix_suggestion": "Review syntax and formatting"
    }
  ],
  "common_methods": {
    "AddHook": 2,
    "AutoRepair": 1,
    "BuildApplication": 1,
    "BuildDockerImage": 1,
    "BuildImage": 2,
    "Calculate": 2,
    "Call": 1,
    "CanFix": 1,
    "CatalogError": 8,
    "Category": 1,
    "Check": 1,
    "CheckArchitecture": 1,
    "CheckDeploymentReadiness": 2,
    "CheckEcosystem": 1,
    "CheckErrorManagerIntegration": 1,
    "CheckManager": 1,
    "CheckSystemHealth": 3,
    "Cleanup": 8,
    "Close": 1,
    "CollectCodeMetrics": 1,
    "CollectDependencyMetrics": 1,
    "CollectMetrics": 3,
    "CollectPerformanceMetrics": 1,
    "CollectTestCoverage": 1,
    "ConfigureAlerts": 3,
    "CreateEnrichedItem": 1,
    "CreateNetwork": 1,
    "CreateRelease": 1,
    "CreateVolume": 1,
    "DecryptData": 2,
    "DeleteObject": 2,
    "DeployContainer": 1,
    "DeployToEnvironment": 1,
    "Description": 2,
    "Deserialize": 1,
    "EncryptData": 2,
    "ExecuteDeployment": 1,
    "ExportMetrics": 1,
    "GenerateAPIKey": 2,
    "GenerateBadge": 1,
    "GenerateConformityReport": 1,
    "GenerateDashboard": 1,
    "GenerateDeploymentPlan": 2,
    "GenerateFix": 1,
    "GenerateReport": 2,
    "Get": 1,
    "GetAll": 1,
    "GetAllItems": 1,
    "GetBool": 1,
    "GetCategory": 1,
    "GetConfidence": 1,
    "GetConfigManager": 1,
    "GetConformityConfig": 1,
    "GetContainerLogs": 1,
    "GetContainerStatus": 1,
    "GetDependencyMetadata": 3,
    "GetDescription": 1,
    "GetErrorManager": 1,
    "GetInt": 1,
    "GetLogger": 1,
    "GetMetricsHistory": 1,
    "GetName": 1,
    "GetObject": 2,
    "GetPostgreSQLConnection": 2,
    "GetQdrantConnection": 2,
    "GetSecret": 2,
    "GetString": 1,
    "GetType": 1,
    "GetWeightingConfig": 1,
    "HealthCheck": 13,
    "IndexRoadmapItem": 1,
    "Initialize": 7,
    "InitializeConfigManager": 1,
    "IsSet": 1,
    "ListObjects": 2,
    "LoadConfigFile": 1,
    "LoadFromEnv": 1,
    "LoadSecrets": 2,
    "LogError": 1,
    "Name": 2,
    "OptimizeForContainer": 3,
    "ProcessError": 6,
    "PropagateError": 3,
    "PullImage": 1,
    "PushImage": 1,
    "QueryDependencies": 3,
    "Rank": 1,
    "RegisterDefaults": 1,
    "RollbackDeployment": 1,
    "RunMigrations": 2,
    "SaveDependencyMetadata": 3,
    "SaveToFile": 1,
    "ScanDependenciesForVulnerabilities": 2,
    "ScanForVulnerabilities": 1,
    "Serialize": 1,
    "Set": 1,
    "SetCalculator": 1,
    "SetConformityConfig": 1,
    "SetDefault": 1,
    "SetRequiredKeys": 1,
    "SetWeightingConfig": 1,
    "Severity": 2,
    "StartContainers": 1,
    "StartMonitoring": 2,
    "StartOperationMonitoring": 3,
    "StopContainers": 1,
    "StopMonitoring": 2,
    "StopOperationMonitoring": 3,
    "StoreObject": 2,
    "UnmarshalKey": 1,
    "Update": 1,
    "UpdateConformityStatus": 1,
    "Validate": 2,
    "ValidateAPIDocumentation": 1,
    "ValidateAPIKey": 1,
    "ValidateAPIKeyAccess": 2,
    "ValidateArchitectureDiagrams": 1,
    "ValidateError": 1,
    "ValidateErrorEntry": 6,
    "ValidateExamples": 1,
    "ValidateFile": 1,
    "ValidateFix": 1,
    "ValidateForContainerization": 3,
    "ValidateReadme": 1,
    "VerifyEcosystemConformity": 1,
    "VerifyManagerConformity": 1
  },
  "recommendations": [
    {
      "type": "duplication",
      "priority": "high",
      "description": "Found 6 duplicate interfaces that should be consolidated",
      "files": null,
      "action": "migrate"
    },
    {
      "type": "syntax",
      "priority": "critical",
      "description": "Found 59 syntax errors that need immediate attention",
      "files": null,
      "action": "fix-syntax"
    }
  ],
  "dependencies": {
    "errormanager": [
      "github.com/email-sender/managers/error-manager"
    ],
    "errormanager_test": [
      "github.com/email-sender/managers/error-manager",
      "github.com/email-sender/managers/error-manager",
      "github.com/email-sender/managers/error-manager"
    ],
    "main": [
      "github.com/email-sender/managers/interfaces",
      "github.com/email-sender/managers/error-manager/auto_fix",
      "github.com/email-sender/managers/integrated-manager"
    ],
    "processmanager": [
      "github.com/email-sender/managers/error-manager"
    ]
  },
  "complexity_metrics": {
    "average_methods_per_interface": 4.695652173913044,
    "interface_complexity": {
      "BaseManager": 3,
      "CircuitBreaker": 1,
      "Cleaner": 1,
      "ConfigManager": 18,
      "ContainerManager": 4,
      "ContainerManagerInterface": 3,
      "ContentSerializer": 3,
      "DeploymentManager": 4,
      "DeploymentManagerInterface": 3,
      "ErrorManager": 3,
      "HealthChecker": 1,
      "IComplianceReporter": 4,
      "IConformityChecker": 4,
      "IConformityManager": 6,
      "IDocumentationValidator": 4,
      "IMetricsCollector": 4,
      "Initializer": 1,
      "IntegratedErrorManagerInterface": 2,
      "IntegrationManager": 3,
      "LintRule": 5,
      "MonitoringManager": 12,
      "MonitoringManagerInterface": 6,
      "PriorityCalculator": 3,
      "PriorityEngine": 6,
      "RAGClient": 2,
      "RealIntegratedErrorManager": 2,
      "SecurityManager": 10,
      "SecurityManagerInterface": 3,
      "SpecificFixer": 4,
      "Storage": 3,
      "StorageManager": 9,
      "StorageManagerInterface": 8,
      "ValidationRule": 5,
      "Validator": 2
    },
    "package_complexity": {
      "auto_fix": 4,
      "circuitbreaker": 1,
      "configmanager": 28,
      "ingestion": 5,
      "integratedmanager": 25,
      "interfaces": 38,
      "main": 92,
      "navigation": 1,
      "panels": 8,
      "priority": 9,
      "static": 5
    },
    "dependency_depth": 0,
    "coupling_metrics": {}
  },
  "quality_score": {
    "overall_score": 0,
    "code_quality": 0,
    "maintainability": 0,
    "testability": 0
  }
}