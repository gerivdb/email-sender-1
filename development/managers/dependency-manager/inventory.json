{
  "files": [
    {
      "file": "dependency_manager.go",
      "package": "dependency",
      "imports": [
        "sync", "time", "github.com/google/uuid", "github.com/Masterminds/semver/v3", "go.uber.org/zap", "d:/DO/WEB/N8N_tests/PROJETS/EMAIL_SENDER_1/development/managers/interfaces"
      ],
      "types": [
        "DependencyManagerImpl", "DependencyConfig", "PackageManagerConfig", "RegistryConfig", "AuthConfig", "SecurityConfig", "ResolutionConfig", "CacheConfig", "DependencyGraph", "DependencyNode", "RegistryClient", "PackageInfo", "NPMRegistryClient"
      ],
      "methods": [
        "AddNode", "HealthCheck", "GetPackageInfo", "SearchPackages", "NewDependencyManager", "initializeDependencyGraph", "loadExistingMetadata", "saveCache", "checkRegistryHealth", "DetectConflicts", "hasConflict"
      ]
    },
    {
      "file": "base_methods.go",
      "package": "dependency",
      "imports": [
        "context", "fmt", "github.com/email-sender-manager/interfaces"
      ],
      "types": [],
      "methods": [
        "GetID", "GetName", "GetVersion", "GetStatus", "Initialize", "Start", "Stop", "Health", "HealthCheck", "Cleanup"
      ]
    },
    {
      "file": "config.go",
      "package": "dependency",
      "imports": [
        "os", "strconv", "time"
      ],
      "types": [],
      "methods": [
        "loadDependencyConfig", "getEnv", "getEnvInt", "getEnvBool", "getDuration"
      ]
    },
    {
      "file": "helpers.go",
      "package": "dependency",
      "imports": [
        "context", "encoding/json", "fmt", "os", "strings", "d:/DO/WEB/N8N_tests/PROJETS/EMAIL_SENDER_1/development/managers/interfaces"
      ],
      "types": [
        "ConfigFile"
      ],
      "methods": [
        "detectConfigFiles", "analyzeConfigFile", "analyzeGoMod", "analyzePackageJson", "analyzeCargoToml", "analyzeRequirements", "detectDependencyConflicts", "detectResolutionConflicts", "analyzeVulnerabilities", "determineUpdateType"
      ]
    },
    {
      "file": "operations.go",
      "package": "dependency",
      "imports": [
        "context", "fmt", "path/filepath", "time", "github.com/email-sender-manager/interfaces"
      ],
      "types": [],
      "methods": [
        "AnalyzeDependencies", "ResolveDependencies", "UpdateDependency", "CheckForUpdates"
      ]
    },
    {
      "file": "package_resolver.go",
      "package": "dependency",
      "imports": [
        "context", "fmt", "time", "github.com/email-sender-manager/interfaces"
      ],
      "types": [
        "PackageResolverImpl"
      ],
      "methods": [
        "NewPackageResolver", "Resolve", "GetVersions", "FindCompatibleVersion", "detectPackageManager", "resolveGoPackage", "resolveNpmPackage", "getGoVersions", "getNpmVersions"
      ]
    },
    {
      "file": "version_manager.go",
      "package": "dependency",
      "imports": [
        "context", "fmt", "strings", "github.com/Masterminds/semver/v3", "github.com/email-sender-manager/interfaces"
      ],
      "types": [
        "VersionManagerImpl"
      ],
      "methods": [
        "NewVersionManager", "CompareVersions", "IsCompatible", "GetLatestVersion", "GetLatestStableVersion", "normalizeVersion", "FindBestVersion"
      ]
    },
    {
      "file": "modules/deployment_integration.go",
      "package": "deployment",
      "imports": [
        "context", "fmt", "time"
      ],
      "types": [],
      "methods": [
        "initializeDeploymentIntegration", "checkDependencyDeploymentCompatibility", "generateDeploymentMetadata", "verifyDeploymentReadiness", "exportDependencyLockfileForDeployment"
      ]
    },
    {
      "file": "modules/import_manager.go",
      "package": "importmanager",
      "imports": [
        "context", "fmt", "go/ast", "go/parser", "go/token", "os", "path/filepath", "regexp", "sort", "strconv", "strings", "time", "github.com/gerivdb/email-sender-1/development/managers/interfaces", "go.uber.org/zap"
      ],
      "types": [
        "ImportManager"
      ],
      "methods": [
        "NewImportManager", "ValidateImportPaths", "validateFileImports", "isValidImportPath", "isAbsoluteLocalPath", "isImportUnused", "detectImportConflicts", "calculateSummary", "FixRelativeImports", "getModuleName", "fixRelativeImportsInFile", "convertRelativeToAbsolute", "NormalizeModulePaths", "normalizeImportsInFile", "normalizeLocalPath", "DetectImportConflicts", "ScanInvalidImports", "AutoFixImports", "createProjectBackup", "removeUnusedImports", "removeUnusedImportsFromFile", "removeImportFromContent", "ValidateModuleStructure", "isValidModulePath", "validateDependencies", "GenerateImportReport", "generateStatistics", "generateRecommendations"
      ]
    },
    {
      "file": "modules/manager_interfaces.go",
      "package": "interfaces",
      "imports": [
        "context", "time", "go.uber.org/zap"
      ],
      "types": [
        "SecurityManagerInterface", "MonitoringManagerInterface", "StorageManagerInterface", "ContainerManagerInterface", "DeploymentManagerInterface", "AlertConfig", "HealthStatus", "DependencyQuery", "ContainerValidationResult", "ContainerOptimization", "ContainerDependency", "DeploymentPlan", "DeploymentStep", "VulnerabilityReport", "Vulnerability", "OperationMetrics", "SystemMetrics", "IntegrationHealthStatus", "DeploymentReadiness", "ArtifactMetadata", "ErrorManager", "ErrorEntry", "Dependency"
      ],
      "methods": []
    },
    {
      "file": "modules/monitoring_integration.go",
      "package": "monitoring",
      "imports": [
        "context", "fmt", "github.com/gerivdb/email-sender-1/development/managers/interfaces"
      ],
      "types": [],
      "methods": [
        "initializeMonitoringIntegration", "monitorDependencyOperation", "configureOperationAlerts", "monitorSecurityAudit"
      ]
    },
    {
      "file": "modules/real_manager_integration.go",
      "package": "realmanager",
      "imports": [
        "context", "fmt", "time", "github.com/gerivdb/email-sender-1/development/managers/interfaces", "go.uber.org/zap"
      ],
      "types": [
        "RealManagerConnector", "RealSecurityManagerConnector", "RealMonitoringManagerConnector", "RealStorageManagerConnector", "RealContainerManagerConnector", "RealDeploymentManagerConnector"
      ],
      "methods": [
        "NewRealManagerConnector", "InitializeManagers", "GetSecurityManager", "GetMonitoringManager", "GetStorageManager", "GetContainerManager", "GetDeploymentManager",
        "NewRealSecurityManagerConnector", "Initialize", "ScanDependenciesForVulnerabilities", "ValidateAPIKeyAccess", "HealthCheck",
        "NewRealMonitoringManagerConnector", "StartOperationMonitoring", "StopOperationMonitoring", "CheckSystemHealth", "ConfigureAlerts", "CollectMetrics",
        "NewRealStorageManagerConnector", "SaveDependencyMetadata", "GetDependencyMetadata", "QueryDependencies", "StoreObject", "GetObject", "DeleteObject", "ListObjects",
        "NewRealContainerManagerConnector", "ValidateForContainerization", "OptimizeForContainer",
        "NewRealDeploymentManagerConnector", "CheckDeploymentReadiness", "GenerateDeploymentPlan", "CheckDependencyCompatibility", "GenerateArtifactMetadata"
      ]
    },
    {
      "file": "modules/security_integration.go",
      "package": "security",
      "imports": [
        "context", "encoding/json", "fmt", "strings", "time", "github.com/gerivdb/email-sender-1/development/managers/interfaces"
      ],
      "types": [
        "VulnerabilityReport", "VulnerabilityInfo", "SecurityConfig", "RegistryCredentials"
      ],
      "methods": [
        "initializeSecurityIntegration", "loadRegistryCredentials", "configureAuthForPrivateModules", "scanDependenciesForVulnerabilities", "generateVulnerabilityReport"
      ]
    },
    {
      "file": "modules/storage_integration.go",
      "package": "storage",
      "imports": [
        "context", "fmt", "time", "github.com/gerivdb/email-sender-1/development/managers/interfaces"
      ],
      "types": [],
      "methods": [
        "initializeStorageIntegration", "persistDependencyMetadata", "getDependencyMetadata", "updateDependencyAuditStatus", "listDependencyMetadata", "syncDependenciesToStorage"
      ]
    },
    {
      "file": "tests/container_integration.go",
      "package": "tests",
      "imports": [
        "context", "fmt", "github.com/gerivdb/email-sender-1/development/managers/dependencymanager", "github.com/gerivdb/email-sender-1/development/managers/interfaces"
      ],
      "types": [],
      "methods": [
        "initializeContainerIntegration", "validateDependenciesForContainer", "optimizeDependenciesForContainer", "generateDockerfileFromDependencies", "getDependencyContainerStatus"
      ]
    },
    {
      "file": "tests/dependency_manager_config_test.go",
      "package": "tests",
      "imports": [
        "fmt", "os", "path/filepath", "testing", "time", "go.uber.org/zap", "go.uber.org/zap/zaptest", "github.com/gerivdb/email-sender-1/development/managers/dependencymanager", "github.com/gerivdb/email-sender-1/development/managers/interfaces"
      ],
      "types": [
        "MockStorageManager", "MockSecurityManagerFull", "MockMonitoringManagerFull"
      ],
      "methods": [
        "TestConfigManagerIntegration", "TestConfigDefaultFallback", "TestErrorManagerIntegration", "NewMockStorageManager"
      ]
    },
    {
      "file": "tests/dependency_manager_integration_test.go",
      "package": "tests",
      "imports": [
        "context", "testing", "time", "go.uber.org/zap/zaptest", "github.com/gerivdb/email-sender-1/development/managers/dependencymanager", "github.com/gerivdb/email-sender-1/development/managers/interfaces"
      ],
      "types": [],
      "methods": [
        "TestDependencyManagerWithSecurityManager", "TestDependencyManagerWithMonitoringManager", "TestDependencyManagerCrossManagerIntegration"
      ]
    },
    {
      "file": "tests/dependency_manager_test.go",
      "package": "tests",
      "imports": [
        "encoding/json", "os", "path/filepath", "testing", "time", "github.com/gerivdb/email-sender-1/development/managers/interfaces", "golang.org/x/mod/modfile"
      ],
      "types": [
        "MockDepManager"
      ],
      "methods": [
        "List", "Add", "Remove", "Update", "Audit", "Cleanup", "createTestGoMod", "createTestConfig", "TestMockDepManager_List", "TestMockDepManager_Add", "TestMockDepManager_Remove", "TestMockDepManager_Update", "TestGoModParsing", "TestConfigLoading", "TestBackupFunctionality", "TestLogging", "BenchmarkListDependencies", "BenchmarkAddDependency"
      ]
    },
    {
      "file": "tests/full_integration_test.go",
      "package": "tests",
      "imports": [
        "context", "fmt", "testing", "time", "go.uber.org/zap", "go.uber.org/zap/zaptest", "github.com/gerivdb/email-sender-1/development/managers/dependencymanager", "github.com/gerivdb/email-sender-1/development/managers/interfaces"
      ],
      "types": [],
      "methods": [
        "TestFullManagerIntegrationScenario", "TestRemoteDependencyResolution", "TestErrorPropagation"
      ]
    },
    {
      "file": "tests/integration_manager_test.go",
      "package": "tests",
      "imports": [
        "context", "testing", "time", "github.com/stretchr/testify/assert", "github.com/stretchr/testify/mock", "go.uber.org/zap", "github.com/gerivdb/email-sender-1/development/managers/dependencymanager", "github.com/gerivdb/email-sender-1/development/managers/interfaces"
      ],
      "types": [
        "TestifyMockSecurityManager", "TestifyMockMonitoringManager", "TestifyMockStorageManager", "TestifyMockContainerManager", "TestifyMockDeploymentManager"
      ],
      "methods": [
        "GetSecret", "ValidateAPIKey", "EncryptData", "DecryptData", "ScanForVulnerabilities", "HealthCheck", "StartOperationMonitoring", "StopOperationMonitoring", "ConfigureAlerts", "CollectMetrics", "CheckSystemHealth", "StoreObject", "GetObject", "DeleteObject", "ListObjects", "GetDependencyMetadata", "SaveDependencyMetadata", "QueryDependencies", "ValidateForContainerization", "OptimizeForContainer", "GetContainerDependencies", "ValidateContainerCompatibility", "BuildDependencyImage", "CheckDependencyCompatibility", "GenerateArtifactMetadata", "ValidateDeploymentDependencies", "UpdateDeploymentConfig", "GetEnvironmentDependencies", "TestSecurityIntegration", "TestStorageIntegration", "TestContainerIntegration"
      ]
    },
    {
      "file": "tests/integration_test.go",
      "package": "tests",
      "imports": [
        "testing"
      ],
      "types": [],
      "methods": [
        "TestPlaceholder"
      ]
    },
    {
      "file": "tests/mocks_common_test.go",
      "package": "tests",
      "imports": [
        "context", "encoding/json", "time", "go.uber.org/zap", "github.com/gerivdb/email-sender-1/development/managers/interfaces"
      ],
      "types": [
        "MockSecurityManagerFull", "MockMonitoringManagerFull", "MockStorageManager"
      ],
      "methods": [
        "GetSecret", "ValidateAPIKey", "HealthCheck", "EncryptData", "DecryptData", "ScanForVulnerabilities", "CollectMetrics", "CheckSystemHealth", "StartOperationMonitoring", "StopOperationMonitoring", "ConfigureAlerts", "NewMockStorageManager", "StoreObject", "GetObject", "DeleteObject", "ListObjects"
      ]
    }
  ]
}
