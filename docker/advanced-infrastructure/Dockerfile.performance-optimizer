# Ultra-Advanced 8-Level Framework - AI Performance Optimizer
FROM pytorch/pytorch:2.1.0-cuda12.1-cudnn8-runtime AS base

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
   build-essential \
   git \
   curl \
   htop \
   nvidia-ml-py \
   && rm -rf /var/lib/apt/lists/*

# Copy requirements
COPY requirements-ai.txt .
RUN pip install --no-cache-dir -r requirements-ai.txt

# Install additional ML libraries
RUN pip install --no-cache-dir \
   torch-audio \
   torch-vision \
   transformers \
   scikit-learn \
   xgboost \
   lightgbm \
   optuna \
   ray[tune] \
   tensorboard \
   mlflow

# Copy AI models and source code
COPY ./ai-optimizer/ ./
COPY ./models/ ./models/

# Create non-root user
RUN groupadd -r aiopt && useradd -r -g aiopt aiopt
RUN chown -R aiopt:aiopt /app

# Switch to non-root user
USER aiopt

# Health check
HEALTHCHECK --interval=30s --timeout=15s --start-period=30s --retries=3 \
   CMD ["python", "-c", "import requests; requests.get('http://localhost:8080/health', timeout=10)"]

# Expose ports
EXPOSE 8080 8443 9090 6006

# Environment variables
ENV PYTHONUNBUFFERED=1
ENV CUDA_VISIBLE_DEVICES=0
ENV OMP_NUM_THREADS=4

# Metadata
LABEL maintainer="Ultra-Advanced Framework Team" \
   version="1.0.0" \
   description="AI-Powered Performance Optimizer with GPU Acceleration" \
   org.opencontainers.image.title="performance-optimizer" \
   org.opencontainers.image.description="Real-time AI performance optimization engine" \
   org.opencontainers.image.version="1.0.0"

ENTRYPOINT ["python", "optimizer.py"]
CMD ["--config=/config/optimizer.yaml", "--gpu-enabled=true"]
