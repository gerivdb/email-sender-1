@startuml InputSegmenter Architecture

skinparam backgroundColor white
skinparam handwritten false
skinparam monochrome false
skinparam shadowing false
skinparam defaultFontName Arial
skinparam defaultFontSize 12
skinparam roundCorner 8
skinparam dpi 300
skinparam arrowColor #2C3E50
skinparam noteBackgroundColor #FEF9E7
skinparam noteBorderColor #F39C12

title "Architecture du module InputSegmenter"

package "Module InputSegmentation" {
  [Initialize-InputSegmentation] as Init
  [Measure-InputSize] as Measure
  [Split-TextInput] as SplitText
  [Split-JsonInput] as SplitJson
  [Split-FileInput] as SplitFile
  [Split-Input] as SplitGeneric
  [Save-SegmentationState] as SaveState
  [Get-SegmentationState] as GetState
  [Invoke-WithSegmentation] as InvokeSegmentation
}

package "Types d'entrées" {
  [Texte] as Text
  [JSON] as Json
  [Fichier] as File
  [Objet] as Object
}

package "Modules d'intégration" {
  [Agent Auto] as AgentAuto
  [Traitement parallèle] as Parallel
  [Cache prédictif] as Cache
  [Segmenteurs de formats] as FormatSegmenters
}

package "Stockage" {
  database "État de segmentation" as StateDB
}

' Flux d'initialisation
Init --> Measure : configure
Init --> SplitText : configure
Init --> SplitJson : configure
Init --> SplitFile : configure
Init --> SplitGeneric : configure
Init --> SaveState : configure
Init --> GetState : configure
Init --> InvokeSegmentation : configure

' Flux de mesure
Measure <-- Text : mesure
Measure <-- Json : mesure
Measure <-- File : mesure
Measure <-- Object : mesure

' Flux de segmentation
SplitText <-- Text : segmente
SplitJson <-- Json : segmente
SplitFile <-- File : segmente
SplitGeneric <-- Text : segmente
SplitGeneric <-- Json : segmente
SplitGeneric <-- File : segmente
SplitGeneric <-- Object : segmente

' Flux d'état
SaveState --> StateDB : sauvegarde
GetState <-- StateDB : récupère

' Flux d'exécution
InvokeSegmentation --> SplitGeneric : utilise
InvokeSegmentation --> SaveState : utilise
InvokeSegmentation --> GetState : utilise

' Intégrations
AgentAuto --> SplitGeneric : utilise
Parallel --> SplitGeneric : utilise
Cache --> SplitGeneric : utilise
FormatSegmenters --> SplitGeneric : étend

@enduml
