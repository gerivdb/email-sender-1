#!/usr/bin/env pwsh

# Script de r√©solution d√©finitive des erreurs Go Toolchain dans VS Code
Write-Host "üîß R√©solution d√©finitive des erreurs Go Toolchain VS Code..." -ForegroundColor Yellow

# 1. Arr√™ter tous les processus VS Code
Write-Host "`nüì± Arr√™t de tous les processus VS Code..." -ForegroundColor Cyan
try {
    Get-Process "Code" -ErrorAction SilentlyContinue | Stop-Process -Force
    Start-Sleep -Seconds 2
    Write-Host "   ‚úÖ Processus VS Code arr√™t√©s" -ForegroundColor Green
} catch {
    Write-Host "   ‚ö†Ô∏è  Aucun processus VS Code √† arr√™ter" -ForegroundColor Yellow
}

# 2. Nettoyer le cache Go de VS Code
Write-Host "`nüßπ Nettoyage du cache Go VS Code..." -ForegroundColor Cyan
$vscodeGoCache = "$env:USERPROFILE\.vscode\extensions\golang.go-*"
if (Test-Path $vscodeGoCache) {
    Remove-Item $vscodeGoCache -Recurse -Force -ErrorAction SilentlyContinue
    Write-Host "   ‚úÖ Cache Go VS Code nettoy√©" -ForegroundColor Green
} else {
    Write-Host "   ‚ö†Ô∏è  Pas de cache Go VS Code trouv√©" -ForegroundColor Yellow
}

# 3. Forcer les variables d'environnement syst√®me
Write-Host "`nüåç Configuration des variables d'environnement syst√®me..." -ForegroundColor Cyan
$properGoRoot = "$env:USERPROFILE\sdk\go1.23.9"
$properGoPath = "$env:USERPROFILE\go"

# D√©finir les variables d'environnement machine
[Environment]::SetEnvironmentVariable("GOROOT", $properGoRoot, "User")
[Environment]::SetEnvironmentVariable("GOPATH", $properGoPath, "User")
Write-Host "   ‚úÖ Variables d'environnement syst√®me configur√©es" -ForegroundColor Green

# 4. Mettre √† jour les param√®tres VS Code workspace
Write-Host "`n‚öôÔ∏è  Mise √† jour des param√®tres VS Code workspace..." -ForegroundColor Cyan
$settingsPath = ".vscode\settings.json"

if (Test-Path $settingsPath) {
    $settings = Get-Content $settingsPath | ConvertFrom-Json
} else {
    New-Item -Path ".vscode" -ItemType Directory -Force | Out-Null
    $settings = @{}
}

# Forcer les param√®tres Go
$settings."go.goroot" = $properGoRoot.Replace('\', '\\')
$settings."go.gopath" = $properGoPath.Replace('\', '\\')
$settings."go.toolsGopath" = $properGoPath.Replace('\', '\\')
$settings."go.alternateTools" = @{
    "go" = "$properGoRoot\bin\go.exe".Replace('\', '\\')
}
$settings."go.useLanguageServer" = $true
$settings."gopls" = @{
    "build.env" = @{
        "GOROOT" = $properGoRoot.Replace('\', '\\')
        "GOPATH" = $properGoPath.Replace('\', '\\')
    }
}

$settings | ConvertTo-Json -Depth 10 | Set-Content $settingsPath
Write-Host "   ‚úÖ Param√®tres VS Code workspace mis √† jour" -ForegroundColor Green

# 5. Nettoyer le cache Go module corrompu
Write-Host "`nüóëÔ∏è  Nettoyage du cache Go module corrompu..." -ForegroundColor Cyan
try {
    $corruptedToolchain = "$env:USERPROFILE\go\pkg\mod\golang.org\toolchain@v0.0.1-go1.23.9.windows-amd64"
    if (Test-Path $corruptedToolchain) {
        # Prendre possession du dossier
        takeown /f $corruptedToolchain /r /d y 2>$null | Out-Null
        icacls $corruptedToolchain /grant "$env:USERNAME:(F)" /t 2>$null | Out-Null
        Remove-Item $corruptedToolchain -Recurse -Force -ErrorAction SilentlyContinue
        Write-Host "   ‚úÖ Cache Go module corrompu supprim√©" -ForegroundColor Green
    } else {
        Write-Host "   ‚ö†Ô∏è  Pas de cache corrompu trouv√©" -ForegroundColor Yellow
    }
} catch {
    Write-Host "   ‚ö†Ô∏è  Impossible de supprimer le cache corrompu (peut n√©cessiter des droits admin)" -ForegroundColor Yellow
}

# 6. V√©rifier l'installation Go
Write-Host "`nüß™ V√©rification de l'installation Go..." -ForegroundColor Cyan
& "$properGoRoot\bin\go.exe" version
if ($LASTEXITCODE -eq 0) {
    Write-Host "   ‚úÖ Installation Go valide" -ForegroundColor Green
} else {
    Write-Host "   ‚ùå Probl√®me avec l'installation Go" -ForegroundColor Red
}

# 7. Tester la compilation
Write-Host "`nüî® Test de compilation..." -ForegroundColor Cyan
Push-Location "cmd\roadmap-cli"
try {
    & "$properGoRoot\bin\go.exe" build -o test-build.exe
    if ($LASTEXITCODE -eq 0) {
        Write-Host "   ‚úÖ Compilation r√©ussie" -ForegroundColor Green
        Remove-Item "test-build.exe" -ErrorAction SilentlyContinue
    } else {
        Write-Host "   ‚ùå √âchec de compilation" -ForegroundColor Red
    }
} finally {
    Pop-Location
}

Write-Host "`nüéØ Instructions finales:" -ForegroundColor Yellow
Write-Host "   1. Red√©marrez compl√®tement VS Code" -ForegroundColor Cyan
Write-Host "   2. Ouvrez le Command Palette (Ctrl+Shift+P)" -ForegroundColor Cyan
Write-Host "   3. Ex√©cutez: 'Go: Restart Language Server'" -ForegroundColor Cyan
Write-Host "   4. Si n√©cessaire: 'Developer: Reload Window'" -ForegroundColor Cyan

Write-Host "`n‚úÖ Script de r√©solution d√©finitive termin√©!" -ForegroundColor Green
Write-Host "Les erreurs Go Toolchain devraient √™tre r√©solues apr√®s red√©marrage de VS Code." -ForegroundColor Green
