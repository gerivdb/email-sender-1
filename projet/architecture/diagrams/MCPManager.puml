@startuml MCPManager Architecture

skinparam backgroundColor white
skinparam handwritten false
skinparam monochrome false
skinparam shadowing false
skinparam defaultFontName Arial
skinparam defaultFontSize 12
skinparam roundCorner 8
skinparam dpi 300
skinparam arrowColor #2C3E50
skinparam noteBackgroundColor #FEF9E7
skinparam noteBorderColor #F39C12

title "Architecture du module MCPManager"

package "Module MCPManager" {
  [Find-MCPServers] as FindServers
  [New-MCPConfiguration] as NewConfig
  [Start-MCPManager] as StartManager
  [Invoke-MCPCommand] as InvokeCommand
  [Start-MCPServer] as StartServer
  [Stop-MCPServer] as StopServer
  [Install-MCPDependencies] as InstallDeps
  [Test-MCPServer] as TestServer
  [Write-MCPLog] as WriteLog
}

package "Serveurs MCP" {
  [Serveur local] as LocalServer
  [Serveur n8n] as N8nServer
  [Serveur Notion] as NotionServer
  [Serveur Gateway] as GatewayServer
  [Serveur Git Ingest] as GitServer
}

package "Scripts Python" {
  [mcp_manager.py] as ManagerPy
  [mcp_agent.py] as AgentPy
}

package "Modules d'intégration" {
  [MCPClient] as Client
  [PyMCPfy] as PyMCPfy
}

package "Stockage" {
  database "Configuration MCP" as ConfigDB
  database "Serveurs détectés" as ServersDB
}

' Flux de détection
FindServers --> TestServer : utilise
FindServers --> ServersDB : sauvegarde
TestServer --> WriteLog : journalise

' Flux de configuration
NewConfig --> ConfigDB : génère
NewConfig --> WriteLog : journalise

' Flux de démarrage
StartManager --> NewConfig : utilise
StartManager --> ManagerPy : exécute
StartManager --> AgentPy : exécute
StartManager --> WriteLog : journalise

' Flux d'exécution de commandes
InvokeCommand --> WriteLog : journalise

' Flux de gestion des serveurs
StartServer --> LocalServer : démarre
StartServer --> N8nServer : démarre
StartServer --> NotionServer : démarre
StartServer --> GatewayServer : démarre
StartServer --> GitServer : démarre
StartServer --> Client : initialise
StartServer --> WriteLog : journalise

StopServer --> LocalServer : arrête
StopServer --> N8nServer : arrête
StopServer --> NotionServer : arrête
StopServer --> GatewayServer : arrête
StopServer --> GitServer : arrête
StopServer --> WriteLog : journalise

' Flux d'installation
InstallDeps --> WriteLog : journalise

' Intégrations
Client --> FindServers : utilise
PyMCPfy --> ManagerPy : utilise

' Notes
note bottom of FindServers
  Détecte les serveurs MCP locaux et distants
  en analysant les ports et services
end note

note bottom of NewConfig
  Génère une configuration MCP
  pour différents types de serveurs
end note

note bottom of StartManager
  Démarre le gestionnaire de serveurs MCP
  ou un agent MCP pour exécuter des requêtes
end note

note bottom of StartServer
  Démarre un serveur MCP spécifique
  et initialise la connexion
end note

@enduml
