{
  "name": "Email Sender - Phase 4 (Gestion Concerts Confirm\u00e9s)",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 30
            }
          ]
        }
      },
      "id": "3b7319d1-e905-4843-8f1e-30793b97e403",
      "name": "Trigger Phase 4",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [
        580,
        300
      ]
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "getAll",
        "databaseId": {
          "__rl": true,
          "value": "1c481449-f795-8095-a5cf-cc4418e7ddb7",
          "mode": "list",
          "cachedResultName": "LOT1",
          "cachedResultUrl": "https://www.notion.so/1c481449f7958095a5cfcc4418e7ddb7"
        },
        "filterType": "manual",
        "conditions": {
          "string": [
            {
              "value1": "{{ $json.properties.Status.status.name }}",
              "operation": "equals",
              "value2": "Confirmation"
            }
          ]
        },
        "options": {}
      },
      "id": "894f9cd2-f4f7-4ecd-a5b1-7fe91fb87260",
      "name": "Get Confirmed Bookings",
      "type": "n8n-nodes-base.notion",
      "typeVersion": 1,
      "position": [
        800,
        300
      ],
      "credentials": {
        "notionApi": {
          "id": "gFvw0ObPabSVTQIp",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Pr\u00e9paration des donn\u00e9es pour Google Calendar\nconst events = [];\n\nfor (const item of items) {\n  try {\n    // Extraction des donn\u00e9es de la page Notion\n    const properties = item.json.properties;\n    const name = properties.Name.title[0]?.text.content || 'Concert sans nom';\n    const date = properties.Date?.date?.start;\n    const venue = properties.Venue?.rich_text[0]?.text.content || 'Lieu \u00e0 confirmer';\n    \n    if (!date) {\n      // Ignorer les \u00e9v\u00e9nements sans date\n      continue;\n    }\n    \n    // Cr\u00e9ation de l'\u00e9v\u00e9nement Google Calendar\n    events.push({\n      json: {\n        calendarId: \"f4641f7364224dbdba9151649dca276cce21ac806f327b8c9056b35ba41be559@group.calendar.google.com\",\n        summary: `Concert Gribitch - ${venue}`,\n        description: `Concert confirm\u00e9 suite \u00e0 la prospection\\n\\nLieu: ${venue}\\nPage Notion: ${item.json.url}`,\n        start: {\n          date: date\n        },\n        end: {\n          date: date\n        },\n        colorId: \"11\", // Rouge pour les concerts confirm\u00e9s\n        status: \"confirmed\"\n      }\n    });\n  } catch (error) {\n    // Gestion des erreurs\n    console.log(`Erreur lors du traitement de l'\u00e9l\u00e9ment: ${error.message}`);\n  }\n}\n\nreturn events;"
      },
      "id": "3802bc6c-c156-479d-81a7-24a1235f0d18",
      "name": "Pr\u00e9parer \u00c9v\u00e9nements GCal",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1020,
        300
      ]
    },
    {
      "parameters": {
        "resource": "event",
        "operation": "create",
        "calendarId": "={{ $json.calendarId }}",
        "summary": "={{ $json.summary }}",
        "description": "={{ $json.description }}",
        "start": "={{ $json.start }}",
        "end": "={{ $json.end }}",
        "options": {
          "colorId": "={{ $json.colorId }}",
          "status": "={{ $json.status }}"
        }
      },
      "id": "2aef6729-c046-417c-9dfc-8b475b9a1313",
      "name": "Create GCal Event",
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1,
      "position": [
        1240,
        300
      ],
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "oO79tp1wawPKDEpg",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Pr\u00e9paration des donn\u00e9es pour la mise \u00e0 jour Notion\nconst updates = [];\n\nfor (const item of items) {\n  try {\n    // Extraction de l'ID de la page Notion\n    const pageId = item.json.id;\n    \n    // Cr\u00e9ation de la mise \u00e0 jour\n    updates.push({\n      json: {\n        pageId: pageId,\n        properties: {\n          \"Status\": {\n            \"status\": {\n              \"name\": \"Confirm\u00e9 GCal\"\n            }\n          },\n          \"Logistique\": {\n            \"rich_text\": [\n              {\n                \"text\": {\n                  \"content\": \"\u2705 \u00c9v\u00e9nement cr\u00e9\u00e9 dans Google Calendar\\n\u23f3 En attente de pr\u00e9paration logistique\"\n                }\n              }\n            ]\n          }\n        }\n      }\n    });\n  } catch (error) {\n    // Gestion des erreurs\n    console.log(`Erreur lors du traitement de l'\u00e9l\u00e9ment: ${error.message}`);\n  }\n}\n\nreturn updates;"
      },
      "id": "cc9d92dc-5516-4a92-b4c4-88a18e68d146",
      "name": "Pr\u00e9parer Update Notion",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1460,
        300
      ]
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "update",
        "pageId": "={{ $json.pageId }}",
        "properties": "={{ $json.properties }}"
      },
      "id": "671105b1-2405-4f83-8f16-3c4ad34a22a6",
      "name": "Update Notion Status",
      "type": "n8n-nodes-base.notion",
      "typeVersion": 1,
      "position": [
        1680,
        300
      ],
      "credentials": {
        "notionApi": {
          "id": "gFvw0ObPabSVTQIp",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "content": "## \u2705 Phase 4: Gestion des Concerts Confirm\u00e9s\n\nD\u00e9clencheur: Trigger Phase 4 (Cron toutes les 30 minutes)\nObjectif: Cr\u00e9er \u00e9v\u00e9nements GCal et pr\u00e9parer la logistique",
        "height": 280,
        "width": 1220,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        560,
        180
      ],
      "id": "26ddcbba-c26e-41c4-8c71-89d048a9269c",
      "name": "Sticky Note Phase 4"
    }
  ],
  "connections": {
    "3b7319d1-e905-4843-8f1e-30793b97e403": {
      "main": [
        [
          {
            "node": "894f9cd2-f4f7-4ecd-a5b1-7fe91fb87260",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "894f9cd2-f4f7-4ecd-a5b1-7fe91fb87260": {
      "main": [
        [
          {
            "node": "3802bc6c-c156-479d-81a7-24a1235f0d18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "3802bc6c-c156-479d-81a7-24a1235f0d18": {
      "main": [
        [
          {
            "node": "2aef6729-c046-417c-9dfc-8b475b9a1313",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "2aef6729-c046-417c-9dfc-8b475b9a1313": {
      "main": [
        [
          {
            "node": "cc9d92dc-5516-4a92-b4c4-88a18e68d146",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "cc9d92dc-5516-4a92-b4c4-88a18e68d146": {
      "main": [
        [
          {
            "node": "671105b1-2405-4f83-8f16-3c4ad34a22a6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {},
  "versionId": "5a8b8a8a-8a8a-4a8a-8a8a-8a8a8a8a8a8a",
  "id": "4",
  "meta": {
    "instanceId": "b888bd11d2a9b7f1b279386f140a9b78c55afa0dbe4a6d35f4590595b0503772"
  },
  "tags": [
    {
      "name": "Phase 4",
      "color": "#ff6d33"
    }
  ]
}
