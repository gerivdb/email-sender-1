# ðŸ”„ Redis Configuration for Smart Infrastructure
# Optimized Redis configuration for Smart Infrastructure Orchestrator

# Network
bind 0.0.0.0
port 6379
timeout 300
tcp-keepalive 60
tcp-backlog 511

# General
daemonize no
supervised no
pidfile /var/run/redis_6379.pid
loglevel notice
logfile ""
databases 16

# Snapshotting
save 900 1
save 300 10
save 60 10000
stop-writes-on-bgsave-error yes
rdbcompression yes
rdbchecksum yes
dbfilename dump.rdb
dir /data

# Replication
# replica-serve-stale-data yes
# replica-read-only yes

# Security
# requirepass foobared
# rename-command FLUSHDB ""
# rename-command FLUSHALL ""

# Memory management
maxmemory 512mb
maxmemory-policy allkeys-lru
maxmemory-samples 5

# Lazy freeing
lazyfree-lazy-eviction yes
lazyfree-lazy-expire yes
lazyfree-lazy-server-del yes

# Append only file
appendonly yes
appendfilename "appendonly.aof"
appendfsync everysec
no-appendfsync-on-rewrite no
auto-aof-rewrite-percentage 100
auto-aof-rewrite-min-size 64mb
aof-load-truncated yes
aof-use-rdb-preamble yes

# Lua scripting
lua-time-limit 5000

# Slow log
slowlog-log-slower-than 10000
slowlog-max-len 128

# Latency monitor
latency-monitor-threshold 100

# Event notification
notify-keyspace-events ""

# Advanced config
hash-max-ziplist-entries 512
hash-max-ziplist-value 64
list-max-ziplist-size -2
list-compress-depth 0
set-max-intset-entries 512
zset-max-ziplist-entries 128
zset-max-ziplist-value 64
hll-sparse-max-bytes 3000
stream-node-max-bytes 4096
stream-node-max-entries 100

# Active rehashing
activerehashing yes

# Client output buffer limits
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit replica 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60

# Client query buffer limit
client-query-buffer-limit 1gb

# Protocol max bulk length
proto-max-bulk-len 512mb

# Hz frequency (1-500)
hz 10

# Enable active defragmentation
# activedefrag yes

# Jemalloc background thread
jemalloc-bg-thread yes

# Smart Infrastructure specific optimizations
# These keys are used by Smart Infrastructure for caching
# service status, health checks, and configuration

# Key expiry for Smart Infrastructure cache
# smart-infrastructure:service:* keys expire in 5 minutes
# smart-infrastructure:health:* keys expire in 2 minutes
# smart-infrastructure:config:* keys expire in 30 minutes
