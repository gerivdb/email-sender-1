# ðŸ“Š Prometheus Configuration for RAG System
# Comprehensive monitoring setup for all RAG components

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'rag-system'
    environment: 'development'

# Rule files for alerting
rule_files:
  - "alert_rules.yml"

# Scrape configurations
scrape_configs:
  # RAG System API Metrics
  - job_name: 'rag-server'
    static_configs:
      - targets: ['rag-server:9090']
    metrics_path: '/metrics'
    scrape_interval: 10s
    scrape_timeout: 5s
    honor_labels: true
    params:
      format: ['prometheus']

  # QDrant Vector Database Metrics
  - job_name: 'qdrant'
    static_configs:
      - targets: ['qdrant:6333']
    metrics_path: '/metrics'
    scrape_interval: 15s
    scrape_timeout: 10s

  # Redis Cache Metrics
  - job_name: 'redis'
    static_configs:
      - targets: ['redis:6379']
    metrics_path: '/metrics'
    scrape_interval: 15s

  # System Metrics (Node Exporter)
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 15s

  # Prometheus Self-Monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s

  # Grafana Metrics
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']
    metrics_path: '/metrics'
    scrape_interval: 30s

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Remote write for long-term storage (optional)
# remote_write:
#   - url: "https://prometheus-remote-write-endpoint"
#     headers:
#       Authorization: "Bearer <token>"

# Storage configuration
storage:
  tsdb:
    retention.time: 30d
    retention.size: 10GB
