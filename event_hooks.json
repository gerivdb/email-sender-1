[
  {
    "path": "ACTIONS_046_060_IMPLEMENTATION_REPORT.md",
    "type": "logger",
    "content_snippet": "# üéØ Rapport d'Impl√©mentation - Actions Atomiques 046-060\r\n\r\n## üìã R√©sum√© Ex√©cutif\r\n\r\n**Date d'ex√©cution** : 2025-06-19  \r\n**Statut global** : ‚úÖ **SUCC√àS COMPLET**\r\n\r\nToutes les actions du..."
  },
  {
    "path": "CHANGELOG_PHASE3.md",
    "type": "report",
    "content_snippet": "# CHANGELOG Phase 3 - DocManager v66\r\n\r\n## Nouveaut√©s\r\n\r\n- Impl√©mentation du moteur de validation documentaire (validator.go, report.go)\r\n- D√©tection et r√©solution de conflits (conflict_detector.g..."
  },
  {
    "path": "2025-0701-1614-problemes.md",
    "type": "logger",
    "content_snippet": "[{\r\n\t\"resource\": \"/D:/DO/WEB/N8N_tests/PROJETS/EMAIL_SENDER_1/backup/20250628-201113/cmd/gen_read_file_spec/gen_read_file_spec.go\",\r\n\t\"owner\": \"_generated_diagnostic_collection_name_#10\",\r\n\t\"severity\"..."
  },
  {
    "path": "2025-0701-1614-problemes.md",
    "type": "report",
    "content_snippet": "[{\r\n\t\"resource\": \"/D:/DO/WEB/N8N_tests/PROJETS/EMAIL_SENDER_1/backup/20250628-201113/cmd/gen_read_file_spec/gen_read_file_spec.go\",\r\n\t\"owner\": \"_generated_diagnostic_collection_name_#10\",\r\n\t\"severity\"..."
  },
  {
    "path": "PHASE_06_SUCCESS_REPORT.md",
    "type": "report",
    "content_snippet": "# üéâ PHASE 0.6 IMPLEMENTATION COMPLETE - SUCCESS REPORT\r\n\r\n## üìÖ Date: 2025-06-17 15:30:00\r\n\r\n## üè∑Ô∏è Phase: 0.6 - Scripts et Outils Automatis√©s  \r\n\r\n## ‚úÖ Status: **IMPLEMENTATION SUCCESSFUL..."
  },
  {
    "path": "PHASE_1_3_ERROR_MANAGEMENT_AUDIT_REPORT.md",
    "type": "logger",
    "content_snippet": "# V43D Dependency Manager - Phase 1.3 Error Management Audit Report\r\n\r\n**Date:** June 5, 2025  \r\n**Audit Phase:** 1.3 - Error Management Audit  \r\n**Status:** COMPLETED  \r\n**Previous Phases:** 1.1 (Arc..."
  },
  {
    "path": "PROMPT_ULTRA_GRANULARISE_V2.md",
    "type": "report",
    "content_snippet": "# Prompt Ultra-Granularis√© v2.0 - Sp√©cification Ex√©cutable Sans Improvisation\r\n\r\n## üîç ANALYSE DES DIFFICULT√âS PHASE 1 FMOUA\r\n\r\n**Bas√© sur l'analyse de l'impl√©mentation Phase 1 FMOUA - Le√ßons..."
  },
  {
    "path": "README-load.md",
    "type": "report",
    "content_snippet": "# Documentation des scripts de charge\r\n\r\nCe dossier contient‚ÄØ:\r\n- Les sc√©narios de charge (`load_cases.md`)\r\n- Les modules critiques √† tester (`load_targets.md`)\r\n- Le script de charge (`load_test..."
  },
  {
    "path": "README-rollback.md",
    "type": "report",
    "content_snippet": "# Documentation rollback\r\n\r\nCe dossier contient‚ÄØ:\r\n- Les rapports de rollback (`rollback_report.md`, `large_data_rollback_report.md`)\r\n- Les points critiques (`rollback_points.md`)\r\n- Les proc√©dure..."
  },
  {
    "path": "README_V49_PHASE1.md",
    "type": "report",
    "content_snippet": "# Manager Toolkit v49 - Int√©gration des Nouveaux Outils\r\n\r\n## üìù Introduction\r\n\r\nCe document pr√©sente l'impl√©mentation de la phase 1.1 du plan v49 concernant l'int√©gration de nouveaux outils d'a..."
  },
  {
    "path": "ROADMAP_FIX_RESTAURATION.md",
    "type": "report",
    "content_snippet": "# üõ†Ô∏è Roadmap de Restauration \u0026 S√©curisation de la Branche `fix/restore-core-modules-broken-merge`\r\n\r\n---\r\n\r\n## üìù CONTEXTE, ENJEUX \u0026 MOTIVATIONS\r\n\r\nSuite √† une s√©rie de merges et r√©solution..."
  },
  {
    "path": "SECTION_1_4_IMPLEMENTATION_RECOMMANDATIONS.md",
    "type": "logger",
    "content_snippet": "# Section 1.4 - Impl√©mentation des Recommandations\r\n\r\n## Vue d'ensemble\r\n\r\nCette section d√©taille l'impl√©mentation des recommandations issues de l'audit de gestion des erreurs (Section 1.3). Elle p..."
  },
  {
    "path": "_templates\\doc-structure\\new\\prompt.js",
    "type": "logger",
    "content_snippet": "// prompt.js for doc-structure template\r\nconst { createLogger } = require('../../helpers/logger-helper.js');\r\n\r\nconst logger = createLogger({ \r\n  verbosity: 'info',\r\n  useEmoji: true\r\n});\r\n\r\nmodule.ex..."
  },
  {
    "path": "_templates\\helpers\\commands-helper.js",
    "type": "report",
    "content_snippet": "/**\r\n * Helper pour la gestion des commandes et de la configuration dans les templates\r\n */\r\nconst config = {\r\n  commands: {\r\n    update: 'hygen plan-dev update task-status --task \"{taskId}\" --status ..."
  },
  {
    "path": "_templates\\helpers\\docs\\logger-documentation.md",
    "type": "logger",
    "content_snippet": "# Syst√®me de Logging pour Templates Hygen\r\n\r\n## Vue d'ensemble\r\n\r\nLe syst√®me de logging est un module centralis√© qui fournit des fonctionnalit√©s de logging coh√©rentes et cross-platform pour tous ..."
  },
  {
    "path": "_templates\\helpers\\docs\\logger-guide.md",
    "type": "logger",
    "content_snippet": "# Documentation du Syst√®me de Logging pour Templates Hygen\r\n\r\n## Table des mati√®res\r\n\r\n1. [Introduction](#introduction)\r\n\r\n2. [Installation](#installation)\r\n\r\n3. [Configuration](#configuration)\r\n\r\n4..."
  },
  {
    "path": "_templates\\helpers\\test\\test-integration.js",
    "type": "logger",
    "content_snippet": "// test-integration.js\r\nconst { spawn } = require('child_process');\r\nconst assert = require('assert');\r\nconst fs = require('fs').promises;\r\nconst path = require('path');\r\nconst { createLogger } = requ..."
  },
  {
    "path": "_templates\\helpers\\test\\test-template-integration.js",
    "type": "logger",
    "content_snippet": "// test-template-integration.js\r\nconst assert = require('assert');\r\nconst path = require('path');\r\nconst { createLogger } = require('../logger-helper.js');\r\nconst metricsHelper = require('../metrics-h..."
  },
  {
    "path": "_templates\\helpers\\test\\test-cross-platform.js",
    "type": "logger",
    "content_snippet": "// test-cross-platform.js\r\nconst assert = require('assert');\r\nconst path = require('path');\r\nconst os = require('os');\r\nconst { createLogger } = require('../logger-helper.js');\r\nconst pathHelper = req..."
  },
  {
    "path": "_templates\\helpers\\structure-helper.js",
    "type": "logger",
    "content_snippet": "// Structure helper pour templates EJS\r\nconst path = require('path');\r\nconst { createLogger } = require('./logger-helper');\r\nconst logger = createLogger({ verbosity: 'info' });\r\n\r\n/**\r\n * Helper pour ..."
  },
  {
    "path": "_templates\\helpers\\test\\test-templates.js",
    "type": "logger",
    "content_snippet": "// test-templates.js\r\nconst ejs = require('ejs');\r\nconst assert = require('assert');\r\nconst fs = require('fs').promises;\r\nconst path = require('path');\r\nconst { createLogger } = require('../logger-hel..."
  },
  {
    "path": "_templates\\maintenance\\cleanup\\prompt.js",
    "type": "logger",
    "content_snippet": "// prompt.js for cleanup template\r\nconst { createLogger } = require('../../helpers/logger-helper.js');\r\nconst logger = createLogger({ \r\n  verbosity: 'info',\r\n  useEmoji: true\r\n});\r\n\r\nmodule.exports = ..."
  },
  {
    "path": "_templates\\helpers\\test\\test-helpers.js",
    "type": "logger",
    "content_snippet": "// test-helpers.js\r\nconst assert = require('assert');\r\nconst { createLogger } = require('../logger-helper.js');\r\nconst metricsHelper = require('../metrics-helper.js');\r\nconst pathHelper = require('../..."
  },
  {
    "path": "_templates\\helpers\\test\\logger-test.js",
    "type": "logger",
    "content_snippet": "const { createLogger } = require('../logger-helper.js');\r\nconst os = require('os');\r\n\r\nfunction testLoggerConfiguration() {\r\n  console.log('Testing logger configuration on platform:', os.platform());\r..."
  },
  {
    "path": "_templates\\maintenance\\organize\\prompt.js",
    "type": "logger",
    "content_snippet": "// see types of prompts:\r\n// https://github.com/enquirer/enquirer/tree/master/examples\r\n//\r\nconst { createLogger } = require('../../helpers/logger-helper.js');\r\nconst logger = createLogger({ \r\n  verbo..."
  },
  {
    "path": "_templates\\mode\\command\\prompt.js",
    "type": "logger",
    "content_snippet": "// prompt.js for commands\r\nconst { createLogger } = require('../../helpers/logger-helper.js');\r\nconst logger = createLogger({ \r\n  verbosity: 'info',\r\n  useEmoji: true\r\n});\r\n\r\nmodule.exports = [\r\n  {\r\n..."
  },
  {
    "path": "_templates\\mode\\add-command\\prompt.js",
    "type": "logger",
    "content_snippet": "// prompt.js for mode command template\r\nconst { createLogger } = require('../../helpers/logger-helper.js');\r\n\r\nconst logger = createLogger({ \r\n  verbosity: 'info',\r\n  useEmoji: true\r\n});\r\n\r\nmodule.exp..."
  },
  {
    "path": "_templates\\mode\\new\\prompt.js",
    "type": "logger",
    "content_snippet": "// prompt.js for mode template\r\nconst { createLogger } = require('../../helpers/logger-helper.js');\r\n\r\nconst logger = createLogger({ \r\n  verbosity: 'info',\r\n  useEmoji: true\r\n});\r\n\r\nmodule.exports = [..."
  },
  {
    "path": "_templates\\plan-dev\\new\\prompt.js",
    "type": "logger",
    "content_snippet": "// filepath: d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\_templates\\plan-dev\\new\\prompt.js\r\n// prompt.js\r\nconst { createLogger } = require('../../helpers/logger-helper.js');\r\nconst logger = createLogge..."
  },
  {
    "path": "_templates\\plan-dev-v1\\new\\prompt.js",
    "type": "logger",
    "content_snippet": "import chalk from 'chalk';\r\nconst { createLogger } = require('../../helpers/logger-helper.js');\r\nconst logger = createLogger({ verbosity: 'info' });\r\n\r\n// prompt.js - Questions √† poser lors de la g√©..."
  },
  {
    "path": "_templates\\roadmap\\new\\prompt.js",
    "type": "logger",
    "content_snippet": "// prompt.js for roadmap template\r\nconst { createLogger } = require('../../helpers/logger-helper.js');\r\nconst chalk = require('chalk');\r\n\r\nconst logger = createLogger({ \r\n  verbosity: 'info',\r\n  useEm..."
  },
  {
    "path": "_templates\\prd\\new\\prompt.js",
    "type": "logger",
    "content_snippet": "// prompt.js for PRD template\r\nconst { createLogger } = require('../../helpers/logger-helper.js');\r\nconst logger = createLogger({ \r\n  verbosity: 'info',\r\n  useEmoji: true\r\n});\r\n\r\nmodule.exports = [\r\n ..."
  },
  {
    "path": "_templates\\script-integration\\new\\prompt.js",
    "type": "logger",
    "content_snippet": "// prompt.js\r\nconst { createLogger } = require('../../helpers/logger-helper.js');\r\nconst logger = createLogger({ \r\n  verbosity: 'info',\r\n  useEmoji: true\r\n});\r\nconst chalk = require('chalk');\r\n\r\nmodul..."
  },
  {
    "path": "analysis\\qdrant-migration-report.md",
    "type": "report",
    "content_snippet": "# Rapport de Dry Run Critique - Plan Dev v34\r\n\r\n## Tests d'Int√©gration QDrant HTTP\r\n\r\n**Date:** 27 mai 2025  \r\n**Version:** 1.0  \r\n**Statut:** ‚úÖ VALID√â - Migration approuv√©e\r\n\r\n---\r\n\r\n## üéØ R√©..."
  },
  {
    "path": "analysis\\dry-run-executive-summary.md",
    "type": "report",
    "content_snippet": "# R√âSUM√â EX√âCUTIF - DRY RUN CRITIQUE PLAN DEV V34\r\n\r\n## üéØ Mission Accomplie\r\n\r\n**Date d'ex√©cution :** 27 mai 2025 07:45  \r\n**Dur√©e totale :** 1 heure  \r\n**Statut final :** ‚úÖ **VALID√â - MIGR..."
  },
  {
    "path": "audit_gap_report.md",
    "type": "report",
    "content_snippet": "# Rapport d'√©cart et d√©tection des doublons\r\n\r\n## Doublon¬†: Invoke-RoadmapArchitecture.ps1\r\n- development\\roadmap\\parser\\functions\\Public\\Invoke-RoadmapArchitecture.ps1\r\n- development\\roadmap\\parse..."
  },
  {
    "path": "audit_gap_report.md",
    "type": "logger",
    "content_snippet": "# Rapport d'√©cart et d√©tection des doublons\r\n\r\n## Doublon¬†: Invoke-RoadmapArchitecture.ps1\r\n- development\\roadmap\\parser\\functions\\Public\\Invoke-RoadmapArchitecture.ps1\r\n- development\\roadmap\\parse..."
  },
  {
    "path": "backup\\20250628-203248\\scripts\\gen_read_file_report.go",
    "type": "report",
    "content_snippet": "package scripts\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"io/ioutil\"\r\n\t\"os\"\r\n\t\"os/exec\"\r\n\t\"path/filepath\"\r\n\t\"strings\"\r\n\t\"time\"\r\n)\r\n\r\nfunc main() {\r\n\treportDir := \"reports\"\r\n\treportFile := filepath.Join(reportDir, \"read_..."
  },
  {
    "path": "cmd\\archive-tool\\main.go",
    "type": "report",
    "content_snippet": "// cmd/archive-tool/main.go\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"os\"\r\n)\r\n\r\nfunc main() {\r\n\t// Automatiser l‚Äôarchivage complet des artefacts, logs, badges, historiques\r\n\tf, err := os.Create(\"archive_..."
  },
  {
    "path": "cmd\\audit-gap-analysis\\main_test.go",
    "type": "report",
    "content_snippet": "package main\n\nimport (\n\t\"os\"\n\t\"testing\"\n)\n\nfunc TestAuditGapReportGeneration(t *testing.T) {\n\t_ = os.Remove(\"audit_gap_report.md\")\n\tmain()\n\tif _, err := os.Stat(\"audit_gap_report.md\"); os.IsNotExist(e..."
  },
  {
    "path": "cmd\\audit-gap-analysis\\main.go",
    "type": "report",
    "content_snippet": "// cmd/audit-gap-analysis/main.go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\t\"path/filepath\"\n)\n\nfunc main() {\n\tfilesMap := make(map[string][]string)\n\tfilepath.Walk(\".\", func(path string, info os.FileInfo, e..."
  },
  {
    "path": "cmd\\audit-inventory\\main.go",
    "type": "report",
    "content_snippet": "// cmd/audit-inventory/main.go\npackage main\n\nimport (\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"time\"\n)\n\nfunc main() {\n\tvar files []string\n\terr := filepath.Walk(\".\", func(path string, info os.F..."
  },
  {
    "path": "cmd\\audit-inventory\\projet\\roadmaps\\plans\\consolidated\\inventory-report.md",
    "type": "report",
    "content_snippet": "# Rapport d‚Äôinventaire\r\n\r\n_G√©n√©r√© le 2025-07-07T20:49:57+02:00_\r\n\r\n- `logs\\inventory.log`\r\n- `main.go`\r\n- `main_test.go`\r\n- `projet\\roadmaps\\plans\\consolidated\\inventory-report.md`\r\n- `projet\\roa..."
  },
  {
    "path": "cmd\\audit-inventory\\projet\\roadmaps\\plans\\consolidated\\inventory.json",
    "type": "report",
    "content_snippet": "[\"logs\\\\inventory.log\",\"main.go\",\"main_test.go\",\"projet\\\\roadmaps\\\\plans\\\\consolidated\\\\inventory-report.md\",\"projet\\\\roadmaps\\\\plans\\\\consolidated\\\\inventory.json\",\"projet\\\\roadmaps\\\\plans\\\\consolida..."
  },
  {
    "path": "cmd\\audit_orchestration\\audit_orchestration.go",
    "type": "report",
    "content_snippet": "package audit_orchestration\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"os\"\r\n\t\"path/filepath\"\r\n\t\"strings\"\r\n)\r\n\r\n// ScriptInfo represents details about an automation script.\r\ntype ScriptInfo struct {\r\n\tPath         string\r..."
  },
  {
    "path": "cmd\\audit_rollback_points\\audit_rollback_points.go",
    "type": "report",
    "content_snippet": "package audit_rollback_points\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"os\"\r\n)\r\n\r\ntype CriticalFile struct {\r\n\tPath        string\r\n\tCategory    string // e.g., \"config\", \"code\", \"report\", \"data\", \"script\"\r\n\tDescription ..."
  },
  {
    "path": "cmd\\auto_roadmap_runner\\auto_roadmap_runner.go",
    "type": "report",
    "content_snippet": "package auto_roadmap_runner\r\n\r\nimport (\r\n\t\"bytes\"\r\n\t\"fmt\"\r\n\t\"os/exec\"\r\n\t\"time\"\r\n)\r\n\r\n// Script represents a script to be executed by the orchestrator.\r\ntype Script struct {\r\n\tName       string\r\n\tPath ..."
  },
  {
    "path": "cmd\\backup-modified-files\\main.go",
    "type": "report",
    "content_snippet": "package main\n\nimport (\n\t\"archive/zip\"\n\t\"fmt\"\n\t\"io\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"time\"\n)\n\n// Liste des fichiers cr√©√©s/modifi√©s pendant la t√¢che (√† adapter si n√©cessaire)\nvar filesToBackup = []string{..."
  },
  {
    "path": "cmd\\auto_roadmap_runner\\auto_roadmap_runner_test.go",
    "type": "report",
    "content_snippet": "package auto_roadmap_runner\r\n\r\nimport (\r\n\t\"bytes\"\r\n\t\"io/ioutil\"\r\n\t\"os\"\r\n\t\"os/exec\"\r\n\t\"path/filepath\"\r\n\t\"strings\"\r\n\t\"testing\"\r\n)\r\n\r\n// Helper function to create dummy scripts for testing\r\nfunc createDu..."
  },
  {
    "path": "cmd\\cli\\cli.go",
    "type": "logger",
    "content_snippet": "// Package main - RAG System CLI\r\n// Command-line interface generated using Method 5: Code Generation Framework\r\npackage cli\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"os\"\r\n\r\n\t\"github.com/spf13/cobra\"\r\n\t\"go.uber.org/zap\"..."
  },
  {
    "path": "cmd\\consolidate-qdrant-clients\\consolidate_qdrant_clients.go",
    "type": "report",
    "content_snippet": "package consolidate_qdrant_clients\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"go/ast\"\r\n\t\"go/format\"\r\n\t\"go/parser\"\r\n\t\"go/token\"\r\n\t\"io/fs\"\r\n\t\"log\"\r\n\t\"os\"\r\n\t\"path/filepath\"\r\n\t\"regexp\"\r\n\t\"strings\"\r\n\t\"time\"\r\n)\r\n\r\n// Consolida..."
  },
  {
    "path": "cmd\\dependency-analyzer\\main.go",
    "type": "report",
    "content_snippet": "// cmd/dependency-analyzer/main.go\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"os\"\r\n)\r\n\r\nfunc main() {\r\n\t// G√©n√©rer le sch√©ma des d√©pendances et le rapport de validation crois√©e\r\n\tf, err := os.Create(\"d..."
  },
  {
    "path": "cmd\\feedback-generator\\main.go",
    "type": "report",
    "content_snippet": "// cmd/feedback-generator/main.go\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"os\"\r\n)\r\n\r\nfunc main() {\r\n\t// TODO: G√©n√©rer le rapport de feedback automatis√©\r\n\tf, err := os.Create(\"feedback_report.md\")\r\n\tif ..."
  },
  {
    "path": "cmd\\gen-read-file-report\\main.go",
    "type": "report",
    "content_snippet": "package scripts\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"io/ioutil\"\r\n\t\"os\"\r\n\t\"os/exec\"\r\n\t\"path/filepath\"\r\n\t\"strings\"\r\n\t\"time\"\r\n)\r\n\r\nfunc main() {\r\n\treportDir := \"reports\"\r\n\treportFile := filepath.Join(reportDir, \"read_..."
  },
  {
    "path": "cmd\\gen_orchestrator_spec\\gen_orchestrator_spec.go",
    "type": "report",
    "content_snippet": "package gen_orchestrator_spec\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"time\"\n)\n\nfunc main() {\n\toutputFile := \"specs/orchestrator_spec.md\"\n\n\t// Ensure the specs directory exists\n\terr := os.MkdirAll(fi..."
  },
  {
    "path": "cmd\\generate-gateway-report\\main.go",
    "type": "report",
    "content_snippet": "package main\n\nimport (\n\t\"fmt\"\n\t\"html/template\"\n\t\"os\"\n\t\"os/exec\"\n\t\"path/filepath\"\n\t\"strings\"\n\t\"time\"\n)\n\n// ReportData structure pour les donn√©es du rapport\ntype ReportData struct {\n\tTimestamp        s..."
  },
  {
    "path": "cmd\\genreport\\genreport.go",
    "type": "report",
    "content_snippet": "package genreport\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"io/ioutil\"\r\n\t\"os\"\r\n\t\"os/exec\"\r\n\t\"path/filepath\"\r\n\t\"strings\"\r\n\t\"time\"\r\n)\r\n\r\nfunc main() {\r\n\treportDir := \"reports\"\r\n\treportFile := filepath.Join(reportDir, \"rea..."
  },
  {
    "path": "cmd\\go\\dependency-manager\\analyze_imports\\analyze_imports.go",
    "type": "report",
    "content_snippet": "// analyze_imports.go\r\n//\r\n// Analyse la liste des imports internes (JSON g√©n√©r√© par scan_imports.go),\r\n// g√©n√®re un plan de correction (JSON) et un patch (diff) pour centraliser les imports.\r\n\r\n..."
  },
  {
    "path": "cmd\\go\\dependency-manager\\apply_imports\\apply_imports.go",
    "type": "report",
    "content_snippet": "// apply_imports.go\r\n//\r\n// Applique les corrections d'import list√©es dans un patch diff (g√©n√©r√© par analyze_imports.go).\r\n// Modifie les fichiers Go concern√©s et g√©n√®re un rapport JSON du succ..."
  },
  {
    "path": "cmd\\go\\dependency-manager\\audit_modules\\audit_modules_test.go",
    "type": "report",
    "content_snippet": "package audit_modules_test\n\nimport (\n\t\"bytes\"\n\t\"encoding/json\"\n\t\"io/ioutil\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com/gerivdb/email-sender-1/cmd/go/dependency-manager/audit_modules\"\n)..."
  },
  {
    "path": "cmd\\go\\dependency-manager\\audit_modules\\main.go",
    "type": "report",
    "content_snippet": "package audit_modules\n\nimport (\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"strings\"\n\t\"time\"\n)\n\n// GoModInfo stores information about a go.mod file\ntype GoModInfo struct {\n\tPath     ..."
  },
  {
    "path": "cmd\\go\\dependency-manager\\delete_go_mods\\delete_go_mods_test.go",
    "type": "report",
    "content_snippet": "package delete_go_mods_test\n\nimport (\n\t\"encoding/json\"\n\t\"io/ioutil\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"testing\"\n\n\t\"github.com/gerivdb/email-sender-1/cmd/go/dependency-manager/delete_go_mods\"\n)\n\nfunc TestDeleteG..."
  },
  {
    "path": "cmd\\go\\dependency-manager\\auditor\\audit_modules.go",
    "type": "report",
    "content_snippet": "package auditor\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"io/ioutil\"\r\n\t\"os\"\r\n\t\"path/filepath\"\r\n\t\"strings\"\r\n\t\"time\"\r\n\r\n\t\"github.com/gerivdb/email-sender-1/cmd/go/dependency-manager/utils\"\r\n)\r\n\r\n// ModuleInfo repr√©sente ..."
  },
  {
    "path": "cmd\\go\\dependency-manager\\delete_go_mods\\main.go",
    "type": "report",
    "content_snippet": "// delete_go_mods.go\n//\n// Supprime les fichiers go.mod et go.sum list√©s dans un fichier JSON.\n// G√©n√®re un rapport JSON du succ√®s/√©chec de chaque suppression.\n\npackage delete_go_mods\n\nimport (\n\t..."
  },
  {
    "path": "cmd\\go\\dependency-manager\\generate_dep_report\\generate_dep_report_test.go",
    "type": "report",
    "content_snippet": "package generate_dep_report_test\n\nimport (\n\t\"encoding/json\"\n\t\"io/ioutil\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"testing\"\n\n\t\"github.com/gerivdb/email-sender-1/cmd/go/dependency-manager/generate_dep_report\"\n)\n\nfunc T..."
  },
  {
    "path": "cmd\\go\\dependency-manager\\generate_dep_report\\main.go",
    "type": "report",
    "content_snippet": "// generate_dep_report.go\n//\n// G√©n√®re un rapport d√©taill√© des d√©pendances Go du monorepo (versions, chemins, licences si possible).\n// Utilise \"go list -m -json all\" pour r√©cup√©rer les infos d..."
  },
  {
    "path": "cmd\\go\\dependency-manager\\generate_report\\generate_report.go",
    "type": "report",
    "content_snippet": "// generate_report.go\r\n//\r\n// G√©n√®re un rapport Markdown de synth√®se pour une phase donn√©e du dependency-manager.\r\n\r\npackage generate_report\r\n\r\nimport (\r\n\t\"flag\"\r\n\t\"fmt\"\r\n\t\"os\"\r\n\t\"time\"\r\n)\r\n\r\nvar ..."
  },
  {
    "path": "cmd\\go\\dependency-manager\\plan_go_mod_deletion\\main.go",
    "type": "report",
    "content_snippet": "// plan_go_mod_deletion.go\n//\n// G√©n√®re la liste des go.mod et go.sum secondaires √† supprimer (hors racine).\n// Prend en entr√©e les fichiers JSON listant tous les go.mod et go.sum (g√©n√©r√©s en p..."
  },
  {
    "path": "cmd\\go\\dependency-manager\\plan_go_mod_deletion\\plan_go_mod_deletion_test.go",
    "type": "report",
    "content_snippet": "package plan_go_mod_deletion_test\n\nimport (\n\t\"encoding/json\"\n\t\"io/ioutil\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"testing\"\n\n\t\"github.com/gerivdb/email-sender-1/cmd/go/dependency-manager/plan_go_mod_deletion\"\n)\n\nfunc..."
  },
  {
    "path": "cmd\\go\\dependency-manager\\propose_go_mod_fixes\\main.go",
    "type": "report",
    "content_snippet": "// propose_go_mod_fixes.go\n//\n// Prend en entr√©e la liste des go.mod parasites (JSON), g√©n√®re un script shell pour les supprimer,\n// un plan d'action JSON, et (optionnel) un patch pour ajuster les ..."
  },
  {
    "path": "cmd\\go\\dependency-manager\\propose_go_mod_fixes\\propose_go_mod_fixes_test.go",
    "type": "report",
    "content_snippet": "package propose_go_mod_fixes_test\n\nimport (\n\t\"encoding/json\"\n\t\"io/ioutil\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com/gerivdb/email-sender-1/cmd/go/dependency-manager/propose_go_mod_fix..."
  },
  {
    "path": "cmd\\go\\dependency-manager\\scan_imports\\main.go",
    "type": "report",
    "content_snippet": "// scan_imports.go\n//\n// Scanne tous les fichiers .go du monorepo pour recenser les imports internes (hors stdlib et externes).\n// G√©n√®re un rapport JSON et un rapport Markdown listant les fichiers ..."
  },
  {
    "path": "cmd\\go\\dependency-manager\\scan_imports\\scan_imports_test.go",
    "type": "report",
    "content_snippet": "package scan_imports_test\n\nimport (\n\t\"encoding/json\"\n\t\"io/ioutil\"\n\t\"os\"\n\t\"path/filepath\" // Re-add strings import\n\t\"testing\"\n\n\t\"github.com/gerivdb/email-sender-1/cmd/go/dependency-manager/scan_imports..."
  },
  {
    "path": "cmd\\go\\dependency-manager\\scan_non_compliant_imports\\main.go",
    "type": "report",
    "content_snippet": "package scan_non_compliant_imports\n\nimport (\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"go/parser\"\n\t\"go/token\"\n\t\"io/ioutil\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"strings\"\n\t\"time\"\n)\n\n// NonCompliantImport represents a non-compliant..."
  },
  {
    "path": "cmd\\go\\dependency-manager\\scan_non_compliant_imports\\scan_non_compliant_imports_test.go",
    "type": "report",
    "content_snippet": "package scan_non_compliant_imports_test\n\nimport (\n\t\"encoding/json\"\n\t\"io/ioutil\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"testing\"\n\n\t\"github.com/gerivdb/email-sender-1/cmd/go/dependency-manager/scan_non_compliant_impo..."
  },
  {
    "path": "cmd\\go\\dependency-manager\\utils\\utils.go",
    "type": "report",
    "content_snippet": "package utils\n\nimport (\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"strings\"\n)\n\n// ModuleInfo repr√©sente les informations extraites d'un fichier go.mod\ntype ModuleInfo struct {\n\tPat..."
  },
  {
    "path": "cmd\\go\\dependency-manager\\validate_monorepo_structure\\main.go",
    "type": "report",
    "content_snippet": "// validate_monorepo_structure.go\n//\n// V√©rifie qu'il ne reste qu'un seul go.mod √† la racine, ex√©cute go mod tidy et go build ./...,\n// et g√©n√®re un rapport JSON de validation.\n\npackage validate_..."
  },
  {
    "path": "cmd\\go\\roadmap-orchestrator\\roadmap_orchestrator_test.go",
    "type": "report",
    "content_snippet": "package main_test\n\nimport (\n\t\"bytes\"\n\t\"encoding/json\"\n\t\"io/ioutil\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"testing\"\n\n\troadmap_orchestrator \"github.com/gerivdb/email-sender-1/cmd/go/roadmap-orchestrator\" // Import th..."
  },
  {
    "path": "cmd\\go\\roadmap-orchestrator\\roadmap_orchestrator.go",
    "type": "report",
    "content_snippet": "package roadmap_orchestrator\r\n\r\nimport (\r\n\t\"bytes\"\r\n\t\"encoding/json\"\r\n\t\"flag\"\r\n\t\"fmt\"\r\n\t\"io/ioutil\"\r\n\t\"os\"\r\n\t\"os/exec\"\r\n\t\"path/filepath\"\r\n\t\"time\"\r\n)\r\n\r\n// PhaseResult stores the result of a single pha..."
  },
  {
    "path": "cmd\\integration_test_v49\\integration_test_v49.go",
    "type": "report",
    "content_snippet": "package integration_test_v49\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"time\"\n\n\t\"EMAIL_SENDER_1/tools/core/toolkit\"\n)\n\n// Test d'int√©gration v49 - Validation compl√®te du plan\nfunc main() {\n\tfmt.Print..."
  },
  {
    "path": "cmd\\manager-gap-analysis\\gap_analysis_test.go",
    "type": "report",
    "content_snippet": "// cmd/manager-gap-analysis/gap_analysis_test.go\r\npackage main\r\n\r\nimport (\r\n\t\"os\"\r\n\t\"testing\"\r\n)\r\n\r\nfunc TestGapReportCreated(t *testing.T) {\r\n\t_ = os.Remove(\"gap_report.md\") // Nettoyage avant test\r\n..."
  },
  {
    "path": "cmd\\manager-gap-analysis\\main.go",
    "type": "report",
    "content_snippet": "// cmd/manager-gap-analysis/main.go\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"os\"\r\n)\r\n\r\nfunc main() {\r\n\t// TODO: Charger recensement.json et comparer aux standards attendus\r\n\tf, err := os.Create(\"gap_repor..."
  },
  {
    "path": "cmd\\migrate-vectorization\\migrate_vectorization.go",
    "type": "logger",
    "content_snippet": "package migrate_vectorization\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"flag\"\r\n\t\"fmt\"\r\n\t\"os\"\r\n\r\n\t\"go.uber.org/zap\"\r\n)\r\n\r\nfunc main() {\r\n\tvar (\r\n\t\tfilePath       = flag.String(\"file\", \"\", \"Path to markdown file to pr..."
  },
  {
    "path": "cmd\\monitoring-dashboard\\monitoring_dashboard.go",
    "type": "logger",
    "content_snippet": "// Ultra-Advanced 8-Level Branching Framework - Monitoring Dashboard\r\npackage monitoring_dashboard\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"encoding/json\"\r\n\t\"fmt\"\r\n\t\"log\"\r\n\t\"net/http\"\r\n\t\"sync\"\r\n\t\"time\"\r\n\r\n\t\"github...."
  },
  {
    "path": "cmd\\orchestration-convergence\\main.go",
    "type": "report",
    "content_snippet": "// orchestration-convergence.go\r\n// Script Go minimal pour d√©tecter les conflits d‚Äôorchestration dans les plans harmonis√©s\r\n\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"io/ioutil\"\r\n\t\"strings\"\r\n)\r\n\r\nfunc ..."
  },
  {
    "path": "cmd\\phase_8_final_validation_root\\phase_8_final_validation_root.go",
    "type": "report",
    "content_snippet": "package phase_8_final_validation_root\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"encoding/json\"\r\n\t\"fmt\"\r\n\t\"log\"\r\n\t\"net/http\"\r\n\t\"os\"\r\n\t\"path/filepath\"\r\n\t\"time\"\r\n)\r\n\r\n// Phase8ValidationResult repr√©sente le r√©sultat ..."
  },
  {
    "path": "cmd\\plan-reporter\\main.go",
    "type": "report",
    "content_snippet": "// cmd/plan-reporter/main.go\r\n// Script Go minimal pour g√©n√©rer un rapport de reporting sur l‚Äô√©tat des plans\r\n\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"io/ioutil\"\r\n\t\"strings\"\r\n)\r\n\r\nfunc main() {\r\n\tfi..."
  },
  {
    "path": "cmd\\redis-env-test\\redis_env_test.go",
    "type": "logger",
    "content_snippet": "// Package main demonstrates Redis configuration loading from environment variables\r\npackage main\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"log\"\r\n\t\"os\"\r\n\t\"time\"\r\n\r\n\tredis_streaming \"github.com/gerivdb/email-sender-1..."
  },
  {
    "path": "cmd\\redis-fallback-test\\redis_fallback_test.go",
    "type": "logger",
    "content_snippet": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD:cmd/redis-fallback-test/redis_fallback_test.go\n// Package main provides a test for Redis fallback cache functionality\npackage redis_fallback_test\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"log\"\n\t\"os\"\n..."
  },
  {
    "path": "cmd\\redis-test\\redis_test.go",
    "type": "logger",
    "content_snippet": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD:cmd/redis-test/redis_test.go\n// Package main provides a command-line tool for testing Redis connections\npackage redis_test\n\nimport (\n\t\"context\"\n\tredisconfig \"email_sender/pkg/cache/redis\"..."
  },
  {
    "path": "cmd\\roadmap-runner\\roadmap_runner.go",
    "type": "report",
    "content_snippet": "package roadmap_runner\r\n\r\nimport (\r\n\t\"encoding/json\"\r\n\t\"fmt\"\r\n\t\"os\"\r\n\t\"os/exec\"\r\n\t\"path/filepath\"\r\n\t\"strings\"\r\n)\r\n\r\n// runCommand ex√©cute une commande shell et imprime la sortie.\r\nfunc runCommand(nam..."
  },
  {
    "path": "cmd\\reporting\\main.go",
    "type": "report",
    "content_snippet": "// cmd/reporting/main.go\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"os\"\r\n)\r\n\r\nfunc main() {\r\n\t// TODO: G√©n√©rer le rapport de conformit√© et changelog\r\n\tf, err := os.Create(\"conformity_report.md\")\r\n\tif err..."
  },
  {
    "path": "cmd\\server\\server.go",
    "type": "logger",
    "content_snippet": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD:cmd/server/server.go\n// Package main - RAG System Server\n// Complete implementation using all 7 time-saving methods\npackage server\n\nimport (\n\t\"context\"\n\t\"flag\"\n\t\"fmt\"\n\t\"log\"\n\t\"net/http\"\n\t..."
  },
  {
    "path": "cmd\\standards-duplication-check\\main.go",
    "type": "report",
    "content_snippet": "// cmd/standards-duplication-check/main.go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"os\"\n\t\"path/filepath\"\n)\n\nfunc main() {\n\tstandards := make(map[string]bool)\n\tfiles, err := ioutil.ReadDir(\".github..."
  },
  {
    "path": "cmd\\standards-duplication-check\\main_test.go",
    "type": "report",
    "content_snippet": "package main\n\nimport (\n\t\"os\"\n\t\"testing\"\n)\n\nfunc TestDuplicationReportGeneration(t *testing.T) {\n\t_ = os.Remove(\"duplication_report.md\")\n\tmain()\n\tif _, err := os.Stat(\"duplication_report.md\"); os.IsNot..."
  },
  {
    "path": "cmd\\validate-mcp-gateway-removal\\main.go",
    "type": "report",
    "content_snippet": "package main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\t\"os/exec\"\n\t\"strings\"\n)\n\nfunc runCommandAndCheck(command string, args ...string) error {\n\tcmd := exec.Command(command, args...)\n\tcmd.Stdout = os.Stdout\n\tcmd.Stderr ..."
  },
  {
    "path": "cmd\\validate_components\\validate_components.go",
    "type": "report",
    "content_snippet": "package validate_components\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"log\"\r\n\t\"time\"\r\n\r\n\t\"github.com/gerivdb/email-sender-1/tools\"\r\n)\r\n\r\nfunc main() {\r\n\tfmt.Println(\"üöÄ Validation des composants Phase 6.1.2...\")\r\n\r\n\t//..."
  },
  {
    "path": "cmd\\validate_resilience\\validate_resilience.go",
    "type": "report",
    "content_snippet": "// Simple validation de l'impl√©mentation de r√©silience aux d√©placements\npackage validate_resilience\n\nimport (\n\t\"fmt\"\n\t\"log\"\n\t\"os\"\n\t\"path/filepath\"\n)\n\nfunc main() {\n\tfmt.Println(\"üîç Test d'impl√©m..."
  },
  {
    "path": "cmd\\vector-benchmark\\vector_benchmark.go",
    "type": "logger",
    "content_snippet": "package vector_benchmark\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"flag\"\r\n\t\"fmt\"\r\n\t\"time\"\r\n\r\n\t\"go.uber.org/zap\"\r\n)\r\n\r\nfunc main() {\r\n\tvar (\r\n\t\tqdrantHost     = flag.String(\"host\", \"localhost\", \"Qdrant host\")\r\n\t\tqdra..."
  },
  {
    "path": "cmd\\verify_fix\\verify_fix.go",
    "type": "logger",
    "content_snippet": "package verify_fix\n\nimport (\n\t\"fmt\"\n\t\"log\"\n\n\t\"EMAIL_SENDER_1/tools/core/toolkit\"\n\t\"EMAIL_SENDER_1/tools/pkg/manager\"\n)\n\nfunc main() {\n\tfmt.Println(\"üéØ Testing Manager Toolkit Compilation Success\")\n\t..."
  },
  {
    "path": "cmd\\vscode-diagnostic\\vscode_diagnostic.go",
    "type": "report",
    "content_snippet": "package vscode_diagnostic\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"encoding/json\"\r\n\t\"fmt\"\r\n\t\"log\"\r\n\t\"os\"\r\n\t\"time\"\r\n\r\n\t\"vscode-diagnostic-cli/config\"\r\n)\r\n\r\n// DiagnosticCLI structure principale du CLI\r\ntype Diagnost..."
  },
  {
    "path": "core\\conflict\\logging.go",
    "type": "logger",
    "content_snippet": "package conflict\n\nimport (\n\t\"go.uber.org/zap\"\n)\n\nvar logger, _ = zap.NewProduction()\n\n// LogStructured logs a structured message.\nfunc LogStructured(msg string, fields ...zap.Field) {\n\tlogger.Info(msg..."
  },
  {
    "path": "core\\docmanager\\validation\\report.go",
    "type": "report",
    "content_snippet": "// core/docmanager/validation/report.go\n// Structure de rapport de validation DocManager v66\n\npackage validation\n\ntype Document struct {\n\t// Ajoutez les champs pertinents pour un document ici\n\t// Par ..."
  },
  {
    "path": "core\\gapanalyzer\\gapanalyzer_test.go",
    "type": "report",
    "content_snippet": "package gapanalyzer\n\nimport (\n\t\"encoding/json\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"strings\"\n\t\"testing\"\n\t\"time\" // Add time import for GapAnalysis\n\t// Import the main package of gapanalyzer to access its types an..."
  },
  {
    "path": "core\\docmanager\\validation\\validator_test.go",
    "type": "report",
    "content_snippet": "// core/docmanager/validation/validator_test.go\r\n// Tests unitaires pour le moteur de validation\r\n\r\npackage validation\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"testing\"\r\n)\r\n\r\nfunc TestValidateDocument(t *testing.T)..."
  },
  {
    "path": "core\\reporting\\lib.go",
    "type": "report",
    "content_snippet": "package reporting\n\nimport (\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"os\"\n\t\"strings\"\n\t\"time\"\n)\n\n// Issue repr√©sente un ticket ou une demande\ntype Issue struct {\n\tID          string    `json:\"id\"`\n\tTitle..."
  },
  {
    "path": "core\\gapanalyzer\\gapanalyzer.go",
    "type": "report",
    "content_snippet": "package gapanalyzer\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"strings\"\r\n\t\"time\"\r\n\r\n\tsm \"github.com/gerivdb/email-sender-1/core/scanmodules\" // Import scanmodules\r\n)\r\n\r\n// RepositoryStructure repr√©sente la structure com..."
  },
  {
    "path": "cross_doc_inventory.md",
    "type": "report",
    "content_snippet": "# Inventaire des liens internes/externes dans les fichiers Markdown\r\n\r\n## 2025-0701-future-roadmap.md\r\n\r\n## amelioration-roadmap.md\r\n\r\n## cache_manager_api.md\r\n\r\n## cache_manager_policy.md\r\n\r\n## chain..."
  },
  {
    "path": "development\\docs\\dependency-management\\module-availability-verification.md",
    "type": "report",
    "content_snippet": "# √âvaluation des M√©canismes de V√©rification de Disponibilit√© des Modules\r\n\r\nCe document √©value les diff√©rents m√©canismes utilis√©s dans le projet pour v√©rifier la disponibilit√© des modules Po..."
  },
  {
    "path": "development\\docs\\guides\\methodologies\\roadmap_manager.md",
    "type": "report",
    "content_snippet": "# Guide du Gestionnaire de Roadmap\r\n\r\n## Introduction\r\n\r\nLe gestionnaire de roadmap est un composant essentiel du syst√®me qui g√®re le suivi, l'analyse et la mise √† jour des roadmaps du projet. Ce d..."
  },
  {
    "path": "development\\docs\\guides\\best-practices\\roadmap-management.md",
    "type": "report",
    "content_snippet": "# Bonnes pratiques pour la gestion des roadmaps\r\n\r\nCe document pr√©sente les bonnes pratiques pour la gestion des roadmaps dans le projet, en utilisant les modes de gestion de roadmap (ROADMAP-SYNC, R..."
  },
  {
    "path": "development\\managers\\AUDIT_PHASE_1_1_1_INVENTAIRE_MANAGERS.md",
    "type": "logger",
    "content_snippet": "# Inventaire Complet des Managers - Phase 1.1.1\r\n\r\n## üìä R√©sum√© Ex√©cutif\r\n- **Total des managers d√©tect√©s**: 26\r\n- **Date d'audit**: 2025-06-13\r\n- **Branche**: consolidation-v57\r\n- **Version √©..."
  },
  {
    "path": "development\\managers\\MANAGER_ECOSYSTEM_SETUP_COMPLETE.md",
    "type": "logger",
    "content_snippet": "# ANALYSE DE L'√âCOSYST√àME DE MANAGERS\r\n\r\n## Introduction\r\n\r\nCe document pr√©sente une analyse technique d√©taill√©e de l'√©cosyst√®me des managers du projet EMAIL_SENDER_1. D√©velopp√© selon le plan..."
  },
  {
    "path": "development\\managers\\advanced-autonomy-manager\\advanced_autonomy_manager.go",
    "type": "logger",
    "content_snippet": "// Package advanced_autonomy_manager implements the 21st manager in the FMOUA Framework\r\n// providing complete autonomy for maintenance and organization across all 20 previous managers\r\npackage advanc..."
  },
  {
    "path": "development\\managers\\advanced-autonomy-manager\\cmd\\main.go",
    "type": "logger",
    "content_snippet": "package main\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"flag\"\r\n\t\"fmt\"\r\n\t\"log\"\r\n\t\"os\"\r\n\t\"os/signal\"\r\n\t\"syscall\"\r\n\t\"time\"\r\n\r\n\tautonomy \"advanced-autonomy-manager\"\r\n\t\"advanced-autonomy-manager/internal/config\"\r\n)\r\n\r\nfun..."
  },
  {
    "path": "development\\managers\\AUDIT_PHASE_1_1_1_REDONDANCES_ANALYSIS.md",
    "type": "logger",
    "content_snippet": "# Matrice de Responsabilit√©s et Analyse des Redondances - Phase 1.1.1\r\n\r\n## üîç Analyse des Redondances Critiques\r\n\r\n### ‚ö†Ô∏è REDONDANCE MAJEURE IDENTIFI√âE\r\n\r\n#### integrated-manager vs Future ce..."
  },
  {
    "path": "development\\managers\\advanced-autonomy-manager\\internal\\coordination\\cross_manager_event_bus.go",
    "type": "logger",
    "content_snippet": "// Package coordination - Cross-Manager Event Bus implementation\n// G√®re la communication asynchrone entre tous les managers de l'√©cosyst√®me\npackage coordination\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"sync\"..."
  },
  {
    "path": "development\\managers\\advanced-autonomy-manager\\internal\\decision\\autonomous_decision_engine.go",
    "type": "logger",
    "content_snippet": "// Package decision implements the Autonomous Decision Engine component\n// of the AdvancedAutonomyManager - the neural decision-making system\npackage decision\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"math\"\n\t\"syn..."
  },
  {
    "path": "development\\managers\\advanced-autonomy-manager\\internal\\coordination\\emergency_response_system.go",
    "type": "logger",
    "content_snippet": "// Package coordination - Emergency Response System implementation\n// G√®re les situations de crise et de r√©cup√©ration pour l'√©cosyst√®me complet\npackage coordination\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"..."
  },
  {
    "path": "development\\managers\\advanced-autonomy-manager\\internal\\decision\\context_analyzer.go",
    "type": "logger",
    "content_snippet": "// Package decision implements the Autonomous Decision Engine component\npackage decision\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"time\"\n\n\t\"github.com/gerivdb/email-sender-1/development/managers/advanced-autonomy..."
  },
  {
    "path": "development\\managers\\advanced-autonomy-manager\\internal\\coordination\\global_state_manager.go",
    "type": "logger",
    "content_snippet": "// Package coordination - Global State Manager implementation\n// Unifie la gestion d'√©tat de tous les managers de l'√©cosyst√®me\npackage coordination\n\nimport (\n\t\"context\"\n\t\"crypto/sha256\"\n\t\"encoding/..."
  },
  {
    "path": "development\\managers\\advanced-autonomy-manager\\internal\\discovery\\manager_discovery.go",
    "type": "logger",
    "content_snippet": "// Package discovery implements manager discovery and connection mechanisms\r\n// for the AdvancedAutonomyManager to connect to all 20 ecosystem managers\r\npackage discovery\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"fm..."
  },
  {
    "path": "development\\managers\\advanced-autonomy-manager\\internal\\discovery\\infrastructure_discovery.go",
    "type": "logger",
    "content_snippet": "// Package discovery provides service discovery capabilities for the AdvancedAutonomyManager\npackage discovery\n\nimport (\n\t\"context\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"net/http\"\n\t\"os\"\n\t\"path/filepa..."
  },
  {
    "path": "development\\managers\\advanced-autonomy-manager\\internal\\coordination\\master_coordination_layer.go",
    "type": "logger",
    "content_snippet": "// Package coordination implements the Master Coordination Layer for the AdvancedAutonomyManager\n// providing complete orchestration and coordination of all 20 ecosystem managers\npackage coordination\n..."
  },
  {
    "path": "development\\managers\\advanced-autonomy-manager\\internal\\coordination\\master_orchestrator.go",
    "type": "logger",
    "content_snippet": "// Package coordination - Master Orchestrator implementation\r\n// G√®re le cycle de vie et l'orchestration des 20 managers de l'√©cosyst√®me\r\npackage coordination\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"fmt\"\r\n\t\"syn..."
  },
  {
    "path": "development\\managers\\advanced-autonomy-manager\\internal\\healing\\healing_engine.go",
    "type": "logger",
    "content_snippet": "// Package healing implements the Neural Auto-Healing System component\npackage healing\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\n\t\"github.com/gerivdb/email-sender-1/development/managers/advanced-autonomy-manager/i..."
  },
  {
    "path": "development\\managers\\advanced-autonomy-manager\\internal\\healing\\pattern_learning_system.go",
    "type": "logger",
    "content_snippet": "// Package healing implements the Neural Auto-Healing System component\npackage healing\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\n\tinterfaces \"github.com/gerivdb/email-sender-1/development/managers/advanced-autonom..."
  },
  {
    "path": "development\\managers\\advanced-autonomy-manager\\internal\\healing\\neural_auto_healing_system.go",
    "type": "logger",
    "content_snippet": "// Package healing implements the Neural Auto-Healing System component\n// of the AdvancedAutonomyManager - intelligent anomaly detection and self-repair\npackage healing\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"m..."
  },
  {
    "path": "development\\managers\\advanced-autonomy-manager\\internal\\infrastructure\\infrastructure_orchestrator.go",
    "type": "logger",
    "content_snippet": "// Package infrastructure provides tools for automated infrastructure management\n// within the AdvancedAutonomyManager ecosystem - Phase 4 Implementation.\npackage infrastructure\n\nimport (\n\t\"advanced-a..."
  },
  {
    "path": "development\\managers\\advanced-autonomy-manager\\internal\\healing\\anomaly_detector.go",
    "type": "logger",
    "content_snippet": "// Package healing implements the Neural Auto-Healing System component\npackage healing\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\n\tinterfaces \"github.com/gerivdb/email-sender-1/development/managers/advanced-autonom..."
  },
  {
    "path": "development\\managers\\advanced-autonomy-manager\\internal\\healing\\diagnostic_engine.go",
    "type": "logger",
    "content_snippet": "// Package healing implements the Neural Auto-Healing System component\npackage healing\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\n\t\"github.com/gerivdb/email-sender-1/development/managers/advanced-autonomy-manager/i..."
  },
  {
    "path": "development\\managers\\advanced-autonomy-manager\\internal\\healing\\healing_knowledge_base.go",
    "type": "logger",
    "content_snippet": "// Package healing implements the Neural Auto-Healing System component\npackage healing\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\n\t\"github.com/gerivdb/email-sender-1/development/managers/advanced-autonomy-manager/i..."
  },
  {
    "path": "development\\managers\\advanced-autonomy-manager\\internal\\monitoring\\data_aggregator.go",
    "type": "logger",
    "content_snippet": "// Package monitoring implements the Real-Time Monitoring Dashboard component\npackage monitoring\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"time\"\n\n\t\"github.com/gerivdb/email-sender-1/development/managers/advanced-..."
  },
  {
    "path": "development\\managers\\advanced-autonomy-manager\\internal\\monitoring\\alerting_system.go",
    "type": "logger",
    "content_snippet": "// Package monitoring implements the Real-Time Monitoring Dashboard component\npackage monitoring\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\n\t\"github.com/gerivdb/email-sender-1/development/managers/advanced-autonomy..."
  },
  {
    "path": "development\\managers\\advanced-autonomy-manager\\internal\\monitoring\\metrics_collector.go",
    "type": "logger",
    "content_snippet": "package monitoring\n\n// Package monitoring implements the Real-Time Monitoring Dashboard component\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"time\"\n\n\t\"github.com/gerivdb/email-sender-1/development/managers/advanced..."
  },
  {
    "path": "development\\managers\\advanced-autonomy-manager\\internal\\infrastructure\\startup_sequencer.go",
    "type": "logger",
    "content_snippet": "// Package infrastructure provides tools for automated infrastructure management\r\n// within the AdvancedAutonomyManager ecosystem.\r\npackage infrastructure\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"fmt\"\r\n\t\"sync\"\r\n\t\"t..."
  },
  {
    "path": "development\\managers\\advanced-autonomy-manager\\internal\\monitoring\\web_dashboard.go",
    "type": "logger",
    "content_snippet": "// Package monitoring implements the Real-Time Monitoring Dashboard component\npackage monitoring\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"net/http\"\n\n\t\"github.com/gerivdb/email-sender-1/development/managers/advan..."
  },
  {
    "path": "development\\managers\\advanced-autonomy-manager\\internal\\discovery\\manager_proxies.go",
    "type": "logger",
    "content_snippet": "// Package discovery implements proxy patterns for connecting to different types of managers\r\npackage discovery\r\n\r\nimport (\r\n\t\"bytes\"\r\n\t\"context\"\r\n\t\"encoding/json\"\r\n\t\"fmt\"\r\n\t\"net/http\"\r\n\t\"time\"\r\n\r\n\t\"a..."
  },
  {
    "path": "development\\managers\\advanced-autonomy-manager\\internal\\monitoring\\websocket_server.go",
    "type": "logger",
    "content_snippet": "// Package monitoring implements the Real-Time Monitoring Dashboard component\npackage monitoring\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\n\t\"github.com/gerivdb/email-sender-1/development/managers/advanced-autonomy..."
  },
  {
    "path": "development\\managers\\advanced-autonomy-manager\\internal\\monitoring\\real_time_monitoring_dashboard.go",
    "type": "logger",
    "content_snippet": "// Package monitoring implements the Real-Time Monitoring Dashboard component\r\n// of the AdvancedAutonomyManager - live surveillance and metrics dashboard\r\npackage monitoring\r\n\r\nimport (\r\n\t\"context\"\r\n..."
  },
  {
    "path": "development\\managers\\advanced-autonomy-manager\\internal\\monitoring\\real_time_monitoring_dashboard.go",
    "type": "metric",
    "content_snippet": "// Package monitoring implements the Real-Time Monitoring Dashboard component\r\n// of the AdvancedAutonomyManager - live surveillance and metrics dashboard\r\npackage monitoring\r\n\r\nimport (\r\n\t\"context\"\r\n..."
  },
  {
    "path": "development\\managers\\advanced-autonomy-manager\\main_simple.go",
    "type": "logger",
    "content_snippet": "// Main simplified version of the Advanced Autonomy Manager\n// This version focuses on the core architecture and discovery system\npackage advanced_autonomy_manager\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"log\"\n\t..."
  },
  {
    "path": "development\\managers\\advanced-autonomy-manager\\internal\\predictive\\predictive_maintenance_core.go",
    "type": "logger",
    "content_snippet": "// Package predictive implements the Predictive Maintenance Core component\n// of the AdvancedAutonomyManager - ML-powered predictive maintenance system\npackage predictive\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t..."
  },
  {
    "path": "development\\managers\\advanced-autonomy-manager\\validation\\simple_freeze_fix.go",
    "type": "logger",
    "content_snippet": "package advanced_autonomy_manager\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"sync\"\n\t\"time\"\n)\n\n// SimpleLogger basic logger implementation for testing\ntype SimpleLogger struct{}\n\nfunc (s *SimpleLogger) Info(msg str..."
  },
  {
    "path": "development\\managers\\advanced-autonomy-manager\\internal\\healing\\recovery_orchestrator.go",
    "type": "logger",
    "content_snippet": "// Package healing implements the Neural Auto-Healing System component\npackage healing\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\n\t\"github.com/gerivdb/email-sender-1/development/managers/advanced-autonomy-manager/i..."
  },
  {
    "path": "development\\managers\\api-gateway\\gateway.go",
    "type": "logger",
    "content_snippet": "package api_gateway\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"net/http\"\r\n\t\"os\"\r\n\t\"os/signal\"\r\n\t\"strconv\"\r\n\t\"syscall\"\r\n\t\"time\"\r\n\r\n\t\"github.com/gin-gonic/gin\"\r\n\tswaggerFiles \"github.com/swaggo/files\"\r\n\tginSwagger \"git..."
  },
  {
    "path": "development\\managers\\api-gateway\\handlers.go",
    "type": "logger",
    "content_snippet": "package api_gateway\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"net/http\"\r\n\t\"strconv\"\r\n\r\n\t\"github.com/gin-gonic/gin\"\r\n\t\"go.uber.org/zap\"\r\n)\r\n\r\n// HealthCheck v√©rifie que l'API Gateway fonctionne\r\n// @Summary Health c..."
  },
  {
    "path": "development\\managers\\audit-tools\\README.md",
    "type": "report",
    "content_snippet": "# Audit automatique du manager\r\n\r\nCe dossier contient les scripts d‚Äôaudit et d‚Äôinventaire pour ce manager.\r\n\r\n## Ex√©cution locale\r\n\r\n```bash\r\ncd audit-tools\r\nbash run_all_audits.sh\r\n```\r\n\r\nLes ra..."
  },
  {
    "path": "development\\managers\\advanced-autonomy-manager\\tests\\freeze_fix\\freeze_fix_core_test.go",
    "type": "logger",
    "content_snippet": "package advanced_autonomy_manager\n\nimport (\n\t\"context\"\n\t\"testing\"\n\t\"time\"\n)\n\n// TestFreezeFixCore tests the core freeze fix functionality\nfunc TestFreezeFixCore(t *testing.T) {\n\tlogger := \u0026SimpleLogge..."
  },
  {
    "path": "development\\managers\\branching-manager\\development\\branching_manager.go",
    "type": "logger",
    "content_snippet": "package development\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"encoding/json\"\r\n\t\"fmt\"\r\n\t\"log\"\r\n\t\"os\"\r\n\t\"strings\"\r\n\t\"sync\"\r\n\t\"time\"\r\n\r\n\t\"github.com/google/uuid\"\r\n\t\"gopkg.in/yaml.v3\"\r\n\r\n\t\"github.com/gerivdb/email-sende..."
  },
  {
    "path": "development\\managers\\branching-manager\\development\\event_processors.go",
    "type": "logger",
    "content_snippet": "package development\n\nimport (\n\t\"context\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"strings\"\n\t\"time\"\n\n\t\"github.com/gerivdb/email-sender-1/development/managers/branching-manager/interfaces\"\n)\n\n// CommitEventProcessor h..."
  },
  {
    "path": "development\\managers\\branching-manager\\scripts\\ADVANCED_BRANCHING_STRATEGY_ULTRA.md",
    "type": "report",
    "content_snippet": "# üöÄ STRAT√âGIE DE BRANCHING ULTRA-AVANC√âE\r\n\r\n## üéØ **NIVEAU 1 : MICRO-SESSIONS TEMPORELLES**\r\n\r\n### Architecture Propos√©e\r\n```\r\nmain\r\n‚îú‚îÄ‚îÄ dev\r\n‚îú‚îÄ‚îÄ manager/powershell-optimization\r\n\ufffd..."
  },
  {
    "path": "development\\managers\\cache-manager\\logging_cache_pipeline_spec.md",
    "type": "report",
    "content_snippet": "# Sp√©cification Technique ‚Äî Pipeline de Logging \u0026 CacheManager (v74)\r\n\r\n## Objectif\r\n\r\nD√©finir l‚Äôarchitecture, les interfaces, les flux de donn√©es et les responsabilit√©s du pipeline de logging..."
  },
  {
    "path": "development\\managers\\central-coordinator\\coordinator.go",
    "type": "logger",
    "content_snippet": "package coordinator\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"sync\"\n\t\"time\"\n\n\t\"go.uber.org/zap\"\n)\n\n// CentralCoordinator unifie les responsabilit√©s communes entre managers\ntype CentralCoordinator struct {\n\tmanag..."
  },
  {
    "path": "development\\managers\\central-coordinator\\discovery.go",
    "type": "logger",
    "content_snippet": "package coordinator\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"sync\"\n\t\"time\"\n\n\t\"go.uber.org/zap\"\n)\n\n// ManagerDiscovery impl√©mente la d√©couverte automatique de managers\ntype ManagerDiscovery struct {\n\tregistry m..."
  },
  {
    "path": "development\\managers\\central-coordinator\\event_bus.go",
    "type": "logger",
    "content_snippet": "package coordinator\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"sync\"\n\t\"time\"\n\n\t\"go.uber.org/zap\"\n)\n\n// EventBus impl√©mente un syst√®me de communication asynchrone entre managers\ntype EventBus struct {\n\tmu        ..."
  },
  {
    "path": "development\\managers\\central-coordinator\\persistent_event_bus.go",
    "type": "logger",
    "content_snippet": "package coordinator\n\nimport (\n\t\"context\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"sync\"\n\t\"time\"\n\n\t\"go.uber.org/zap\"\n)\n\n// EventStore g√®re la persistance des √©v√©nements critiques\ntype EventS..."
  },
  {
    "path": "development\\managers\\config-manager\\config_manager.go",
    "type": "logger",
    "content_snippet": "package configmanager\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"errors\"\r\n\t\"fmt\"\r\n\t\"strconv\"\r\n\t\"strings\"\r\n\t\"time\"\r\n\r\n\t\"github.com/google/uuid\"\r\n\t\"github.com/mitchellh/mapstructure\"\r\n\t\"go.uber.org/zap\"\r\n)\r\n\r\n// Config..."
  },
  {
    "path": "development\\managers\\circuit-breaker\\circuit_breaker.go",
    "type": "logger",
    "content_snippet": "// Package circuitbreaker provides a unified circuit breaker implementation\n// for Section 1.4 - Implementation des Recommandations\npackage circuitbreaker\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"sync\"\n\t\"time\"\n\n..."
  },
  {
    "path": "development\\managers\\container-manager\\development\\container_manager.go",
    "type": "logger",
    "content_snippet": "package development\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"fmt\"\r\n\t\"log\"\r\n\t\"os/exec\"\r\n\t\"strings\"\r\n\t\"time\"\r\n\r\n\t\"go.uber.org/zap\"\r\n)\r\n\r\n// ContainerManager interface defines the contract for container management\r\nty..."
  },
  {
    "path": "development\\managers\\contextual-memory-manager\\cmd\\dashboard-demo\\main.go",
    "type": "logger",
    "content_snippet": "// cmd/dashboard-demo/main.go\npackage main\n\nimport (\n\t\"context\"\n\t\"flag\"\n\t\"fmt\"\n\t\"log\"\n\t\"math/rand\"\n\t\"os\"\n\t\"os/signal\"\n\t\"syscall\"\n\t\"time\"\n\n\t\"go.uber.org/zap\"\n\n\t\"github.com/gerivdb/email-sender-1/develo..."
  },
  {
    "path": "development\\managers\\contextual-memory-manager\\internal\\monitoring\\realtime_dashboard.go",
    "type": "logger",
    "content_snippet": "// internal/monitoring/realtime_dashboard.go\r\npackage monitoring\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"encoding/json\"\r\n\t\"fmt\"\r\n\t\"net/http\"\r\n\t\"sync\"\r\n\t\"time\"\r\n\r\n\t\"github.com/gerivdb/email-sender-1/development/man..."
  },
  {
    "path": "development\\managers\\contextual-memory-manager\\internal\\monitoring\\hybrid_metrics.go",
    "type": "logger",
    "content_snippet": "// internal/monitoring/hybrid_metrics.go\r\npackage monitoring\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"sync\"\r\n\t\"time\"\r\n\r\n\t\"go.uber.org/zap\"\r\n)\r\n\r\ntype HybridMetricsCollector struct {\r\n\tstats          *HybridStatisti..."
  },
  {
    "path": "development\\managers\\contextual-memory-manager\\pkg\\manager\\qdrant_retrieval_manager.go",
    "type": "report",
    "content_snippet": "// Package manager implements Qdrant-based retrieval management\r\npackage manager\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"fmt\"\r\n\t\"log\"\r\n\t\"strings\"\r\n\r\n\tcmmInterfaces \"github.com/gerivdb/email-sender-1/development/ma..."
  },
  {
    "path": "development\\managers\\dependencymanager\\modules\\deployment_integration.go",
    "type": "logger",
    "content_snippet": "package deployment\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"time\"\n)\n\n// initializeDeploymentIntegration sets up deployment manager integration\nfunc (m *GoModManager) initializeDeploymentIntegration() error {\n\t//..."
  },
  {
    "path": "development\\managers\\dependencymanager\\modules\\dependency_manager.go",
    "type": "logger",
    "content_snippet": "package dependencymanager\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"encoding/json\"\r\n\t\"flag\"\r\n\t\"fmt\"\r\n\t\"os\"\r\n\t\"os/exec\"\r\n\t\"path/filepath\"\r\n\t\"strings\"\r\n\t\"time\"\r\n\r\n\t\"github.com/google/uuid\"\r\n\t\"go.uber.org/zap\"\r\n\t\"githu..."
  },
  {
    "path": "development\\managers\\dependencymanager\\modules\\import_manager.go",
    "type": "logger",
    "content_snippet": "package importmanager\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"fmt\"\r\n\t\"go/ast\"\r\n\t\"go/parser\"\r\n\t\"go/token\"\r\n\t\"os\"\r\n\t\"path/filepath\"\r\n\t\"regexp\"\r\n\t\"sort\"\r\n\t\"strconv\"\r\n\t\"strings\"\r\n\t\"time\"\r\n\r\n\t\"EMAIL_SENDER_1/developmen..."
  },
  {
    "path": "development\\managers\\dependencymanager\\modules\\import_manager.go",
    "type": "report",
    "content_snippet": "package importmanager\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"fmt\"\r\n\t\"go/ast\"\r\n\t\"go/parser\"\r\n\t\"go/token\"\r\n\t\"os\"\r\n\t\"path/filepath\"\r\n\t\"regexp\"\r\n\t\"sort\"\r\n\t\"strconv\"\r\n\t\"strings\"\r\n\t\"time\"\r\n\r\n\t\"EMAIL_SENDER_1/developmen..."
  },
  {
    "path": "development\\managers\\dependencymanager\\modules\\monitoring_integration.go",
    "type": "logger",
    "content_snippet": "package monitoring\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\n\t\"EMAIL_SENDER_1/development/managers/interfaces\"\n)\n\n// initializeMonitoringIntegration sets up monitoring manager integration\nfunc (m *GoModManager) in..."
  },
  {
    "path": "development\\managers\\dependencymanager\\modules\\monitoring_integration.go",
    "type": "report",
    "content_snippet": "package monitoring\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\n\t\"EMAIL_SENDER_1/development/managers/interfaces\"\n)\n\n// initializeMonitoringIntegration sets up monitoring manager integration\nfunc (m *GoModManager) in..."
  },
  {
    "path": "development\\managers\\dependencymanager\\docs\\ci_cd.md",
    "type": "report",
    "content_snippet": "# Documentation CI/CD pour le Manager de D√©pendances\r\n\r\nCe document d√©crit les proc√©dures et les pipelines d'Int√©gration Continue / D√©ploiement Continu (CI/CD) pour le manager de d√©pendances.\r\n\r..."
  },
  {
    "path": "development\\managers\\dependencymanager\\modules\\storage_integration.go",
    "type": "logger",
    "content_snippet": "package storage\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"time\"\n\n\t\"EMAIL_SENDER_1/development/managers/interfaces\"\n)\n\n// initializeStorageIntegration sets up storage manager integration\nfunc (m *GoModManager) ini..."
  },
  {
    "path": "development\\managers\\dependencymanager\\modules\\security_integration.go",
    "type": "logger",
    "content_snippet": "package security\n\nimport (\n\t\"context\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"strings\"\n\t\"time\"\n\n\t\"EMAIL_SENDER_1/development/managers/interfaces\"\n)\n\n// initializeSecurityIntegration sets up security manager integra..."
  },
  {
    "path": "development\\managers\\dependencymanager\\modules\\security_integration.go",
    "type": "report",
    "content_snippet": "package security\n\nimport (\n\t\"context\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"strings\"\n\t\"time\"\n\n\t\"EMAIL_SENDER_1/development/managers/interfaces\"\n)\n\n// initializeSecurityIntegration sets up security manager integra..."
  },
  {
    "path": "development\\managers\\dependencymanager\\final_report.json",
    "type": "report",
    "content_snippet": "{\r\n  \"plan_version\": \"v73.0\",\r\n  \"report_date\": \"2025-06-29\",\r\n  \"status\": \"IN_PROGRESS\",\r\n  \"phases_completed\": [\r\n    {\r\n      \"phase_number\": 1,\r\n      \"name\": \"Recensement \u0026 Cartographie Initiale\"..."
  },
  {
    "path": "development\\managers\\dependencymanager\\modules\\manager_integration.go",
    "type": "logger",
    "content_snippet": "package managerintegration\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"fmt\"\r\n\t\"time\"\r\n\r\n\t\"EMAIL_SENDER_1/development/managers/interfaces\"\r\n\r\n\t\"go.uber.org/zap\"\r\n)\r\n\r\n// ManagerIntegrator handles integration with all m..."
  },
  {
    "path": "development\\managers\\dependencymanager\\modules\\manager_integration.go",
    "type": "report",
    "content_snippet": "package managerintegration\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"fmt\"\r\n\t\"time\"\r\n\r\n\t\"EMAIL_SENDER_1/development/managers/interfaces\"\r\n\r\n\t\"go.uber.org/zap\"\r\n)\r\n\r\n// ManagerIntegrator handles integration with all m..."
  },
  {
    "path": "development\\managers\\dependencymanager\\reports\\phase1_completion_report.md",
    "type": "report",
    "content_snippet": "# Rapport de compl√©tion - Phase 1\r\n\r\n- Date de g√©n√©ration : 2025-06-30 14:11:14\r\n- Statut : **TERMIN√â**\r\n\r\n## R√©sum√©\r\n\r\nLa phase \"Phase 1\" du dependency-manager a √©t√© r√©alis√©e avec succ√®s. ..."
  },
  {
    "path": "development\\managers\\dependencymanager\\reports\\phase2_completion_report.md",
    "type": "report",
    "content_snippet": "# Rapport de compl√©tion - Phase 2\r\n\r\n- Date de g√©n√©ration : 2025-06-30 14:16:30\r\n- Statut : **TERMIN√â**\r\n\r\n## R√©sum√©\r\n\r\nLa phase \"Phase 2\" du dependency-manager a √©t√© r√©alis√©e avec succ√®s. ..."
  },
  {
    "path": "development\\managers\\dependencymanager\\reports\\phase3_completion_report.md",
    "type": "report",
    "content_snippet": "# Rapport de compl√©tion - Phase 3\r\n\r\n- Date de g√©n√©ration : 2025-06-30 14:25:09\r\n- Statut : **TERMIN√â**\r\n\r\n## R√©sum√©\r\n\r\nLa phase \"Phase 3\" du dependency-manager a √©t√© r√©alis√©e avec succ√®s. ..."
  },
  {
    "path": "development\\managers\\dependencymanager\\reports\\phase4_completion_report.md",
    "type": "report",
    "content_snippet": "# Rapport de compl√©tion - Phase 4\r\n\r\n- Date de g√©n√©ration : 2025-06-30 14:31:56\r\n- Statut : **TERMIN√â**\r\n\r\n## R√©sum√©\r\n\r\nLa phase \"Phase 4\" du dependency-manager a √©t√© r√©alis√©e avec succ√®s. ..."
  },
  {
    "path": "development\\managers\\dependencymanager\\reports\\phase6_completion_report.md",
    "type": "report",
    "content_snippet": "# Rapport de compl√©tion - Phase 6\r\n\r\n- Date de g√©n√©ration : 2025-06-30 14:41:19\r\n- Statut : **TERMIN√â**\r\n\r\n## R√©sum√©\r\n\r\nLa phase \"Phase 6\" du dependency-manager a √©t√© r√©alis√©e avec succ√®s. ..."
  },
  {
    "path": "development\\managers\\dependencymanager\\reports\\phase7_completion_report.md",
    "type": "report",
    "content_snippet": "# Rapport de compl√©tion - Phase 7\r\n\r\n- Date de g√©n√©ration : 2025-06-30 14:43:24\r\n- Statut : **TERMIN√â**\r\n\r\n## R√©sum√©\r\n\r\nLa phase \"Phase 7\" du dependency-manager a √©t√© r√©alis√©e avec succ√®s. ..."
  },
  {
    "path": "development\\managers\\dependencymanager\\reports\\phase8_completion_report.md",
    "type": "report",
    "content_snippet": "# Rapport de compl√©tion - Phase 8\r\n\r\n- Date de g√©n√©ration : 2025-06-30 14:47:49\r\n- Statut : **TERMIN√â**\r\n\r\n## R√©sum√©\r\n\r\nLa phase \"Phase 8\" du dependency-manager a √©t√© r√©alis√©e avec succ√®s. ..."
  },
  {
    "path": "development\\managers\\dependencymanager\\modules\\real_manager_integration.go",
    "type": "logger",
    "content_snippet": "package realmanager\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"fmt\" // Using standard log for STUB messages\r\n\t\"time\"\r\n\r\n\t\"EMAIL_SENDER_1/development/managers/interfaces\"\r\n\r\n\t\"go.uber.org/zap\"\r\n)\r\n\r\n// RealManagerConn..."
  },
  {
    "path": "development\\managers\\dependencymanager\\reports\\phase5_completion_report.md",
    "type": "report",
    "content_snippet": "# Rapport de compl√©tion - Phase 5\r\n\r\n- Date de g√©n√©ration : 2025-06-30 14:38:12\r\n- Statut : **TERMIN√â**\r\n\r\n## R√©sum√©\r\n\r\nLa phase \"Phase 5\" du dependency-manager a √©t√© r√©alis√©e avec succ√®s. ..."
  },
  {
    "path": "development\\managers\\dependencymanager\\final_report.md",
    "type": "report",
    "content_snippet": "# Rapport Final d‚ÄôImpl√©mentation du Plan v73 ‚Äî dependency-manager\r\n\r\n## Synth√®se G√©n√©rale\r\n\r\nCe rapport synth√©tise l'impl√©mentation du \"Plan de D√©veloppement v73 ‚Äî Refactoring \u0026 Remise √†..."
  },
  {
    "path": "development\\managers\\dependencymanager\\tests\\full_integration_test.go",
    "type": "report",
    "content_snippet": "package tests\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"testing\"\n\t\"time\"\n\n\t\"go.uber.org/zap\"\n\t\"go.uber.org/zap/zaptest\"\n\n\t\"EMAIL_SENDER_1/development/managers/dependencymanager\"\n\t\"EMAIL_SENDER_1/development/manag..."
  },
  {
    "path": "development\\managers\\email-manager\\template_manager.go",
    "type": "logger",
    "content_snippet": "package email\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"html/template\"\n\t\"strings\"\n\t\"sync\"\n\t\"time\"\n\n\t\"github.com/gerivdb/email-sender-1/managers/interfaces\"\n\t\"github.com/google/uuid\"\n\t\"go.uber.org/zap\"\n)\n\n// Templ..."
  },
  {
    "path": "development\\managers\\dependencymanager\\tests\\integration_manager_test.go",
    "type": "report",
    "content_snippet": "package tests\n\nimport (\n\t\"context\"\n\t\"testing\"\n\t\"time\"\n\n\t\"github.com/stretchr/testify/assert\"\n\t\"github.com/stretchr/testify/mock\"\n\t\"go.uber.org/zap\"\n\n\t\"EMAIL_SENDER_1/development/managers/dependencyman..."
  },
  {
    "path": "development\\managers\\dependencymanager\\tests\\mocks_common_test.go",
    "type": "report",
    "content_snippet": "package tests\n\nimport (\n\t\"context\"\n\t\"encoding/json\"\n\t\"time\"\n\n\t\"go.uber.org/zap\"\n\n\t\"EMAIL_SENDER_1/development/managers/interfaces\"\n)\n\n// MockSecurityManagerFull implements interfaces.SecurityManagerIn..."
  },
  {
    "path": "development\\managers\\deployment-manager\\development\\deployment_manager.go",
    "type": "logger",
    "content_snippet": "package development\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"encoding/json\"\r\n\t\"fmt\"\r\n\t\"io/ioutil\"\r\n\t\"log\"\r\n\t\"os\"\r\n\t\"os/exec\"\r\n\t\"path/filepath\"\r\n\t\"strings\"\r\n\t\"time\"\r\n\r\n\t\"go.uber.org/zap\"\r\n)\r\n\r\n// DeploymentManager i..."
  },
  {
    "path": "development\\managers\\email-manager\\queue_manager.go",
    "type": "logger",
    "content_snippet": "package email\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"sync\"\n\t\"time\"\n\n\t\"github.com/gerivdb/email-sender-1/managers/interfaces\"\n\t\"github.com/google/uuid\"\n\t\"github.com/robfig/cron/v3\"\n\t\"go.uber.org/zap\"\n)\n\n// Queu..."
  },
  {
    "path": "development\\managers\\email-manager\\email_manager.go",
    "type": "logger",
    "content_snippet": "package email\n\nimport (\n\t\"context\"\n\t\"crypto/tls\"\n\t\"fmt\"\n\t\"io\"\n\t\"sync\"\n\t\"time\"\n\n\t\"github.com/gerivdb/email-sender-1/managers/interfaces\"\n\t\"github.com/google/uuid\"\n\t\"github.com/robfig/cron/v3\"\n\t\"go.uber..."
  },
  {
    "path": "development\\managers\\error-manager\\auto_fix\\README.md",
    "type": "report",
    "content_snippet": "# Auto-Fix System Documentation\r\n\r\n## Overview\r\n\r\nThe Auto-Fix System is a comprehensive solution for automatically detecting, analyzing, and fixing common coding issues in Go projects. It provides in..."
  },
  {
    "path": "development\\managers\\error-manager\\adapters\\adapters_test.go",
    "type": "report",
    "content_snippet": "package adapters\r\n\r\nimport (\r\n\t\"encoding/json\"\r\n\t\"os\"\r\n\t\"path/filepath\"\r\n\t\"testing\"\r\n\t\"time\"\r\n)\r\n\r\nfunc TestNewScriptInventoryAdapter(t *testing.T) {\r\n\tconfig := ScriptInventoryConfig{\r\n\t\tScriptInvent..."
  },
  {
    "path": "development\\managers\\error-manager\\adapters\\duplication_handler.go",
    "type": "report",
    "content_snippet": "package adapters\n\nimport (\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"os\"\n\t\"os/exec\"\n\t\"path/filepath\"\n\t\"time\"\n\n\t\"github.com/pkg/errors\"\n)\n\n// DuplicationErrorHandler g√®re les erreurs li√©es √† la d√©tection de duplic..."
  },
  {
    "path": "development\\managers\\error-manager\\bridges\\realtime_bridge.go",
    "type": "logger",
    "content_snippet": "// Package bridges implementes the real-time monitoring bridge for Section 8.2\n// \"Optimisation Surveillance Temps R√©el\" of plan-dev-v42-error-manager.md\npackage bridges\n\nimport (\n\t\"context\"\n\t\"encodi..."
  },
  {
    "path": "development\\managers\\error-manager\\catalog.go",
    "type": "logger",
    "content_snippet": "package errormanager\r\n\r\nimport (\r\n\t\"fmt\"\r\n\r\n\t\"go.uber.org/zap\"\r\n)\r\n\r\n// CatalogError prepares and logs an error entry\r\nfunc CatalogError(entry ErrorEntry) {\r\n\tlogger, _ := zap.NewProduction()\r\n\tdefer ..."
  },
  {
    "path": "development\\managers\\error-manager\\docs\\api\\README.md",
    "type": "logger",
    "content_snippet": "# Error Manager API Documentation\r\n\r\n## Overview\r\n\r\nThe Error Manager package provides a comprehensive solution for error handling, analysis, and reporting in the EMAIL_SENDER_1 project. This document..."
  },
  {
    "path": "development\\managers\\error-manager\\docs\\api\\README.md",
    "type": "report",
    "content_snippet": "# Error Manager API Documentation\r\n\r\n## Overview\r\n\r\nThe Error Manager package provides a comprehensive solution for error handling, analysis, and reporting in the EMAIL_SENDER_1 project. This document..."
  },
  {
    "path": "development\\managers\\error-manager\\docs\\guides\\README.md",
    "type": "report",
    "content_snippet": "# Error Manager User Guide\r\n\r\n## Table of Contents\r\n\r\n1. [Getting Started](#getting-started)\r\n\r\n2. [Basic Usage](#basic-usage)\r\n\r\n3. [Advanced Features](#advanced-features)\r\n\r\n4. [Pattern Analysis](#p..."
  },
  {
    "path": "development\\managers\\error-manager\\report_generator.go",
    "type": "report",
    "content_snippet": "package errormanager\n\nimport (\n\t\"database/sql\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"html/template\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"time\"\n\n\t_ \"github.com/lib/pq\"\n)\n\n// GeneratePatternReport g√©n√®re un rapport complet d..."
  },
  {
    "path": "development\\managers\\error-manager\\logger.go",
    "type": "logger",
    "content_snippet": "package errormanager\n\nimport (\n\t\"go.uber.org/zap\"\n)\n\nvar logger *zap.Logger\n\n// InitializeLogger initializes the Zap logger in production mode\nfunc InitializeLogger() error {\n\tvar err error\n\tlogger, e..."
  },
  {
    "path": "development\\managers\\error-manager\\static\\external_tools.go",
    "type": "report",
    "content_snippet": "// Int√©gration Outils Externes - Phase 9.1.3\n// Plan de d√©veloppement v42 - Gestionnaire d'erreurs avanc√©\npackage static\n\nimport (\n\t\"bufio\"\n\t\"context\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"os\"\n\t\"os/exec\"\n\t\"pat..."
  },
  {
    "path": "development\\managers\\integrated-manager\\conformity_api.go",
    "type": "report",
    "content_snippet": "// filepath: d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\development\\managers\\integrated-manager\\conformity_api.go\r\npackage integratedmanager\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"fmt\"\r\n\t\"log\"\r\n\t\"net/http\"\r\n\t\"tim..."
  },
  {
    "path": "development\\managers\\integrated-manager\\conformity_manager_test.go",
    "type": "report",
    "content_snippet": "package integratedmanager\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"testing\"\r\n\t\"time\"\r\n\r\n\t\"github.com/stretchr/testify/assert\"\r\n\t\"github.com/stretchr/testify/mock\"\r\n\t\"go.uber.org/zap/zaptest\"\r\n)\r\n\r\n// MockErrorManag..."
  },
  {
    "path": "development\\managers\\integrated-manager\\conformity_manager.go",
    "type": "logger",
    "content_snippet": "package integratedmanager\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"sync\"\n\t\"time\"\n\n\t\"go.uber.org/zap\"\n)\n\n/*\n= INTERFACES PRINCIPALES =\n*/\n\n// V√©rification de conformit√©\ntype IConformityChecker interface {\n\tChec..."
  },
  {
    "path": "development\\managers\\integrated-manager\\conformity_manager.go",
    "type": "report",
    "content_snippet": "package integratedmanager\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"sync\"\n\t\"time\"\n\n\t\"go.uber.org/zap\"\n)\n\n/*\n= INTERFACES PRINCIPALES =\n*/\n\n// V√©rification de conformit√©\ntype IConformityChecker interface {\n\tChec..."
  },
  {
    "path": "development\\managers\\integration-manager\\sync_management.go",
    "type": "logger",
    "content_snippet": "package integration_manager\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"time\"\n\n\t\"github.com/google/uuid\"\n\t\"github.com/sirupsen/logrus\"\n\n\t\"github.com/gerivdb/email-sender-1/development/managers/interfaces\"\n)\n\n// ===..."
  },
  {
    "path": "development\\managers\\integration-manager\\webhook_management.go",
    "type": "logger",
    "content_snippet": "package integration_manager\n\nimport (\n\t\"EMAIL_SENDER_1/development/managers/interfaces\"\n\t\"crypto/hmac\"\n\t\"crypto/sha256\"\n\t\"encoding/hex\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"io\"\n\t\"net/http\"\n\t\"sort\"\n\t\"strings\"\n\t\"t..."
  },
  {
    "path": "development\\managers\\maintenance-manager\\FMOUA_GRANULARISATION_5_NIVEAUX.md",
    "type": "logger",
    "content_snippet": "# üî¨ GRANULARISATION ULTRA-D√âTAILL√âE FMOUA - 10 NIVEAUX\r\n\r\n## üìã M√©thodologie de Granularisation Avanc√©e\r\n\r\n**Bas√© sur:**\r\n- ‚úÖ `projet/roadmaps/plans/consolidated/plan-dev-v53b-maintenance-..."
  },
  {
    "path": "development\\managers\\maintenance-manager\\maintenance_manager.go",
    "type": "logger",
    "content_snippet": "package maintenance_manager\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"fmt\"\r\n\t\"log\"\r\n\t\"os\"\r\n\r\n\t\"github.com/spf13/cobra\"\r\n\t\"github.com/spf13/viper\"\r\n\t\"go.uber.org/zap\"\r\n\r\n\t\"EMAIL_SENDER_1/maintenance-manager/src/ai\"\r\n..."
  },
  {
    "path": "development\\managers\\integration-manager\\integration_manager.go",
    "type": "logger",
    "content_snippet": "package integration_manager\r\n\r\nimport (\r\n\t\"EMAIL_SENDER_1/development/managers/interfaces\"\r\n\t\"context\"\r\n\t\"crypto/rand\"\r\n\t\"encoding/hex\"\r\n\t\"fmt\"\r\n\t\"net/http\"\r\n\t\"strings\"\r\n\t\"sync\"\r\n\t\"time\"\r\n\r\n\t\"github.c..."
  },
  {
    "path": "development\\managers\\maintenance-manager\\src\\ai\\ai_analyzer.go",
    "type": "logger",
    "content_snippet": "package ai\r\n\r\nimport (\r\n\t\"bytes\"\r\n\t\"context\"\r\n\t\"encoding/json\"\r\n\t\"fmt\"\r\n\t\"io\"\r\n\t\"net/http\"\r\n\t\"os\"\r\n\t\"path/filepath\"\r\n\t\"strings\"\r\n\t\"time\"\r\n\r\n\t\"EMAIL_SENDER_1/maintenance-manager/src/core\"\r\n\t\"EMAIL_SEND..."
  },
  {
    "path": "development\\managers\\maintenance-manager\\src\\cleanup\\cleanup_manager.go",
    "type": "report",
    "content_snippet": "package cleanup\n\nimport (\n\t\"context\"\n\t\"crypto/md5\"\n\t\"fmt\"\n\t\"io\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"sort\"\n\t\"strings\"\n\t\"time\"\n\n\t\"EMAIL_SENDER_1/maintenance-manager/src/ai\"\n\t\"EMAIL_SENDER_1/maintenance-manager/src..."
  },
  {
    "path": "development\\managers\\maintenance-manager\\src\\core\\maintenance_manager.go",
    "type": "logger",
    "content_snippet": "// Package core provides the main implementation of the Ultra-Advanced Maintenance and Organization Framework\r\npackage core\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"fmt\"\r\n\t\"path/filepath\"\r\n\t\"sync\"\r\n\t\"time\"\r\n\r\n\t\"git..."
  },
  {
    "path": "development\\managers\\maintenance-manager\\src\\core\\organization_engine.go",
    "type": "logger",
    "content_snippet": "// Framework de Maintenance et Organisation Ultra-Avanc√© (FMOUA) Version 1.0\r\n// Complete implementation of OrganizationEngine with all critical methods\r\n// Last updated: Compilation errors resolved ..."
  },
  {
    "path": "development\\managers\\maintenance-manager\\src\\core\\scheduler.go",
    "type": "logger",
    "content_snippet": "package core\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"fmt\"\r\n\t\"math\"\r\n\t\"math/rand\"\r\n\t\"strings\"\r\n\t\"sync\"\r\n\t\"time\"\r\n\r\n\t\"github.com/sirupsen/logrus\"\r\n)\r\n\r\n// MaintenanceScheduler handles automated scheduling and execut..."
  },
  {
    "path": "development\\managers\\maintenance-manager\\src\\core\\scheduler.go",
    "type": "report",
    "content_snippet": "package core\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"fmt\"\r\n\t\"math\"\r\n\t\"math/rand\"\r\n\t\"strings\"\r\n\t\"sync\"\r\n\t\"time\"\r\n\r\n\t\"github.com/sirupsen/logrus\"\r\n)\r\n\r\n// MaintenanceScheduler handles automated scheduling and execut..."
  },
  {
    "path": "development\\managers\\maintenance-manager\\src\\generator\\gogen_engine.go",
    "type": "logger",
    "content_snippet": "// Package generator provides advanced code generation capabilities for the maintenance manager\r\npackage generator\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"fmt\"\r\n\t\"os\"\r\n\t\"path/filepath\"\r\n\t\"strings\"\r\n\t\"text/template..."
  },
  {
    "path": "development\\managers\\maintenance-manager\\src\\generator\\templates.go",
    "type": "logger",
    "content_snippet": "// Package generator - Template definitions for the GoGenEngine\npackage generator\n\n// goServiceTemplate is the template for generating Go services\nconst goServiceTemplate = `// Package {{.Package}} - ..."
  },
  {
    "path": "development\\managers\\maintenance-manager\\src\\integration\\event_bus.go",
    "type": "logger",
    "content_snippet": "package integration\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"sync\"\n\t\"time\"\n\n\t\"github.com/gerivdb/email-sender-1/development/managers/interfaces\"\n\t\"github.com/sirupsen/logrus\"\n)\n\n// EventBus handles inter-manager..."
  },
  {
    "path": "development\\managers\\maintenance-manager\\src\\integration\\health_checker.go",
    "type": "logger",
    "content_snippet": "package integration\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"sync\"\n\t\"time\"\n\n\t\"github.com/gerivdb/email-sender-1/development/managers/interfaces\"\n\t\"github.com/sirupsen/logrus\"\n)\n\n// DefaultHealthChecker provides ..."
  },
  {
    "path": "development\\managers\\maintenance-manager\\src\\integration\\integration_hub.go",
    "type": "logger",
    "content_snippet": "package integration\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"sync\"\n\t\"time\"\n\n\t\"github.com/gerivdb/email-sender-1/development/managers/interfaces\"\n\t\"github.com/sirupsen/logrus\"\n)\n\n// IntegrationHub coordinates wit..."
  },
  {
    "path": "development\\managers\\maintenance-manager\\src\\integration\\manager_coordinator.go",
    "type": "logger",
    "content_snippet": "package integration\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"sync\"\n\t\"time\"\n\n\t\"github.com/gerivdb/email-sender-1/development/managers/interfaces\"\n\t\"github.com/sirupsen/logrus\"\n)\n\n// DefaultManagerCoordinator prov..."
  },
  {
    "path": "development\\managers\\integration-manager\\api_management.go",
    "type": "logger",
    "content_snippet": "package integration_manager\n\nimport (\n\t\"bytes\"\n\t\"context\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"io\"\n\t\"net/http\"\n\t\"time\"\n\n\t\"github.com/google/uuid\"\n\t\"github.com/sirupsen/logrus\"\n\n\t\"github.com/gerivdb/email-sender-..."
  },
  {
    "path": "development\\managers\\integration-manager\\data_transformation.go",
    "type": "logger",
    "content_snippet": "package integration_manager\r\n\r\nimport (\r\n\t\"encoding/json\"\r\n\t\"fmt\"\r\n\t\"reflect\"\r\n\t\"regexp\"\r\n\t\"sort\"\r\n\t\"strconv\"\r\n\t\"strings\"\r\n\t\"time\"\r\n\r\n\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD\r\n\t\"EMAIL_SENDER_1/development/managers/interfaces\"\r\n=..."
  },
  {
    "path": "development\\managers\\maintenance-manager\\src\\templates\\gogen_engine.go",
    "type": "logger",
    "content_snippet": "package templates\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"strings\"\n\t\"text/template\"\n\t\"time\"\n\n\t\"github.com/gerivdb/email-sender-1/development/managers/interfaces\"\n\t\"github.com/sirupsen/log..."
  },
  {
    "path": "development\\managers\\maintenance-manager\\src\\vector\\qdrant_manager.go",
    "type": "logger",
    "content_snippet": "package vector\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"net/http\"\n\t\"time\"\n\n\t\"github.com/gerivdb/email-sender-1/development/managers/maintenance-manager/src/core\"\n\t\"github.com/gerivdb/email-sender-1/development/m..."
  },
  {
    "path": "development\\managers\\maintenance-manager\\tests\\integration_test.go",
    "type": "report",
    "content_snippet": "// Package tests provides integration tests for the MaintenanceManager with complete FMOUA implementation\npackage tests\n\nimport (\n\t\"EMAIL_SENDER_1/maintenance-manager/src/core\"\n\t\"context\"\n\t\"fmt\"\n\t\"os\"..."
  },
  {
    "path": "development\\managers\\integration-manager\\integration_manager_test.go",
    "type": "logger",
    "content_snippet": "package integration_manager\n\nimport (\n\t\"EMAIL_SENDER_1/development/managers/interfaces\"\n\t\"context\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"net/http\"\n\t\"net/http/httptest\"\n\t\"strings\"\n\t\"testing\"\n\t\"time\"\n\n\t\"github.com/..."
  },
  {
    "path": "development\\managers\\monitoring-manager\\development\\monitoring_manager.go",
    "type": "logger",
    "content_snippet": "package development\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"fmt\"\r\n\t\"log\"\r\n\t\"runtime\"\r\n\t\"sync\"\r\n\t\"time\"\r\n\r\n\t\"go.uber.org/zap\"\r\n)\r\n\r\n// MonitoringManager interface defines the contract for monitoring management\r\ntyp..."
  },
  {
    "path": "development\\managers\\n8n-manager\\n8n_manager.go",
    "type": "logger",
    "content_snippet": "package n8nmanager\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"encoding/json\"\r\n\t\"fmt\"\r\n\t\"io\"\r\n\t\"net/http\"\r\n\t\"strings\"\r\n\t\"sync\"\r\n\t\"time\"\r\n\r\n\terrormanager \"EMAIL_SENDER_1/managers/error-manager\"\r\n\r\n\t\"github.com/google/u..."
  },
  {
    "path": "development\\managers\\phase_3_integration_check.go",
    "type": "logger",
    "content_snippet": "package managers\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"fmt\"\r\n\t\"log\"\r\n\r\n\t\"go.uber.org/zap\"\r\n)\r\n\r\n// TestPhase3Integration teste l'int√©gration compl√®te de la Phase 3\r\nfunc main() {\r\n\tfmt.Println(\"üß™ Tests d'In..."
  },
  {
    "path": "development\\managers\\phase_4_performance_test.go",
    "type": "logger",
    "content_snippet": "package managers\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"fmt\"\r\n\t\"log\"\r\n\t\"sync\"\r\n\t\"time\"\r\n\r\n\t\"go.uber.org/zap\"\r\n)\r\n\r\n// Phase4PerformanceTest teste les performances de la Phase 4\r\nfunc main() {\r\n\tfmt.Println(\"üöÄ ..."
  },
  {
    "path": "development\\managers\\phase_5_api_test.go",
    "type": "logger",
    "content_snippet": "package managers\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"fmt\"\r\n\t\"io\"\r\n\t\"net/http\"\r\n\t\"strings\"\r\n\t\"time\"\r\n\r\n\t\"go.uber.org/zap\"\r\n)\r\n\r\n// Phase5APITest teste l'API Gateway de la Phase 5\r\nfunc main() {\r\n\tfmt.Println(\"\ufffd..."
  },
  {
    "path": "development\\managers\\notification-manager\\channel_manager.go",
    "type": "logger",
    "content_snippet": "package notification\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"sync\"\n\t\"time\"\n\n\t\"github.com/gerivdb/email-sender-1/managers/notification-manager/interfaces\"\n\t\"github.com/google/uuid\"\n\t\"go.uber.org/zap\"\n)\n\n// Chann..."
  },
  {
    "path": "development\\managers\\notification-manager\\alert_manager.go",
    "type": "logger",
    "content_snippet": "package notification\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"sync\"\n\t\"time\"\n\n\t\"github.com/gerivdb/email-sender-1/managers/notification-manager/interfaces\"\n\t\"github.com/google/uuid\"\n\t\"go.uber.org/zap\"\n)\n\n// Alert..."
  },
  {
    "path": "development\\managers\\integration_tests\\complete_ecosystem_integration.go",
    "type": "logger",
    "content_snippet": "package integration_tests\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"fmt\"\r\n\t\"log\"\r\n\t\"sync\"\r\n\t\"time\"\r\n\r\n\t\"go.uber.org/zap\"\r\n)\r\n\r\n// Phase6IntegrationTests ex√©cute tous les tests d'int√©gration end-to-end\r\nfunc main()..."
  },
  {
    "path": "development\\managers\\phase_8_final_validation.go",
    "type": "report",
    "content_snippet": "package main\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"encoding/json\"\r\n\t\"fmt\"\r\n\t\"log\"\r\n\t\"net/http\"\r\n\t\"os\"\r\n\t\"time\"\r\n)\r\n\r\n// Phase8ValidationResult repr√©sente le r√©sultat d'un test de validation Phase 8\r\ntype Phase..."
  },
  {
    "path": "development\\managers\\phase_4_performance_validation.go",
    "type": "logger",
    "content_snippet": "package managers\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"fmt\"\r\n\t\"log\"\r\n\t\"sync\"\r\n\t\"time\"\r\n\r\n\t\"go.uber.org/zap\"\r\n)\r\n\r\n// Phase4PerformanceValidation valide les performances de la Phase 4\r\nfunc main() {\r\n\tfmt.Println..."
  },
  {
    "path": "development\\managers\\notification-manager\\notification_manager.go",
    "type": "logger",
    "content_snippet": "package notification\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"sync\"\n\t\"time\"\n\n\t\"github.com/gerivdb/email-sender-1/managers/notification-manager/interfaces\"\n\t\"github.com/google/uuid\"\n\t\"github.com/robfig/cron/v3\"\n\t..."
  },
  {
    "path": "development\\managers\\integration-manager\\phase3_integration_test.go",
    "type": "logger",
    "content_snippet": "package integration_manager\r\n\r\nimport (\r\n\t\"EMAIL_SENDER_1/development/managers/interfaces\"\r\n\t\"context\"\r\n\t\"encoding/json\"\r\n\t\"fmt\"\r\n\t\"log\"\r\n\t\"net/http\"\r\n\t\"net/http/httptest\"\r\n\t\"strings\"\r\n\t\"sync\"\r\n\t\"time..."
  },
  {
    "path": "development\\managers\\powershell-bridge\\bridge_server.go",
    "type": "logger",
    "content_snippet": "// Package bridge implements the PowerShell-Go bridge for ErrorManager integration\n// Section 1.4 - Implementation des Recommandations\npackage powershell_bridge\n\nimport (\n\t\"context\"\n\t\"encoding/json\"\n\t..."
  },
  {
    "path": "development\\managers\\process-manager\\process_manager.go",
    "type": "logger",
    "content_snippet": "// Process Manager with ErrorManager Integration\r\n// Section 1.4 - Implementation des Recommandations - Phase 1\r\n\r\n// This module provides a comprehensive Process Manager with full ErrorManager integr..."
  },
  {
    "path": "development\\managers\\roadmap-manager\\roadmap-cli\\commands\\validate.go",
    "type": "report",
    "content_snippet": "package commands\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"strings\"\n\t\"time\"\n\n\t\"github.com/gerivdb/email-sender-1/cmd/roadmap-cli/storage\"\n\t\"github.com/gerivdb/email-sender-1/cmd/roadmap-cli/types\"\n\n\t\"..."
  },
  {
    "path": "development\\managers\\roadmap-manager\\roadmap-cli\\ingestion\\advanced_parser.go",
    "type": "metric",
    "content_snippet": "package ingestion\n\nimport (\n\t\"fmt\"\n\t\"regexp\"\n\t\"strconv\"\n\t\"strings\"\n\t\"time\"\n\n\t\"github.com/gerivdb/email-sender-1/cmd/roadmap-cli/types\"\n\n\t\"github.com/google/uuid\"\n)\n\n// AdvancedPlanParser handles sophi..."
  },
  {
    "path": "development\\managers\\roadmap-manager\\roadmap-cli\\parallel\\performance.go",
    "type": "report",
    "content_snippet": "// Package parallel provides performance monitoring and resource management\npackage parallel\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"runtime\"\n\t\"sync\"\n\t\"time\"\n)\n\n// PerformanceMonitor tracks system performance d..."
  },
  {
    "path": "development\\managers\\roadmap-manager\\roadmap-cli\\tui\\navigation\\mode_manager.go",
    "type": "logger",
    "content_snippet": "package navigation\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"fmt\"\r\n\t\"sync\"\r\n\t\"time\"\r\n\r\n\ttea \"github.com/charmbracelet/bubbletea\"\r\n\t\"github.com/google/uuid\"\r\n\t\"go.uber.org/zap\"\r\n)\r\n\r\n// ErrorEntry represents an error..."
  },
  {
    "path": "development\\managers\\script-manager\\executors.go",
    "type": "logger",
    "content_snippet": "// Script Executors Implementation\n// Section 1.4 - Implementation des Recommandations - Phase 1\n\npackage scriptmanager\n\nimport (\n\t\"bytes\"\n\t\"context\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"os/exec\"\n\t\"runtime\"\n\t\"st..."
  },
  {
    "path": "development\\managers\\script-manager\\script_manager.go",
    "type": "logger",
    "content_snippet": "// Script Manager with ErrorManager Integration\n// Section 1.4 - Implementation des Recommandations - Phase 1\n\n// This module provides a comprehensive Script Manager with full ErrorManager integration..."
  },
  {
    "path": "development\\managers\\security-manager\\development\\security_manager.go",
    "type": "logger",
    "content_snippet": "package development\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"crypto/aes\"\r\n\t\"crypto/cipher\"\r\n\t\"crypto/rand\"\r\n\t\"crypto/sha256\"\r\n\t\"encoding/base64\"\r\n\t\"encoding/hex\"\r\n\t\"fmt\"\r\n\t\"io\"\r\n\t\"log\"\r\n\t\"regexp\"\r\n\t\"strings\"\r\n\t\"tim..."
  },
  {
    "path": "development\\managers\\security-manager\\development\\security_manager.go",
    "type": "report",
    "content_snippet": "package development\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"crypto/aes\"\r\n\t\"crypto/cipher\"\r\n\t\"crypto/rand\"\r\n\t\"crypto/sha256\"\r\n\t\"encoding/base64\"\r\n\t\"encoding/hex\"\r\n\t\"fmt\"\r\n\t\"io\"\r\n\t\"log\"\r\n\t\"regexp\"\r\n\t\"strings\"\r\n\t\"tim..."
  },
  {
    "path": "development\\managers\\security-manager\\security_manager.go",
    "type": "logger",
    "content_snippet": "package security\n\nimport (\n\t\"context\"\n\t\"crypto/aes\"\n\t\"crypto/cipher\"\n\t\"crypto/rand\"\n\t\"encoding/hex\"\n\t\"fmt\"\n\t\"io\"\n\t\"log\"\n\t\"regexp\"\n\t\"strings\"\n\t\"sync\"\n\t\"time\"\n\n\t\"github.com/gerivdb/email-sender-1/manage..."
  },
  {
    "path": "development\\managers\\security-manager\\security_vectorization_impl.go",
    "type": "logger",
    "content_snippet": "package security\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"fmt\"\r\n\t\"sort\"\r\n\t\"time\"\r\n\r\n\t\"github.com/google/uuid\"\r\n)\r\n\r\n// === IMPL√âMENTATION PHASE 4.2.2.1: VECTORISATION DES POLITIQUES DE S√âCURIT√â ===\r\n\r\n// IndexSe..."
  },
  {
    "path": "development\\managers\\security-manager\\security_vectorization_utils.go",
    "type": "logger",
    "content_snippet": "package security\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"math\"\r\n\t\"strings\"\r\n\t\"time\"\r\n)\r\n\r\n// === M√âTHODES UTILITAIRES POUR LA VECTORISATION S√âCURIT√â ===\r\n\r\n// EnableSecurityVectorization active la vectorisation s√©..."
  },
  {
    "path": "development\\managers\\smart-variable-manager\\smart_variable_manager.go",
    "type": "report",
    "content_snippet": "package smart_variable_manager\r\n\r\nimport (\r\n\t\"EMAIL_SENDER_1/development/managers/smart-variable-manager/interfaces\"\r\n\t\"EMAIL_SENDER_1/development/managers/smart-variable-manager/internal/analyzer\"\r\n\t..."
  },
  {
    "path": "development\\managers\\storage-manager\\connections.go",
    "type": "logger",
    "content_snippet": "package storage\n\nimport (\n\t\"context\"\n\t\"fmt\"\n)\n\n// Qdrant and migrations initialization\n\nfunc (sm *StorageManagerImpl) initQdrant(ctx context.Context) error {\n\t// Initialize Qdrant client (placeholder ..."
  },
  {
    "path": "development\\managers\\storage-manager\\database.go",
    "type": "logger",
    "content_snippet": "package storage\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"database/sql\"\r\n\t\"fmt\"\r\n\t\"time\"\r\n)\r\n\r\n// PostgreSQL initialization\r\n\r\nfunc (sm *StorageManagerImpl) initPostgreSQL(ctx context.Context) error {\r\n\tdsn := fmt.S..."
  },
  {
    "path": "development\\managers\\storage-manager\\development\\storage_manager.go",
    "type": "logger",
    "content_snippet": "package development\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"database/sql\"\r\n\t\"encoding/json\"\r\n\t\"fmt\"\r\n\t\"log\"\r\n\t\"net/http\"\r\n\t\"time\"\r\n\r\n\t\"./interfaces\"        // Added import\r\n\t_ \"github.com/lib/pq\" // PostgreSQL dri..."
  },
  {
    "path": "development\\managers\\storage-manager\\operations.go",
    "type": "logger",
    "content_snippet": "package storage\n\nimport (\n\t\"context\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"time\"\n\n\t\"github.com/gerivdb/email-sender-1/managers/interfaces\"\n)\n\n// QueryDependencies recherche des d√©pendances\nfunc (sm *StorageManag..."
  },
  {
    "path": "development\\managers\\storage-manager\\vectorization_utils.go",
    "type": "logger",
    "content_snippet": "package storage\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"database/sql\"\r\n\t\"encoding/json\"\r\n\t\"fmt\"\r\n\t\"path/filepath\"\r\n\t\"strings\"\r\n\t\"time\"\r\n\r\n\t\"github.com/stretchr/testify/assert/yaml\"\r\n)\r\n\r\n// === M√âTHODES UTILITAIR..."
  },
  {
    "path": "development\\managers\\storage-manager\\migrations.go",
    "type": "logger",
    "content_snippet": "package storage\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"fmt\"\r\n)\r\n\r\n// Migrations implementation\r\n\r\n// RunMigrations ex√©cute les migrations de base de donn√©es\r\nfunc (sm *StorageManagerImpl) RunMigrations(ctx cont..."
  },
  {
    "path": "development\\managers\\storage-manager\\vectorization.go",
    "type": "logger",
    "content_snippet": "package storage\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"fmt\"\r\n\t\"io/ioutil\"\r\n\t\"os\"\r\n\t\"path/filepath\"\r\n\t\"time\"\r\n)\r\n\r\n// === IMPL√âMENTATION PHASE 4.2.1.1: AUTO-INDEXATION DES FICHIERS DE CONFIGURATION ===\r\n\r\n// Inde..."
  },
  {
    "path": "development\\managers\\storage-manager\\object_storage.go",
    "type": "logger",
    "content_snippet": "package storage\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"encoding/json\"\r\n\t\"fmt\"\r\n)\r\n\r\n// Generic object storage operations\r\n\r\n// StoreObject stocke un objet g√©n√©rique\r\nfunc (sm *StorageManagerImpl) StoreObject(ct..."
  },
  {
    "path": "development\\managers\\storage-manager\\storage_manager.go",
    "type": "logger",
    "content_snippet": "package storage\n\nimport (\n\t\"context\"\n\t\"database/sql\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"log\"\n\t\"os\"\n\t\"sync\"\n\t\"time\"\n\n\t\"github.com/gerivdb/email-sender-1/managers/interfaces\"\n\t\"github.com/google/uuid\"\n\t_ \"github..."
  },
  {
    "path": "development\\managers\\template-performance-manager\\examples\\complete_demo.go",
    "type": "report",
    "content_snippet": "// Package main demonstrates the complete functionality of the TemplatePerformanceAnalyticsManager\r\n// This example shows how to use all major features including neural pattern analysis,\r\n// performan..."
  },
  {
    "path": "development\\managers\\template-performance-manager\\internal\\analytics\\metrics_collector.go",
    "type": "logger",
    "content_snippet": "package analytics\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"fmt\"\r\n\t\"sync\"\r\n\t\"time\"\r\n\r\n\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD\r\n\t\"EMAIL_SENDER_1/development/managers/template-performance-manager/interfaces\"\r\n=======\r\n\t\"github.com/gerivdb/email..."
  },
  {
    "path": "development\\managers\\template-performance-manager\\internal\\analytics\\metrics_collector.go",
    "type": "metric",
    "content_snippet": "package analytics\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"fmt\"\r\n\t\"sync\"\r\n\t\"time\"\r\n\r\n\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD\r\n\t\"EMAIL_SENDER_1/development/managers/template-performance-manager/interfaces\"\r\n=======\r\n\t\"github.com/gerivdb/email..."
  },
  {
    "path": "development\\managers\\template-performance-manager\\internal\\analytics\\metrics_collector.go",
    "type": "report",
    "content_snippet": "package analytics\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"fmt\"\r\n\t\"sync\"\r\n\t\"time\"\r\n\r\n\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD\r\n\t\"EMAIL_SENDER_1/development/managers/template-performance-manager/interfaces\"\r\n=======\r\n\t\"github.com/gerivdb/email..."
  },
  {
    "path": "development\\managers\\template-performance-manager\\internal\\optimization\\adaptive_engine.go",
    "type": "logger",
    "content_snippet": "package optimization\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"fmt\"\r\n\t\"sync\"\r\n\t\"time\"\r\n\r\n\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD\r\n\t\"EMAIL_SENDER_1/development/managers/template-performance-manager/interfaces\"\r\n=======\r\n\t\"github.com/gerivdb/em..."
  },
  {
    "path": "development\\managers\\template-performance-manager\\internal\\neural\\processor.go",
    "type": "logger",
    "content_snippet": "package neural\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"fmt\"\r\n\t\"sync\"\r\n\t\"time\"\r\n\r\n\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD\r\n\t\"EMAIL_SENDER_1/development/managers/template-performance-manager/interfaces\"\r\n=======\r\n\t\"github.com/gerivdb/email-se..."
  },
  {
    "path": "development\\managers\\test_qdrant_connectivity_phase_1_1_2.go",
    "type": "logger",
    "content_snippet": "package managers\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"fmt\"\r\n\t\"time\"\r\n\r\n\t// \"github.com/qdrant/go-client/qdrant\" // Temporarily disabled\r\n\t\"go.uber.org/zap\"\r\n)\r\n\r\n// Test de connectivit√É¬© Qdrant Go - Phase 1.1..."
  },
  {
    "path": "development\\managers\\template-performance-manager\\manager.go",
    "type": "report",
    "content_snippet": "// Package template_performance_manager provides advanced AI-powered template performance analytics\r\n// and optimization capabilities for the FMOUA ecosystem.\r\n//\r\n// This manager integrates neural pa..."
  },
  {
    "path": "development\\managers\\template-performance-manager\\tests\\manager_test.go",
    "type": "report",
    "content_snippet": "package template_performance_manager\r\n\r\nimport (\r\n\t\"EMAIL_SENDER_1/development/managers/template-performance-manager/interfaces\"\r\n\t\"context\"\r\n\t\"fmt\"\r\n\t\"testing\"\r\n\t\"time\"\r\n\r\n\t\"github.com/stretchr/testi..."
  },
  {
    "path": "development\\managers\\tools\\cmd\\manager-toolkit\\manager_toolkit.go",
    "type": "logger",
    "content_snippet": "package main\r\n\r\nimport (\r\n\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD\r\n\t\"EMAIL_SENDER_1/tools/core/toolkit\"\r\n=======\r\n\u003e\u003e\u003e\u003e\u003e\u003e\u003e migration/gateway-manager-v77\r\n\t\"context\"\r\n\t\"flag\"\r\n\t\"fmt\"\r\n\t\"log\"\r\n\t\"os\"\r\n\t\"time\"\r\n\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD\r\n=======..."
  },
  {
    "path": "development\\managers\\test_import_management_integration.go",
    "type": "logger",
    "content_snippet": "package managers\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"fmt\"\r\n\t\"log\"\r\n\t\"strings\"\r\n\r\n\t\"D:/DO/WEB/N8N_tests/PROJETS/EMAIL_SENDER_1/development/managers/interfaces\"\r\n\r\n\t\"go.uber.org/zap\"\r\n)\r\n\r\n// MockGoModManager si..."
  },
  {
    "path": "development\\managers\\test_import_management_integration.go",
    "type": "report",
    "content_snippet": "package managers\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"fmt\"\r\n\t\"log\"\r\n\t\"strings\"\r\n\r\n\t\"D:/DO/WEB/N8N_tests/PROJETS/EMAIL_SENDER_1/development/managers/interfaces\"\r\n\r\n\t\"go.uber.org/zap\"\r\n)\r\n\r\n// MockGoModManager si..."
  },
  {
    "path": "development\\managers\\tools\\docs\\README.md",
    "type": "report",
    "content_snippet": "# Manager Toolkit v3.0.0 - Professional Development Tools\r\n\r\n## üéØ Aper√ßu\r\n\r\nSuite d'outils professionnels pour l'analyse, la migration et la maintenance du code Go dans l'√©cosyst√®me Email Sender..."
  },
  {
    "path": "development\\managers\\tools\\docs\\TOOLS_ECOSYSTEM_DOCUMENTATION.md",
    "type": "logger",
    "content_snippet": "# Documentation Compl√®te de l'√âcosyst√®me Tools - Manager Toolkit v2.0.0\r\n\r\n\u003e **IMPORTANT: CE DOCUMENT EST ARCHIV√â**  \r\n\u003e Une nouvelle version de cette documentation est disponible pour la version ..."
  },
  {
    "path": "development\\managers\\tools\\docs\\TOOLS_ECOSYSTEM_DOCUMENTATION.md",
    "type": "report",
    "content_snippet": "# Documentation Compl√®te de l'√âcosyst√®me Tools - Manager Toolkit v2.0.0\r\n\r\n\u003e **IMPORTANT: CE DOCUMENT EST ARCHIV√â**  \r\n\u003e Une nouvelle version de cette documentation est disponible pour la version ..."
  },
  {
    "path": "development\\managers\\tools\\core\\toolkit\\advanced_utilities.go",
    "type": "report",
    "content_snippet": "// Manager Toolkit - Advanced Utilities (Professional Implementation)\r\n\r\npackage toolkit\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"go/format\"\r\n\t\"go/token\"\r\n\t\"io/fs\"\r\n\t\"os\"\r\n\t\"path/filepath\"\r\n\t\"regexp\"\r\n\t\"strings\"\r\n\t\"tim..."
  },
  {
    "path": "development\\managers\\tools\\core\\toolkit\\manager_engine.go",
    "type": "logger",
    "content_snippet": "package toolkit\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"encoding/json\"\r\n\t\"fmt\"\r\n\t\"go/token\"\r\n\t\"os\"\r\n\t\"time\"\r\n\r\n\t\"github.com/email-sender/tools/core/platform\" // Import platform package\r\n\t\"github.com/email-sender/t..."
  },
  {
    "path": "development\\managers\\tools\\docs\\TOOLS_ECOSYSTEM_DOCUMENTATION_V3.md",
    "type": "report",
    "content_snippet": "# Documentation Compl√®te de l'√âcosyst√®me Tools - Manager Toolkit v3.0.0\r\n\r\n## Description G√©n√©rique pour un √âcosyst√®me d'Outils de D√©veloppement Modulaire\r\n\r\nCe document pr√©sente une analyse ..."
  },
  {
    "path": "development\\managers\\tools\\operations\\analysis\\syntax_checker.go",
    "type": "report",
    "content_snippet": "// Manager Toolkit - Syntax Checker\r\n// Version: 3.0.0\r\n// Detects and corrects syntax errors in Go source files\r\n\r\npackage analysis\r\n\r\nimport (\r\n\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD\r\n\t\"EMAIL_SENDER_1/tools/core/registry\"\r\n\t..."
  },
  {
    "path": "development\\managers\\tools\\operations\\correction\\naming_normalizer_test.go",
    "type": "logger",
    "content_snippet": "// Comprehensive test suite for NamingNormalizer\n// Tests naming convention validation, suggestion generation, and toolkit.ToolkitOperation interface compliance\n\npackage correction\n\nimport (\n\t\"EMAIL_S..."
  },
  {
    "path": "development\\managers\\tools\\operations\\correction\\naming_normalizer_test.go",
    "type": "report",
    "content_snippet": "// Comprehensive test suite for NamingNormalizer\n// Tests naming convention validation, suggestion generation, and toolkit.ToolkitOperation interface compliance\n\npackage correction\n\nimport (\n\t\"EMAIL_S..."
  },
  {
    "path": "development\\managers\\tools\\operations\\analysis\\duplicate_type_detector_test.go",
    "type": "report",
    "content_snippet": "// Manager Toolkit - Duplicate Type Detector Tests\n// Version: 3.0.0\n// Comprehensive test suite for DuplicateTypeDetector with toolkit.ToolkitOperation interface compliance\n\npackage analysis\n\nimport ..."
  },
  {
    "path": "development\\managers\\tools\\operations\\migration\\interface_migrator_pro.go",
    "type": "report",
    "content_snippet": "// Manager Toolkit - Interface Migration (Professional Implementation)\n\npackage migration\n\nimport (\n\t\"EMAIL_SENDER_1/tools/core/toolkit\"\n\t\"EMAIL_SENDER_1/tools/operations/analysis\" // Added import\n\t\"c..."
  },
  {
    "path": "development\\managers\\tools\\operations\\analysis\\interface_analyzer_pro.go",
    "type": "report",
    "content_snippet": "// Manager Toolkit - Interface Analysis (Professional Implementation)\r\n\r\npackage analysis\r\n\r\nimport (\r\n\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD\r\n\t\"EMAIL_SENDER_1/tools/core/toolkit\"\r\n=======\r\n\u003e\u003e\u003e\u003e\u003e\u003e\u003e migration/gateway-manager-v7..."
  },
  {
    "path": "development\\managers\\tools\\operations\\migration\\type_def_generator.go",
    "type": "report",
    "content_snippet": "// Manager Toolkit - Type Definition Generator\r\n// Version: 3.0.0\r\n// Generates missing type definitions based on usage analysis\r\n\r\npackage migration\r\n\r\nimport (\r\n\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD\r\n\t\"EMAIL_SENDER_1/tools/..."
  },
  {
    "path": "development\\managers\\tools\\operations\\analysis\\dependency_analyzer_test.go",
    "type": "report",
    "content_snippet": "// Manager Toolkit - Dependency Analyzer Tests\n// Tests for dependency_analyzer.go functionality\n\npackage analysis\n\nimport (\n\t\"EMAIL_SENDER_1/tools/core/toolkit\"\n\t\"context\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"o..."
  },
  {
    "path": "development\\managers\\tools\\operations\\analysis\\syntax_checker_test.go",
    "type": "report",
    "content_snippet": "// Manager Toolkit - Syntax Checker Tests\n// Version: 3.0.0\n\npackage analysis\n\nimport (\n\t// \"github.com/gerivdb/email-sender-1/tools/core/registry\" // Removed unused import\n\t\"context\"\n\t\"encoding/json\"..."
  },
  {
    "path": "development\\managers\\tools\\operations\\migration\\type_def_generator_test.go",
    "type": "report",
    "content_snippet": "// Manager Toolkit - Type Definition Generator Tests\n// Version: 3.0.0\n\npackage migration\n\nimport (\n\t\"EMAIL_SENDER_1/tools/core/toolkit\"\n\t\"context\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"go/parser\"\n\t\"go/token\"\n\t\"o..."
  },
  {
    "path": "development\\managers\\tools\\operations\\validation\\struct_validator_test.go",
    "type": "report",
    "content_snippet": "// Manager Toolkit - Struct Validator Tests\n// Tests for struct_validator.go functionality\n\npackage validation\n\nimport (\n\t\"context\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"testing\"\n\n\t\"email-s..."
  },
  {
    "path": "development\\managers\\tools\\operations\\correction\\import_conflict_resolver_test.go",
    "type": "report",
    "content_snippet": "// Manager Toolkit - Import Conflict Resolver Tests\n// Tests for import_conflict_resolver.go functionality\n\npackage correction\n\nimport (\n\t\"EMAIL_SENDER_1/tools/core/toolkit\"\n\t\"context\"\n\t\"encoding/json..."
  },
  {
    "path": "development\\managers\\vectorization-go\\connection_pool.go",
    "type": "logger",
    "content_snippet": "package vectorization\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"sync\"\n\t\"time\"\n\n\t\"go.uber.org/zap\"\n)\n\n// ConnectionPool g√®re un pool de connexions pour Qdrant\ntype ConnectionPool struct {\n\tmu          sync.RWMute..."
  },
  {
    "path": "development\\managers\\vectorization-go\\migrate_vectors.go",
    "type": "logger",
    "content_snippet": "package vectorization\n\nimport (\n\t\"context\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"strings\"\n\t\"sync\"\n\t\"time\"\n\n\t\"go.uber.org/zap\"\n)\n\n// VectorMigrator g√®re la migration des vecteu..."
  },
  {
    "path": "development\\managers\\vectorization-go\\error_handler.go",
    "type": "logger",
    "content_snippet": "package vectorization\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"time\"\n\n\t\"go.uber.org/zap\"\n)\n\n// ErrorType repr√©sente le type d'erreur vectorielle\ntype ErrorType string\n\nconst (\n\tErrorTypeConnection ErrorType = \"..."
  },
  {
    "path": "development\\managers\\vectorization-go\\vector_cache.go",
    "type": "logger",
    "content_snippet": "package vectorization\n\nimport (\n\t\"context\"\n\t\"crypto/md5\"\n\t\"encoding/hex\"\n\t\"fmt\"\n\t\"sync\"\n\t\"time\"\n\n\t\"go.uber.org/zap\"\n)\n\n// VectorCache impl√©mente un cache LRU pour les r√©sultats de recherche vectorie..."
  },
  {
    "path": "development\\managers\\vectorization-go\\vector_client.go",
    "type": "logger",
    "content_snippet": "package vectorization\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"sync\"\n\t\"time\"\n\n\t\"go.uber.org/zap\"\n)\n\n// VectorClient repr√©sente le client de vectorisation unifi√©\ntype VectorClient struct {\n\tlogger *zap.Logger\n\t..."
  },
  {
    "path": "development\\managers\\vectorization-go\\vector_operations.go",
    "type": "logger",
    "content_snippet": "package vectorization\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"sync\"\n\t\"time\"\n\n\t\"go.uber.org/zap\"\n)\n\n// VectorOperations √©tend VectorClient avec les op√©rations CRUD avanc√©es\ntype VectorOperations struct {\n\t*Ve..."
  },
  {
    "path": "development\\methodologies\\16-piliers-programmation.go.md",
    "type": "metric",
    "content_snippet": "# Les 16 Bases de la Programmation en Go\r\n\r\nCe document pr√©sente les 16 bases fondamentales de la programmation en Go qui guident le d√©veloppement de notre projet.\r\n\r\n## 1. Modularit√©\r\n\r\nEn Go, la ..."
  },
  {
    "path": "development\\n8n-internals\\hygen-benefits-validation.md",
    "type": "report",
    "content_snippet": "# Guide de validation des b√©n√©fices de Hygen\r\n\r\nCe guide explique comment valider les b√©n√©fices et l'utilit√© de Hygen dans le projet n8n.\r\n\r\n## Objectifs\r\n\r\nLa validation des b√©n√©fices de Hygen..."
  },
  {
    "path": "development\\n8n-internals\\hygen-templates-validation.md",
    "type": "report",
    "content_snippet": "# Guide de validation des templates Hygen\r\n\r\nCe guide explique comment valider les templates Hygen dans le projet n8n.\r\n\r\n## Pr√©requis\r\n\r\n- Node.js et npm install√©s\r\n- Projet n8n initialis√©\r\n- Hyge..."
  },
  {
    "path": "development\\n8n-internals\\hygen-utilities-validation.md",
    "type": "report",
    "content_snippet": "# Guide de validation des scripts d'utilitaires Hygen\r\n\r\nCe guide explique comment valider les scripts d'utilitaires Hygen dans le projet n8n.\r\n\r\n## Pr√©requis\r\n\r\n- Node.js et npm install√©s\r\n- Projet..."
  },
  {
    "path": "development\\roadmap\\parser\\roadmap-converted-direct.md",
    "type": "report",
    "content_snippet": "# Granularisation des Phases d'Am√É¬©lioration du Workflow de Roadmap\r\n\r\n- [ ] **Objectif** : R√É¬©duire de 90% le temps consacr√É¬© √É¬† la mise √É¬† jour manuelle de la roadmap\r\n- [ ] **Dur√É¬©e** :..."
  },
  {
    "path": "development\\roadmap\\roadmap_complete_converted.md",
    "type": "report",
    "content_snippet": "## ## ## ## ## ## ## ## ## ## # Roadmap EMAIL_SENDER_1\r\n\r\n\r\n# Granularisation des Phases d'Am√©lioration du Workflow de Roadmap\r\n\r\n## Squelette Initial des 5 Phases\r\n\r\n### Phase 1: Automatisation de l..."
  },
  {
    "path": "development\\roadmap\\scripts\\parser\\roadmap-converted-direct.md",
    "type": "report",
    "content_snippet": "# Granularisation des Phases d'Am√É¬©lioration du Workflow de Roadmap\r\n\r\n- [ ] **Objectif** : R√É¬©duire de 90% le temps consacr√É¬© √É¬† la mise √É¬† jour manuelle de la roadmap\r\n- [ ] **Dur√É¬©e** :..."
  },
  {
    "path": "development\\roadmap\\scripts-open-source.md",
    "type": "logger",
    "content_snippet": "# Analyse de la roadmap et proposition de scripts Python open-source\r\n\r\n## Objectif\r\n\r\nAnalyser la roadmap EMAIL_SENDER_1 pour identifier les fonctionnalit√©s cl√©s et proposer des scripts Python open..."
  },
  {
    "path": "development\\scripts\\analysis\\docs\\INTEGRATION.md",
    "type": "report",
    "content_snippet": "# Int√É¬©gration avec des outils d'analyse tiers\r\n\r\nCe document explique comment utiliser le syst√É¬®me d'int√É¬©gration avec des outils d'analyse tiers pour am√É¬©liorer la qualit√É¬© du code.\r\n\r\n## ..."
  },
  {
    "path": "development\\scripts\\analysis\\docs\\README.md",
    "type": "report",
    "content_snippet": "# Syst√É¬®me d'analyse de code\r\n\r\nCe syst√É¬®me permet d'analyser le code source avec diff√É¬©rents outils et d'int√É¬©grer les r√É¬©sultats avec des outils tiers.\r\n\r\n## Documentation\r\n\r\n- [Guide d'in..."
  },
  {
    "path": "development\\scripts\\analysis\\reporting\\README.md",
    "type": "report",
    "content_snippet": "# Reporting\r\n\r\nCe dossier contient des scripts pour la g√©n√©ration et la gestion de rapports.\r\n\r\n## Scripts disponibles\r\n\r\n- **Fix-HtmlReportEncoding.ps1** - Correction des probl√®mes d''encodage dan..."
  },
  {
    "path": "development\\scripts\\analyze_mem0_repo.py",
    "type": "report",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nScript pour analyser le d√©p√¥t mem0ai/mem0 avec MCP Git Ingest.\r\nCe script permet d'explorer la structure du d√©p√¥t et de lire les fichiers imp..."
  },
  {
    "path": "development\\scripts\\extraction\\Docs\\functions\\New-MediaExtractedInfo.md",
    "type": "report",
    "content_snippet": "# New-MediaExtractedInfo\r\n\r\n## SYNOPSIS\r\n\r\nCr√©e un nouvel objet d'information extraite pour les fichiers m√©dia.\r\n\r\n## SYNTAXE\r\n\r\n```powershell\r\nNew-MediaExtractedInfo\r\n    -MediaPath \u003cString\u003e\r\n    [..."
  },
  {
    "path": "development\\scripts\\extraction\\Public\\Analysis\\README.md",
    "type": "report",
    "content_snippet": "# Fonctions d'analyse statistique\r\n\r\nCe r√©pertoire contient des fonctions pour l'analyse statistique des objets d'information extraite.\r\n\r\n## Get-ExtractedInfoStatistics\r\n\r\nLa fonction `Get-Extracted..."
  },
  {
    "path": "development\\scripts\\analyze_mem0_with_mcp.py",
    "type": "report",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nScript pour analyser le d√©p√¥t mem0ai/mem0 avec MCP Git Ingest.\r\nCe script permet d'explorer la structure du d√©p√¥t et de lire les fichiers imp..."
  },
  {
    "path": "development\\scripts\\journal\\analysis\\embeddings.py",
    "type": "logger",
    "content_snippet": "import os\r\nimport json\r\nimport numpy as np\r\nfrom pathlib import Path\r\nfrom typing import List, Dict, Any, Optional\r\nimport logging\r\n\r\n# Configurer le logging\r\nlogging.basicConfig(\r\n    level=logging.I..."
  },
  {
    "path": "development\\scripts\\journal\\analysis\\run_semantic_analysis.py",
    "type": "logger",
    "content_snippet": "import os\r\nimport sys\r\nimport logging\r\nimport argparse\r\nfrom pathlib import Path\r\n\r\n# Configurer le logging\r\nlogging.basicConfig(\r\n    level=logging.INFO,\r\n    format='%(asctime)s - %(name)s - %(level..."
  },
  {
    "path": "development\\scripts\\journal\\analysis\\sentiment_analysis.py",
    "type": "logger",
    "content_snippet": "import re\r\nimport json\r\nfrom pathlib import Path\r\nfrom typing import List, Dict, Any, Optional\r\nimport logging\r\nfrom datetime import datetime\r\n\r\n# Configurer le logging\r\nlogging.basicConfig(\r\n    leve..."
  },
  {
    "path": "development\\scripts\\journal\\analysis\\topic_modeling.py",
    "type": "logger",
    "content_snippet": "import re\r\nimport json\r\nimport numpy as np\r\nfrom pathlib import Path\r\nfrom typing import List, Dict, Any, Optional\r\nimport logging\r\n\r\n# Configurer le logging\r\nlogging.basicConfig(\r\n    level=logging.I..."
  },
  {
    "path": "development\\scripts\\journal\\web\\desktop.py",
    "type": "logger",
    "content_snippet": "import logging\r\nfrom typing import Dict, Any\r\n\r\nlogger = logging.getLogger(\"journal_notifications.channels.desktop\")\r\n\r\nclass DesktopNotifier:\r\n    \"\"\"Canal de notification desktop.\"\"\"\r\n    \r\n    def ..."
  },
  {
    "path": "development\\scripts\\journal\\web\\email.py",
    "type": "logger",
    "content_snippet": "import logging\r\nimport smtplib\r\nfrom email.mime.text import MIMEText\r\nfrom email.mime.multipart import MIMEMultipart\r\nfrom typing import Dict, Any\r\n\r\nlogger = logging.getLogger(\"journal_notifications...."
  },
  {
    "path": "development\\scripts\\journal\\web\\erpnext_integration.py",
    "type": "logger",
    "content_snippet": "import os\r\nimport json\r\nimport logging\r\nimport requests\r\nfrom pathlib import Path\r\nfrom typing import List, Dict, Any, Optional, Union\r\nfrom datetime import datetime\r\n\r\n# Configurer le logging\r\nloggin..."
  },
  {
    "path": "development\\scripts\\journal\\web\\integration_base.py",
    "type": "logger",
    "content_snippet": "from abc import ABC, abstractmethod\r\nfrom pathlib import Path\r\nimport os\r\nimport json\r\nimport logging\r\n\r\nclass IntegrationBase(ABC):\r\n    \"\"\"Classe de base pour toutes les int√©grations.\"\"\"\r\n    \r\n   ..."
  },
  {
    "path": "development\\scripts\\journal\\web\\integrations_routes.py",
    "type": "logger",
    "content_snippet": "from fastapi import APIRouter, HTTPException, Query, Body, Depends\r\nfrom pydantic import BaseModel\r\nfrom typing import List, Dict, Any, Optional\r\nimport logging\r\nfrom pathlib import Path\r\n\r\n# Importer..."
  },
  {
    "path": "development\\scripts\\journal\\web\\jira_integration.py",
    "type": "logger",
    "content_snippet": "import re\r\nimport requests\r\nfrom datetime import datetime\r\nfrom pathlib import Path\r\nimport logging\r\nfrom typing import List, Dict, Any, Optional\r\n\r\nfrom .integration_base import IntegrationBase\r\n\r\n# ..."
  },
  {
    "path": "development\\scripts\\journal\\web\\journal_watcher.py",
    "type": "logger",
    "content_snippet": "import os\r\nimport sys\r\nimport time\r\nimport logging\r\nfrom pathlib import Path\r\nimport subprocess\r\nimport argparse\r\nfrom watchdog.observers import Observer\r\nfrom watchdog.events import FileSystemEventHa..."
  },
  {
    "path": "development\\scripts\\journal\\web\\n8n_integration.py",
    "type": "logger",
    "content_snippet": "import os\r\nimport json\r\nimport logging\r\nimport requests\r\nfrom pathlib import Path\r\nfrom typing import List, Dict, Any, Optional, Union\r\nfrom datetime import datetime\r\n\r\n# Configurer le logging\r\nloggin..."
  },
  {
    "path": "development\\scripts\\journal\\web\\notifier.py",
    "type": "logger",
    "content_snippet": "import json\r\nimport logging\r\nfrom pathlib import Path\r\nfrom typing import List, Dict, Any, Optional\r\nfrom datetime import datetime\r\n\r\n# Configurer le logging\r\nlogging.basicConfig(\r\n    level=logging.I..."
  },
  {
    "path": "development\\scripts\\journal\\web\\notion_integration.py",
    "type": "logger",
    "content_snippet": "import re\r\nimport json\r\nimport requests\r\nfrom datetime import datetime\r\nfrom pathlib import Path\r\nimport logging\r\nfrom typing import List, Dict, Any, Optional\r\n\r\nfrom .integration_base import Integrat..."
  },
  {
    "path": "development\\scripts\\journal\\web\\pr_integration.py",
    "type": "logger",
    "content_snippet": "\"\"\"\r\nModule d'int√©gration pour l'analyse des pull requests GitHub.\r\nCe module permet d'analyser les pull requests, de d√©tecter les erreurs potentielles\r\net de g√©n√©rer des commentaires automatiques..."
  },
  {
    "path": "development\\scripts\\journal\\web\\run_app.py",
    "type": "logger",
    "content_snippet": "import os\r\nimport sys\r\nimport logging\r\nimport uvicorn\r\nfrom pathlib import Path\r\n\r\n# Configurer le logging\r\nlogging.basicConfig(\r\n    level=logging.INFO,\r\n    format='%(asctime)s - %(name)s - %(leveln..."
  },
  {
    "path": "development\\scripts\\journal\\web\\run_integrations.py",
    "type": "logger",
    "content_snippet": "import os\r\nimport sys\r\nimport logging\r\nimport argparse\r\nfrom pathlib import Path\r\n\r\n# Configurer le logging\r\nlogging.basicConfig(\r\n    level=logging.INFO,\r\n    format='%(asctime)s - %(name)s - %(level..."
  },
  {
    "path": "development\\scripts\\journal\\web\\slack.py",
    "type": "logger",
    "content_snippet": "import logging\r\nimport json\r\nimport requests\r\nfrom typing import Dict, Any\r\n\r\nlogger = logging.getLogger(\"journal_notifications.channels.slack\")\r\n\r\nclass SlackNotifier:\r\n    \"\"\"Canal de notification S..."
  },
  {
    "path": "development\\scripts\\journal\\web\\web.py",
    "type": "logger",
    "content_snippet": "import logging\r\nimport json\r\nfrom pathlib import Path\r\nfrom typing import Dict, Any\r\n\r\nlogger = logging.getLogger(\"journal_notifications.channels.web\")\r\n\r\nclass WebNotifier:\r\n    \"\"\"Canal de notificat..."
  },
  {
    "path": "development\\scripts\\journal\\web\\notifications_routes.py",
    "type": "logger",
    "content_snippet": "from fastapi import APIRouter, HTTPException, Query, Body, Depends\r\nfrom pydantic import BaseModel\r\nfrom typing import List, Dict, Any, Optional\r\nimport logging\r\nfrom pathlib import Path\r\n\r\n# Importer..."
  },
  {
    "path": "development\\scripts\\journal\\web\\web_app_updated.py",
    "type": "logger",
    "content_snippet": "import os\r\nimport logging\r\nfrom fastapi import FastAPI\r\nfrom fastapi.middleware.cors import CORSMiddleware\r\nfrom pathlib import Path\r\n\r\n# Configurer le logging\r\nlogging.basicConfig(\r\n    level=logging..."
  },
  {
    "path": "development\\scripts\\journal\\web\\detector.py",
    "type": "logger",
    "content_snippet": "import json\r\nimport logging\r\nfrom pathlib import Path\r\nfrom typing import List, Dict, Any, Optional\r\nfrom datetime import datetime, timedelta\r\n\r\n# Configurer le logging\r\nlogging.basicConfig(\r\n    leve..."
  },
  {
    "path": "development\\scripts\\maintenance\\duplication\\Find-CodeDuplication.py",
    "type": "report",
    "content_snippet": "#!/usr/bin/env python3\r\n# -*- coding: utf-8 -*-\r\n\"\"\"\r\nScript de d√©tection des duplications de code.\r\n\r\nCe script analyse les scripts pour d√©tecter les duplications de code et g√©n√®re\r\nun rapport d\ufffd..."
  },
  {
    "path": "development\\scripts\\maintenance\\duplication\\Merge-SimilarScripts.py",
    "type": "report",
    "content_snippet": "#!/usr/bin/env python3\r\n# -*- coding: utf-8 -*-\r\n\"\"\"\r\nScript de fusion des scripts similaires.\r\n\r\nCe script utilise le rapport g√©n√©r√© par Find-CodeDuplication.py pour fusionner\r\nles scripts similai..."
  },
  {
    "path": "development\\scripts\\python\\utils\\text_utils\\traducteur_ameliore.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nScript de traduction de fichiers texte de l'anglais vers le fran√ßais\r\navec pr√©servation des √©l√©ments techniques comme les noms de fichiers.\r\n..."
  },
  {
    "path": "development\\scripts\\roadmap\\rag\\Generate-DynamicViews.py",
    "type": "logger",
    "content_snippet": "# Generate-DynamicViews.py\r\n# Script pour g√©n√©rer des vues dynamiques √† partir des donn√©es vectoris√©es\r\n# Version: 1.0\r\n# Date: 2025-05-15\r\n\r\nimport os\r\nimport json\r\nimport re\r\nimport logging\r\nim..."
  },
  {
    "path": "development\\scripts\\roadmap\\rag\\Generate-RoadmapReport.py",
    "type": "logger",
    "content_snippet": "# Generate-RoadmapReport.py\r\n# Script pour g√©n√©rer des rapports d'analyse sur les roadmaps\r\n# Version: 1.0\r\n# Date: 2025-05-15\r\n\r\nimport os\r\nimport json\r\nimport re\r\nimport logging\r\nimport argparse\r\n..."
  },
  {
    "path": "development\\scripts\\roadmap\\rag\\Generate-RoadmapReport.py",
    "type": "report",
    "content_snippet": "# Generate-RoadmapReport.py\r\n# Script pour g√©n√©rer des rapports d'analyse sur les roadmaps\r\n# Version: 1.0\r\n# Date: 2025-05-15\r\n\r\nimport os\r\nimport json\r\nimport re\r\nimport logging\r\nimport argparse\r\n..."
  },
  {
    "path": "development\\scripts\\roadmap\\rag\\Generate-RoadmapVisualization.py",
    "type": "logger",
    "content_snippet": "# Generate-RoadmapVisualization.py\r\n# Script pour g√©n√©rer des visualisations graphiques des roadmaps\r\n# Version: 1.0\r\n# Date: 2025-05-15\r\n\r\nimport os\r\nimport json\r\nimport re\r\nimport logging\r\nimport ..."
  },
  {
    "path": "development\\scripts\\roadmap\\rag\\search_roadmaps.py",
    "type": "logger",
    "content_snippet": "# search_roadmaps.py\r\n# Script pour rechercher dans les roadmaps vectoris√©es\r\n# Version: 1.0\r\n# Date: 2025-05-15\r\n\r\nimport os\r\nimport json\r\nimport logging\r\nimport argparse\r\nfrom typing import List, D..."
  },
  {
    "path": "development\\scripts\\roadmap\\rag\\vectorize_roadmaps.py",
    "type": "logger",
    "content_snippet": "# vectorize_roadmaps.py\r\n# Script pour vectoriser le contenu des roadmaps et les stocker dans Qdrant\r\n# Version: 1.0\r\n# Date: 2025-05-15\r\n\r\nimport os\r\nimport json\r\nimport re\r\nimport logging\r\nimport ar..."
  },
  {
    "path": "development\\scripts\\statistics\\Documentation\\KernelDensityEstimation-PerformanceAndLimitations.md",
    "type": "metric",
    "content_snippet": "# Kernel Density Estimation: Performance and Limitations\r\n\r\nThis document provides information about the performance characteristics and limitations of kernel density estimation in general and our imp..."
  },
  {
    "path": "development\\scripts\\utils\\TestOmnibusOptimizer\\README.md",
    "type": "report",
    "content_snippet": "# TestOmnibusOptimizer\r\n\r\nCe module int√É¬®gre TestOmnibus et le Syst√É¬®me d'Optimisation Proactive pour cr√É¬©er une solution compl√É¬®te d'analyse, de test et d'optimisation des scripts PowerShell...."
  },
  {
    "path": "development\\scripts\\utils\\cache\\dependency_manager.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nModule de gestion des d√©pendances pour le cache.\r\n\r\nCe module fournit des fonctionnalit√©s pour g√©rer les d√©pendances entre les √©l√©ments du ..."
  },
  {
    "path": "development\\scripts\\utils\\cache\\memory_profiler.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nModule de profilage de la m√©moire pour le cache.\r\n\r\nCe module fournit des outils pour mesurer et analyser la consommation m√©moire\r\ndu cache, af..."
  },
  {
    "path": "development\\scripts\\utils\\cache\\performance_profiler.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nModule de profilage des performances pour le cache.\r\n\r\nCe module fournit des outils pour mesurer et analyser les performances\r\ndu cache, afin d'o..."
  },
  {
    "path": "development\\scripts\\utils\\cache\\purge_scheduler.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nModule de planification de purge du cache.\r\n\r\nCe module fournit des fonctionnalit√©s pour planifier la purge p√©riodique du cache\r\nen fonction de..."
  },
  {
    "path": "development\\scripts\\utils\\cache\\invalidation.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nModule d'invalidation du cache.\r\n\r\nCe module fournit des fonctionnalit√©s pour invalider les √©l√©ments du cache\r\nen fonction de diff√©rentes str..."
  },
  {
    "path": "development\\scripts\\utils\\cache\\local_cache.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nModule de gestion du cache local avec DiskCache.\r\n\r\nCe module fournit une classe LocalCache qui encapsule la biblioth√®que DiskCache\r\npour offrir..."
  },
  {
    "path": "development\\testing\\analytics\\index.md",
    "type": "report",
    "content_snippet": "# Analytics\r\n\r\nCette section contient la documentation relative √† Analytics.\r\n\r\n## Contenu\r\n\r\n\r\n### Fichiers\r\n\r\n- [Anomaly Analysis Report](./anomaly_analysis_report.md)\r\n- [Anomaly Catalog](./anomal..."
  },
  {
    "path": "development\\tests\\validate_phase5.go",
    "type": "report",
    "content_snippet": "package tests\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"log\"\r\n\t\"os\"\r\n\t\"os/exec\"\r\n\t\"path/filepath\"\r\n\t\"strings\"\r\n\t\"time\"\r\n)\r\n\r\n// === SCRIPT DE VALIDATION PHASE 5 ===\r\n\r\n// TestSuite structure pour organiser les suites de..."
  },
  {
    "path": "development\\tools\\cache-tools\\dependency_manager.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nModule de gestion des d√©pendances pour le cache.\r\n\r\nCe module fournit des fonctionnalit√©s pour g√©rer les d√©pendances entre les √©l√©ments du ..."
  },
  {
    "path": "development\\tools\\cache-tools\\invalidation.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nModule d'invalidation du cache.\r\n\r\nCe module fournit des fonctionnalit√©s pour invalider les √©l√©ments du cache\r\nen fonction de diff√©rentes str..."
  },
  {
    "path": "development\\tools\\cache-tools\\local_cache.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nModule de gestion du cache local avec DiskCache.\r\n\r\nCe module fournit une classe LocalCache qui encapsule la biblioth√®que DiskCache\r\npour offrir..."
  },
  {
    "path": "development\\tools\\cache-tools\\performance_profiler.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nModule de profilage des performances pour le cache.\r\n\r\nCe module fournit des outils pour mesurer et analyser les performances\r\ndu cache, afin d'o..."
  },
  {
    "path": "development\\tools\\cache-tools\\purge_scheduler.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nModule de planification de purge du cache.\r\n\r\nCe module fournit des fonctionnalit√©s pour planifier la purge p√©riodique du cache\r\nen fonction de..."
  },
  {
    "path": "development\\tools\\cache-tools\\memory_profiler.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nModule de profilage de la m√©moire pour le cache.\r\n\r\nCe module fournit des outils pour mesurer et analyser la consommation m√©moire\r\ndu cache, af..."
  },
  {
    "path": "docs\\PHASE3_PROGRESS.md",
    "type": "report",
    "content_snippet": "# PHASE 3 - VALIDATION, TESTS ET BENCHMARKING : AVANCEMENT\r\n\r\n- [x] Moteur de validation documentaire (validator.go, report.go)\r\n- [x] D√©tection et r√©solution de conflits (conflict_detector.go, conf..."
  },
  {
    "path": "docs\\gateway-manager.md",
    "type": "report",
    "content_snippet": "# Documentation du Gateway-Manager (v77 - Go Natif)\r\n\r\nCe document fournit une vue d'ensemble du nouveau Gateway-Manager, impl√©ment√© en Go natif dans le cadre de la feuille de route v77.\r\n\r\n## 1. Vu..."
  },
  {
    "path": "docs\\go\\cmd_go_dependency-manager_delete_go_mods_delete_go_mods_test_go_doc.md",
    "type": "report",
    "content_snippet": "# Package delete_go_mods\r\n\r\n## Types\r\n\r\n### DeletionReport\r\n\r\nDeletionReport summarizes the deletion process.\r\n\r\n\r\n### DeletionResult\r\n\r\nDeletionResult represents the result of a single file deletion ..."
  },
  {
    "path": "docs\\go\\cmd_go_dependency-manager_delete_go_mods_main_go_doc.md",
    "type": "report",
    "content_snippet": "# Package delete_go_mods\r\n\r\n## Types\r\n\r\n### DeletionReport\r\n\r\nDeletionReport summarizes the deletion process.\r\n\r\n\r\n### DeletionResult\r\n\r\nDeletionResult represents the result of a single file deletion ..."
  },
  {
    "path": "docs\\go\\development_managers_error-manager_adapters_enhanced_types_go_doc.md",
    "type": "report",
    "content_snippet": "# Package adapters\r\n\r\n## Types\r\n\r\n### DuplicatedFileInfo\r\n\r\nDuplicatedFileInfo informations sur un fichier dupliqu√©\r\n\r\n\r\n### DuplicationContext\r\n\r\nDuplicationContext contexte enrichi pour les erreurs..."
  },
  {
    "path": "docs\\go\\development_managers_error-manager_adapters_example_usage_go_doc.md",
    "type": "report",
    "content_snippet": "# Package adapters\r\n\r\n## Types\r\n\r\n### DuplicatedFileInfo\r\n\r\nDuplicatedFileInfo informations sur un fichier dupliqu√©\r\n\r\n\r\n### DuplicationContext\r\n\r\nDuplicationContext contexte enrichi pour les erreurs..."
  },
  {
    "path": "docs\\go\\development_managers_error-manager_adapters_main_go_doc.md",
    "type": "report",
    "content_snippet": "# Package adapters\r\n\r\n## Types\r\n\r\n### DuplicatedFileInfo\r\n\r\nDuplicatedFileInfo informations sur un fichier dupliqu√©\r\n\r\n\r\n### DuplicationContext\r\n\r\nDuplicationContext contexte enrichi pour les erreurs..."
  },
  {
    "path": "docs\\go\\development_managers_error-manager_adapters_adapters_test_go_doc.md",
    "type": "report",
    "content_snippet": "# Package adapters\r\n\r\n## Types\r\n\r\n### DuplicatedFileInfo\r\n\r\nDuplicatedFileInfo informations sur un fichier dupliqu√©\r\n\r\n\r\n### DuplicationContext\r\n\r\nDuplicationContext contexte enrichi pour les erreurs..."
  },
  {
    "path": "docs\\go\\development_managers_error-manager_adapters_duplication_handler_go_doc.md",
    "type": "report",
    "content_snippet": "# Package adapters\r\n\r\n## Types\r\n\r\n### DuplicatedFileInfo\r\n\r\nDuplicatedFileInfo informations sur un fichier dupliqu√©\r\n\r\n\r\n### DuplicationContext\r\n\r\nDuplicationContext contexte enrichi pour les erreurs..."
  },
  {
    "path": "docs\\go\\development_managers_error-manager_adapters_script_inventory_adapter_go_doc.md",
    "type": "report",
    "content_snippet": "# Package adapters\r\n\r\n## Types\r\n\r\n### DuplicatedFileInfo\r\n\r\nDuplicatedFileInfo informations sur un fichier dupliqu√©\r\n\r\n\r\n### DuplicationContext\r\n\r\nDuplicationContext contexte enrichi pour les erreurs..."
  },
  {
    "path": "docs\\go\\internal_report_presentation_server_go_doc.md",
    "type": "report",
    "content_snippet": "# Package presentation\r\n\r\nPackage presentation provides web presentation functionality for reports\r\n\r\n\r\n## Types\r\n\r\n### Server\r\n\r\nServer represents a web presentation server\r\n\r\n\r\n#### Methods\r\n\r\n#####..."
  },
  {
    "path": "docs\\migration\\python-to-go-migration-guide.md",
    "type": "report",
    "content_snippet": "# Guide de Migration Python ‚Üí Go\r\n\r\n## Vue d'ensemble\r\n\r\nCe guide d√©taille la migration compl√®te du syst√®me de vectorisation Python vers l'impl√©mentation Go native dans le cadre du plan de d√©ve..."
  },
  {
    "path": "docs\\migration\\python-to-go-migration-guide.md",
    "type": "logger",
    "content_snippet": "# Guide de Migration Python ‚Üí Go\r\n\r\n## Vue d'ensemble\r\n\r\nCe guide d√©taille la migration compl√®te du syst√®me de vectorisation Python vers l'impl√©mentation Go native dans le cadre du plan de d√©ve..."
  },
  {
    "path": "docs\\migration-guide.md",
    "type": "report",
    "content_snippet": "# Guide de Migration des Plans\r\n\r\n## Strat√©gie de Migration\r\n\r\n### Vue d'Ensemble\r\n\r\nLa migration des plans existants vers l'√©cosyst√®me de synchronisation se fait en plusieurs √©tapes progressives,..."
  },
  {
    "path": "docs\\orchestration_audit.md",
    "type": "report",
    "content_snippet": "# Audit des scripts d'orchestration et de leurs d√©pendances\r\n\r\nCe rapport liste tous les scripts d'automatisation identifi√©s, leurs d√©pendances et leurs points d'entr√©e.\r\n\r\n## Scripts Identifi√©s\r..."
  },
  {
    "path": "docs\\powershell\\development_scripts_maintenance_augment_generate-usage-report_ps1_doc.md",
    "type": "report",
    "content_snippet": "# Documentation PowerShell pour development\\scripts\\maintenance\\augment\\generate-usage-report.ps1\r\n\r\nCette documentation est un placeholder et doit √™tre g√©n√©r√©e par un outil PowerShell sp√©cifique..."
  },
  {
    "path": "docs\\powershell\\projet_mcp_monitoring_scripts_generate-health-report_ps1_doc.md",
    "type": "report",
    "content_snippet": "# Documentation PowerShell pour projet\\mcp\\monitoring\\scripts\\generate-health-report.ps1\r\n\r\nCette documentation est un placeholder et doit √™tre g√©n√©r√©e par un outil PowerShell sp√©cifique.\r\n"
  },
  {
    "path": "docs\\powershell\\src_n8n_scripts_setup_generate-validation-report_ps1_doc.md",
    "type": "report",
    "content_snippet": "# Documentation PowerShell pour src\\n8n\\scripts\\setup\\generate-validation-report.ps1\r\n\r\nCette documentation est un placeholder et doit √™tre g√©n√©r√©e par un outil PowerShell sp√©cifique.\r\n"
  },
  {
    "path": "docs\\python\\development_scripts_mcp_test_memory_schema_py_doc.md",
    "type": "logger",
    "content_snippet": "Help on module test_memory_schema:\r\n\r\nNAME\r\n    test_memory_schema - Script de test pour le sch\ufffdma de m\ufffdtadonn\ufffdes des m\ufffdmoires.\r\n\r\nCLASSES\r\n    unittest.case.TestCase(builtins.object)\r\n        TestMem..."
  },
  {
    "path": "docs\\python\\development_scripts_performance_tests_test_shared_cache_py_doc.md",
    "type": "logger",
    "content_snippet": "Help on module test_shared_cache:\r\n\r\nNAME\r\n    test_shared_cache - Tests unitaires pour le module de gestion du cache partag\ufffd.\r\n\r\nDESCRIPTION\r\n    Ce script ex\ufffdcute des tests unitaires pour v\ufffdrifier l..."
  },
  {
    "path": "docs\\python\\development_scripts_maintenance_duplication_Merge-SimilarScripts_py_doc.md",
    "type": "report",
    "content_snippet": "Help on module Merge-SimilarScripts:\r\n\r\nNAME\r\n    Merge-SimilarScripts - Script de fusion des scripts similaires.\r\n\r\nDESCRIPTION\r\n    Ce script utilise le rapport g\ufffdn\ufffdr\ufffd par Find-CodeDuplication.py po..."
  },
  {
    "path": "docs\\python\\development_scripts_mcp_test_semantic_search_py_doc.md",
    "type": "logger",
    "content_snippet": "Help on module test_semantic_search:\r\n\r\nNAME\r\n    test_semantic_search\r\n\r\nDESCRIPTION\r\n    Script de test pour le module semantic_search.\r\n    Ce script teste la classe SemanticSearch avec les strat\ufffdg..."
  },
  {
    "path": "docs\\python\\_github_scripts_monitoring_dashboard_py_doc.md",
    "type": "metric",
    "content_snippet": "Help on module monitoring_dashboard:\r\n\r\nNAME\r\n    monitoring_dashboard\r\n\r\nDESCRIPTION\r\n    Jules Bot Monitoring Dashboard\r\n    Real-time monitoring and performance analytics for the Jules Bot Review S..."
  },
  {
    "path": "docs\\python\\_github_scripts_monitoring_dashboard_py_doc.md",
    "type": "report",
    "content_snippet": "Help on module monitoring_dashboard:\r\n\r\nNAME\r\n    monitoring_dashboard\r\n\r\nDESCRIPTION\r\n    Jules Bot Monitoring Dashboard\r\n    Real-time monitoring and performance analytics for the Jules Bot Review S..."
  },
  {
    "path": "docs\\python\\development_scripts_roadmap_rag_Generate-RoadmapReport_py_doc.md",
    "type": "report",
    "content_snippet": "Help on module Generate-RoadmapReport:\r\n\r\nNAME\r\n    Generate-RoadmapReport\r\n\r\nDESCRIPTION\r\n    # Generate-RoadmapReport.py\r\n    # Script pour g\ufffdn\ufffdrer des rapports d'analyse sur les roadmaps\r\n    # Ver..."
  },
  {
    "path": "docs\\python\\development_scripts_python_testing_examples_test_example_py_doc.md",
    "type": "logger",
    "content_snippet": "Help on module test_example:\r\n\r\nNAME\r\n    test_example - Exemple de tests pour d\ufffdmontrer l'utilisation de TestOmnibus.\r\n\r\nCLASSES\r\n    builtins.object\r\n        AsyncTestWrapper\r\n    unittest.case.Test..."
  },
  {
    "path": "docs\\python\\development_scripts_python_testing_scripts_pytest_runner_with_error_report_py_doc.md",
    "type": "report",
    "content_snippet": "Help on module pytest_runner_with_error_report:\r\n\r\nNAME\r\n    pytest_runner_with_error_report - Script automatis\ufffd pour ex\ufffdcuter tous les tests d'un dossier avec pytest et g\ufffdn\ufffdrer un rapport d'erreurs d..."
  },
  {
    "path": "docs\\python\\development_scripts_python_utils_testing_utils_test_workflow_management_py_doc.md",
    "type": "logger",
    "content_snippet": "Help on module test_workflow_management:\r\n\r\nNAME\r\n    test_workflow_management - Tests unitaires pour la gestion des workflows n8n\r\n\r\nCLASSES\r\n    unittest.case.TestCase(builtins.object)\r\n        Test..."
  },
  {
    "path": "docs\\python\\development_scripts_roadmap_rag_tests_test_extract_decimal_values_py_doc.md",
    "type": "logger",
    "content_snippet": "Help on module test_extract_decimal_values:\r\n\r\nNAME\r\n    test_extract_decimal_values\r\n\r\nDESCRIPTION\r\n    Script de test pour l'extraction des valeurs d'estimation d\ufffdcimales\r\n    Version: 1.0\r\n    Date..."
  },
  {
    "path": "docs\\python\\development_scripts_python_utils_testing_utils_test_ci_integration_py_doc.md",
    "type": "logger",
    "content_snippet": "Help on module test_ci_integration:\r\n\r\nNAME\r\n    test_ci_integration - Tests unitaires pour l'int\ufffdgration CI/CD\r\n\r\nCLASSES\r\n    unittest.case.TestCase(builtins.object)\r\n        TestCIIntegration\r\n\r\n  ..."
  },
  {
    "path": "docs\\python\\mem0-analysis_repo_embedchain_tests_evaluation_test_answer_relevancy_metric_py_doc.md",
    "type": "metric",
    "content_snippet": "problem in mem0-analysis\\repo\\embedchain\\tests\\evaluation\\test_answer_relevancy_metric.py - ModuleNotFoundError: No module named 'embedchain'\r\n"
  },
  {
    "path": "docs\\python\\mem0-analysis_repo_embedchain_tests_evaluation_test_context_relevancy_metric_py_doc.md",
    "type": "metric",
    "content_snippet": "problem in mem0-analysis\\repo\\embedchain\\tests\\evaluation\\test_context_relevancy_metric.py - ModuleNotFoundError: No module named 'embedchain'\r\n"
  },
  {
    "path": "docs\\python\\mem0-analysis_repo_embedchain_tests_evaluation_test_groundedness_metric_py_doc.md",
    "type": "metric",
    "content_snippet": "problem in mem0-analysis\\repo\\embedchain\\tests\\evaluation\\test_groundedness_metric.py - ModuleNotFoundError: No module named 'embedchain'\r\n"
  },
  {
    "path": "docs\\python\\projet_code_metrics_iqr_report_symmetric_py_doc.md",
    "type": "metric",
    "content_snippet": "Help on module iqr_report_symmetric:\r\n\r\nNAME\r\n    iqr_report_symmetric\r\n\r\nDESCRIPTION\r\n    Module pour cr\ufffder un rapport complet sur la pr\ufffdcision de l'estimation de l'IQR\r\n    pour les distributions sy..."
  },
  {
    "path": "docs\\python\\projet_code_metrics_resolution_metrics_test_py_doc.md",
    "type": "metric",
    "content_snippet": "Chemin Python: ['D:\\\\DO\\\\WEB\\\\N8N_tests\\\\PROJETS\\\\EMAIL_SENDER_1', 'C:\\\\Python312\\\\python312.zip', 'C:\\\\Python312\\\\DLLs', 'C:\\\\Python312\\\\Lib', 'C:\\\\Python312', 'C:\\\\Users\\\\user\\\\AppData\\\\Roaming\\\\Pyt..."
  },
  {
    "path": "docs\\python\\projet_venv_Lib_site-packages_pip__internal_models_installation_report_py_doc.md",
    "type": "report",
    "content_snippet": "Help on module installation_report:\r\n\r\nNAME\r\n    installation_report\r\n\r\nCLASSES\r\n    builtins.object\r\n        InstallationReport\r\n\r\n    class InstallationReport(builtins.object)\r\n     |  InstallationR..."
  },
  {
    "path": "docs\\python\\projet_venv_Lib_site-packages_pip__internal_utils__log_py_doc.md",
    "type": "logger",
    "content_snippet": "Help on module _log:\r\n\r\nNAME\r\n    _log - Customize logging\r\n\r\nDESCRIPTION\r\n    Defines custom logger class for the `logger.verbose(...)` method.\r\n\r\n    init_logging() must be called before any other m..."
  },
  {
    "path": "docs\\python\\src_langchain_tests_test_cache_py_doc.md",
    "type": "logger",
    "content_snippet": "Help on module test_cache:\r\n\r\nNAME\r\n    test_cache - Tests pour le gestionnaire de cache.\r\n\r\nDESCRIPTION\r\n    Ce module contient les tests unitaires pour le gestionnaire de cache.\r\n\r\nCLASSES\r\n    unit..."
  },
  {
    "path": "docs\\python\\src_langchain_tests_test_tools_py_doc.md",
    "type": "logger",
    "content_snippet": "Help on module test_tools:\r\n\r\nNAME\r\n    test_tools - Tests pour les outils Langchain.\r\n\r\nDESCRIPTION\r\n    Ce module contient des tests pour v\ufffdrifier le bon fonctionnement des outils Langchain.\r\n\r\nCLAS..."
  },
  {
    "path": "docs\\python\\src_langchain_tests_test_imports_py_doc.md",
    "type": "logger",
    "content_snippet": "Help on module test_imports:\r\n\r\nNAME\r\n    test_imports - Test d'importation des modules Langchain.\r\n\r\nDESCRIPTION\r\n    Ce module v\ufffdrifie que tous les modules Langchain peuvent \ufffdtre import\ufffds correcteme..."
  },
  {
    "path": "docs\\python\\src_mcp_core_tests_test_client_py_doc.md",
    "type": "logger",
    "content_snippet": "Help on module test_client:\r\n\r\nNAME\r\n    test_client - Tests unitaires pour le client Python.\r\n\r\nDESCRIPTION\r\n    Ce script contient les tests unitaires pour le client Python qui interagit avec le ser..."
  },
  {
    "path": "docs\\python\\src_mcp_tests_code_test_code_manager_py_doc.md",
    "type": "logger",
    "content_snippet": "Help on module test_code_manager:\r\n\r\nNAME\r\n    test_code_manager - Tests unitaires pour la classe CodeManager.\r\n\r\nDESCRIPTION\r\n    Ce module contient les tests unitaires pour la classe CodeManager.\r\n\r..."
  },
  {
    "path": "docs\\python\\src_mcp_tests_core_test_mcp_core_py_doc.md",
    "type": "logger",
    "content_snippet": "Help on module test_mcp_core:\r\n\r\nNAME\r\n    test_mcp_core - Tests unitaires pour le Core MCP.\r\n\r\nDESCRIPTION\r\n    Ce module contient les tests unitaires pour le Core MCP.\r\n\r\nCLASSES\r\n    unittest.case...."
  },
  {
    "path": "docs\\python\\src_mcp_tests_code_test_code_tools_py_doc.md",
    "type": "logger",
    "content_snippet": "Help on module test_code_tools:\r\n\r\nNAME\r\n    test_code_tools - Tests unitaires pour les outils de code MCP.\r\n\r\nDESCRIPTION\r\n    Ce module contient les tests unitaires pour les outils de code MCP.\r\n\r\nC..."
  },
  {
    "path": "docs\\python\\src_mcp_tests_document_test_document_manager_py_doc.md",
    "type": "logger",
    "content_snippet": "Help on module test_document_manager:\r\n\r\nNAME\r\n    test_document_manager - Tests unitaires pour la classe DocumentManager.\r\n\r\nDESCRIPTION\r\n    Ce module contient les tests unitaires pour la classe Doc..."
  },
  {
    "path": "docs\\python\\src_mcp_tests_memory_test_memory_manager_py_doc.md",
    "type": "logger",
    "content_snippet": "Help on module test_memory_manager:\r\n\r\nNAME\r\n    test_memory_manager - Tests unitaires pour la classe MemoryManager.\r\n\r\nDESCRIPTION\r\n    Ce module contient les tests unitaires pour la classe MemoryMan..."
  },
  {
    "path": "docs\\python\\src_mcp_tests_memory_test_memory_tools_py_doc.md",
    "type": "logger",
    "content_snippet": "Help on module test_memory_tools:\r\n\r\nNAME\r\n    test_memory_tools - Tests unitaires pour les outils de m\ufffdmoire MCP.\r\n\r\nDESCRIPTION\r\n    Ce module contient les tests unitaires pour les outils de m\ufffdmoire..."
  },
  {
    "path": "docs\\python\\src_mcp_tests_roadmap_test_cognitive_manager_py_doc.md",
    "type": "logger",
    "content_snippet": "Help on module test_cognitive_manager:\r\n\r\nNAME\r\n    test_cognitive_manager - Tests unitaires pour le gestionnaire de l'architecture cognitive des roadmaps.\r\n\r\nDESCRIPTION\r\n    Ce module contient les t..."
  },
  {
    "path": "docs\\python\\src_mcp_tests_roadmap_test_cognitive_architecture_py_doc.md",
    "type": "logger",
    "content_snippet": "Help on module test_cognitive_architecture:\r\n\r\nNAME\r\n    test_cognitive_architecture - Tests unitaires pour l'architecture cognitive des roadmaps.\r\n\r\nDESCRIPTION\r\n    Ce module contient les tests unit..."
  },
  {
    "path": "docs\\python\\src_mcp_tests_core_test_tools_manager_py_doc.md",
    "type": "logger",
    "content_snippet": "Help on module test_tools_manager:\r\n\r\nNAME\r\n    test_tools_manager - Tests unitaires pour le Tools Manager.\r\n\r\nDESCRIPTION\r\n    Ce module contient les tests unitaires pour le Tools Manager.\r\n\r\nCLASSES..."
  },
  {
    "path": "docs\\python\\src_mcp_tests_document_test_document_tools_py_doc.md",
    "type": "logger",
    "content_snippet": "Help on module test_document_tools:\r\n\r\nNAME\r\n    test_document_tools - Tests unitaires pour les outils de document MCP.\r\n\r\nDESCRIPTION\r\n    Ce module contient les tests unitaires pour les outils de do..."
  },
  {
    "path": "docs\\python\\src_orchestrator_tests_test_delete_archive_py_doc.md",
    "type": "logger",
    "content_snippet": "Help on module test_delete_archive:\r\n\r\nNAME\r\n    test_delete_archive - Tests pour le module de suppression et archivage th\ufffdmatique.\r\n\r\nCLASSES\r\n    unittest.case.TestCase(builtins.object)\r\n        Tes..."
  },
  {
    "path": "docs\\python\\src_mcp_tests_core_test_memory_manager_py_doc.md",
    "type": "logger",
    "content_snippet": "Help on module test_memory_manager:\r\n\r\nNAME\r\n    test_memory_manager - Tests unitaires pour le Memory Manager.\r\n\r\nDESCRIPTION\r\n    Ce module contient les tests unitaires pour le Memory Manager.\r\n\r\nCLA..."
  },
  {
    "path": "docs\\python\\src_orchestrator_tests_test_read_search_py_doc.md",
    "type": "logger",
    "content_snippet": "Help on module test_read_search:\r\n\r\nNAME\r\n    test_read_search - Tests pour le module de lecture et recherche th\ufffdmatique.\r\n\r\nCLASSES\r\n    unittest.case.TestCase(builtins.object)\r\n        TestThematicR..."
  },
  {
    "path": "docs\\python\\src_orchestrator_tests_test_theme_attribution_py_doc.md",
    "type": "logger",
    "content_snippet": "Help on module test_theme_attribution:\r\n\r\nNAME\r\n    test_theme_attribution - Tests pour le module d'attribution th\ufffdmatique automatique.\r\n\r\nCLASSES\r\n    unittest.case.TestCase(builtins.object)\r\n       ..."
  },
  {
    "path": "docs\\python\\src_orchestrator_tests_test_create_update_py_doc.md",
    "type": "logger",
    "content_snippet": "Help on module test_create_update:\r\n\r\nNAME\r\n    test_create_update - Tests pour le module de cr\ufffdation et mise \ufffd jour th\ufffdmatique.\r\n\r\nCLASSES\r\n    unittest.case.TestCase(builtins.object)\r\n        TestTh..."
  },
  {
    "path": "docs\\read_file_README.md",
    "type": "report",
    "content_snippet": "# Documentation Technique et Guides pour les Am√©liorations de `read_file`\r\n\r\nCe document fournit la documentation technique et les guides d'utilisation pour les am√©liorations apport√©es √† la foncti..."
  },
  {
    "path": "docs\\python\\src_orchestrator_tests_test_manager_py_doc.md",
    "type": "logger",
    "content_snippet": "Help on module test_manager:\r\n\r\nNAME\r\n    test_manager - Tests pour le gestionnaire CRUD modulaire th\ufffdmatique.\r\n\r\nCLASSES\r\n    unittest.case.TestCase(builtins.object)\r\n        TestThematicCRUDManager\r..."
  },
  {
    "path": "docs\\python\\src_orchestrator_tests_test_hierarchical_themes_py_doc.md",
    "type": "logger",
    "content_snippet": "Help on module test_hierarchical_themes:\r\n\r\nNAME\r\n    test_hierarchical_themes - Tests pour le module de gestion des th\ufffdmes hi\ufffdrarchiques.\r\n\r\nCLASSES\r\n    unittest.case.TestCase(builtins.object)\r\n    ..."
  },
  {
    "path": "docs\\rollback_points_audit.md",
    "type": "report",
    "content_snippet": "# Audit des points de rollback/versionning\r\n\r\nCe rapport identifie les fichiers critiques du d√©p√¥t qui devraient √™tre consid√©r√©s pour les proc√©dures de sauvegarde et de restauration.\r\n\r\n## Fichi..."
  },
  {
    "path": "docs\\technical\\ci_cd_integration_plan.md",
    "type": "report",
    "content_snippet": "# Plan d'Int√©gration CI/CD pour le Dependency Manager\r\n\r\nCe document d√©crit les modifications et les ajouts n√©cessaires au pipeline CI/CD pour int√©grer le Dependency Manager et ses scripts de coh\ufffd..."
  },
  {
    "path": "docs\\technical\\test_plans\\dep_manager_test_coverage_plan.md",
    "type": "report",
    "content_snippet": "# Plan de Couverture des Tests Unitaires pour le Dependency Manager\r\n\r\nCe document identifie les composants du Dependency Manager qui n√©cessitent des tests unitaires et d√©crit la strat√©gie de couve..."
  },
  {
    "path": "docs\\technical\\DEPENDENCY_MANAGER.md",
    "type": "report",
    "content_snippet": "# Dependency Manager - Documentation Technique\r\n\r\nCe document fournit une documentation technique d√©taill√©e pour le Dependency Manager, y compris son architecture, le fonctionnement de ses scripts, ..."
  },
  {
    "path": "duplication_report.md",
    "type": "report",
    "content_snippet": "# Rapport de duplication des standards\r\n\r\n## Standard dupliqu√©¬†: SCRIPTS-OUTILS.md\r\n- .github\\docs\\SCRIPTS-OUTILS.md\r\n\r\n## Standard dupliqu√©¬†: plan-dev-v76-automatisation-doc.md\r\n- .github\\docs\\pl..."
  },
  {
    "path": "final_comprehensive_test_runner\\final_comprehensive_test_runner.go",
    "type": "report",
    "content_snippet": "// Ultra-Advanced 8-Level Branching Framework - Final Comprehensive Test Runner\r\n// ==========================================================================\r\npackage final_comprehensive_test_runner\r..."
  },
  {
    "path": "event_hooks.json",
    "type": "logger",
    "content_snippet": "[\n  {\n    \"file\": \".github\\\\docs\\\\algorithms\\\\analysis-pipeline\\\\email_sender_analysis_pipeline.go\",\n    \"type\": \".go\",\n    \"keyword\": \"script\"\n  },\n  {\n    \"file\": \".github\\\\docs\\\\algorithms\\\\auto-fi..."
  },
  {
    "path": "event_hooks.json",
    "type": "report",
    "content_snippet": "[\n  {\n    \"file\": \".github\\\\docs\\\\algorithms\\\\analysis-pipeline\\\\email_sender_analysis_pipeline.go\",\n    \"type\": \".go\",\n    \"keyword\": \"script\"\n  },\n  {\n    \"file\": \".github\\\\docs\\\\algorithms\\\\auto-fi..."
  },
  {
    "path": "internal\\metrics\\metrics.go",
    "type": "logger",
    "content_snippet": "// Package metrics provides comprehensive monitoring for RAG system\r\n// Time-Saving Method 6: Metrics-Driven Development\r\n// ROI: +20h/month (identifies performance bottlenecks instantly)\r\npackage met..."
  },
  {
    "path": "internal\\report\\presentation\\server.go",
    "type": "report",
    "content_snippet": "// Package presentation provides web presentation functionality for reports\npackage presentation\n\nimport (\n\t\"embed\"\n\t\"fmt\"\n\t\"html/template\"\n\t\"net/http\"\n\t\"strconv\"\n\t\"strings\"\n\n\t\"github.com/gerivdb/emai..."
  },
  {
    "path": "manager_inventory.md",
    "type": "logger",
    "content_snippet": "Fichier: .github\\docs\\algorithms\\analysis-pipeline\\email_sender_analysis_pipeline.go, Type: .go, Mot-cl√©: script\nFichier: .github\\docs\\algorithms\\auto-fix\\email_sender_auto_fixer.go, Type: .go, Mot-c..."
  },
  {
    "path": "manager_inventory.md",
    "type": "report",
    "content_snippet": "Fichier: .github\\docs\\algorithms\\analysis-pipeline\\email_sender_analysis_pipeline.go, Type: .go, Mot-cl√©: script\nFichier: .github\\docs\\algorithms\\auto-fix\\email_sender_auto_fixer.go, Type: .go, Mot-c..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\bots\\discord.py",
    "type": "logger",
    "content_snippet": "import argparse\r\nimport logging\r\nimport os\r\n\r\nfrom embedchain.helpers.json_serializable import register_deserializable\r\n\r\nfrom .base import BaseBot\r\n\r\ntry:\r\n    import discord\r\n    from discord import..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\app.py",
    "type": "metric",
    "content_snippet": "import ast\r\nimport concurrent.futures\r\nimport json\r\nimport logging\r\nimport os\r\nfrom typing import Any, Optional, Union\r\n\r\nimport requests\r\nimport yaml\r\nfrom tqdm import tqdm\r\n\r\nfrom embedchain.cache i..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\app.py",
    "type": "logger",
    "content_snippet": "import ast\r\nimport concurrent.futures\r\nimport json\r\nimport logging\r\nimport os\r\nfrom typing import Any, Optional, Union\r\n\r\nimport requests\r\nimport yaml\r\nfrom tqdm import tqdm\r\n\r\nfrom embedchain.cache i..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\chunkers\\base_chunker.py",
    "type": "logger",
    "content_snippet": "import hashlib\r\nimport logging\r\nfrom typing import Any, Optional\r\n\r\nfrom embedchain.config.add_config import ChunkerConfig\r\nfrom embedchain.helpers.json_serializable import JSONSerializable\r\nfrom embe..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\cache.py",
    "type": "logger",
    "content_snippet": "import logging\r\nimport os  # noqa: F401\r\nfrom typing import Any\r\n\r\nfrom gptcache import cache  # noqa: F401\r\nfrom gptcache.adapter.adapter import adapt  # noqa: F401\r\nfrom gptcache.config import Confi..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\bots\\slack.py",
    "type": "logger",
    "content_snippet": "import argparse\r\nimport logging\r\nimport os\r\nimport signal\r\nimport sys\r\n\r\nfrom embedchain import App\r\nfrom embedchain.helpers.json_serializable import register_deserializable\r\n\r\nfrom .base import BaseB..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\bots\\whatsapp.py",
    "type": "logger",
    "content_snippet": "import argparse\r\nimport importlib\r\nimport logging\r\nimport signal\r\nimport sys\r\n\r\nfrom embedchain.helpers.json_serializable import register_deserializable\r\n\r\nfrom .base import BaseBot\r\n\r\nlogger = loggin..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\client.py",
    "type": "logger",
    "content_snippet": "import json\r\nimport logging\r\nimport os\r\nimport uuid\r\n\r\nimport requests\r\n\r\nfrom embedchain.constants import CONFIG_DIR, CONFIG_FILE\r\n\r\nlogger = logging.getLogger(__name__)\r\n\r\n\r\nclass Client:\r\n    def _..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\config\\llm\\base.py",
    "type": "logger",
    "content_snippet": "import json\r\nimport logging\r\nimport re\r\nfrom pathlib import Path\r\nfrom string import Template\r\nfrom typing import Any, Dict, Mapping, Optional, Union\r\n\r\nimport httpx\r\n\r\nfrom embedchain.config.base_con..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\config\\base_app_config.py",
    "type": "logger",
    "content_snippet": "import logging\r\nfrom typing import Optional\r\n\r\nfrom embedchain.config.base_config import BaseConfig\r\nfrom embedchain.helpers.json_serializable import JSONSerializable\r\nfrom embedchain.vectordb.base im..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\embedder\\ollama.py",
    "type": "logger",
    "content_snippet": "import logging\r\nfrom typing import Optional\r\n\r\ntry:\r\n    from ollama import Client\r\nexcept ImportError:\r\n    raise ImportError(\"Ollama Embedder requires extra dependencies. Install with `pip install o..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\embedder\\nvidia.py",
    "type": "logger",
    "content_snippet": "import logging\r\nimport os\r\nfrom typing import Optional\r\n\r\nfrom langchain_nvidia_ai_endpoints import NVIDIAEmbeddings\r\n\r\nfrom embedchain.config import BaseEmbedderConfig\r\nfrom embedchain.embedder.base ..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\embedchain.py",
    "type": "logger",
    "content_snippet": "import hashlib\r\nimport json\r\nimport logging\r\nfrom typing import Any, Optional, Union\r\n\r\nfrom dotenv import load_dotenv\r\nfrom langchain.docstore.document import Document\r\n\r\nfrom embedchain.cache import..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\evaluation\\metrics\\answer_relevancy.py",
    "type": "logger",
    "content_snippet": "import concurrent.futures\r\nimport logging\r\nimport os\r\nfrom string import Template\r\nfrom typing import Optional\r\n\r\nimport numpy as np\r\nfrom openai import OpenAI\r\nfrom tqdm import tqdm\r\n\r\nfrom embedchai..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\evaluation\\base.py",
    "type": "metric",
    "content_snippet": "from abc import ABC, abstractmethod\r\n\r\nfrom embedchain.utils.evaluation import EvalData\r\n\r\n\r\nclass BaseMetric(ABC):\r\n    \"\"\"Base class for a metric.\r\n\r\n    This class provides a common interface for a..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\evaluation\\metrics\\groundedness.py",
    "type": "logger",
    "content_snippet": "import concurrent.futures\r\nimport logging\r\nimport os\r\nfrom string import Template\r\nfrom typing import Optional\r\n\r\nimport numpy as np\r\nfrom openai import OpenAI\r\nfrom tqdm import tqdm\r\n\r\nfrom embedchai..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\llm\\google.py",
    "type": "logger",
    "content_snippet": "import logging\r\nimport os\r\nfrom collections.abc import Generator\r\nfrom typing import Any, Optional, Union\r\n\r\ntry:\r\n    import google.generativeai as genai\r\nexcept ImportError:\r\n    raise ImportError(\"..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\llm\\huggingface.py",
    "type": "logger",
    "content_snippet": "import importlib\r\nimport logging\r\nimport os\r\nfrom typing import Optional\r\n\r\nfrom langchain_community.llms.huggingface_endpoint import HuggingFaceEndpoint\r\nfrom langchain_community.llms.huggingface_hub..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\llm\\anthropic.py",
    "type": "logger",
    "content_snippet": "import logging\r\nimport os\r\nfrom typing import Any, Optional\r\n\r\ntry:\r\n    from langchain_anthropic import ChatAnthropic\r\nexcept ImportError:\r\n    raise ImportError(\"Please install the langchain-anthrop..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\llm\\ollama.py",
    "type": "logger",
    "content_snippet": "import logging\r\nfrom collections.abc import Iterable\r\nfrom typing import Optional, Union\r\n\r\nfrom langchain.callbacks.manager import CallbackManager\r\nfrom langchain.callbacks.stdout import StdOutCallba..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\llm\\vertex_ai.py",
    "type": "logger",
    "content_snippet": "import importlib\r\nimport logging\r\nfrom typing import Any, Optional\r\n\r\nfrom langchain.callbacks.streaming_stdout import StreamingStdOutCallbackHandler\r\nfrom langchain_google_vertexai import ChatVertexA..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\helpers\\json_serializable.py",
    "type": "logger",
    "content_snippet": "import json\r\nimport logging\r\nfrom string import Template\r\nfrom typing import Any, Type, TypeVar, Union\r\n\r\nT = TypeVar(\"T\", bound=\"JSONSerializable\")\r\n\r\n# NOTE: Through inheritance, all of our classes ..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\llm\\azure_openai.py",
    "type": "logger",
    "content_snippet": "import logging\r\nfrom typing import Optional\r\n\r\nfrom embedchain.config import BaseLlmConfig\r\nfrom embedchain.helpers.json_serializable import register_deserializable\r\nfrom embedchain.llm.base import Ba..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\llm\\base.py",
    "type": "logger",
    "content_snippet": "import logging\r\nimport os\r\nfrom collections.abc import Generator\r\nfrom typing import Any, Optional\r\n\r\nfrom langchain.schema import BaseMessage as LCBaseMessage\r\n\r\nfrom embedchain.config import BaseLlm..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\loaders\\discourse.py",
    "type": "logger",
    "content_snippet": "import hashlib\r\nimport logging\r\nimport time\r\nfrom typing import Any, Optional\r\n\r\nimport requests\r\n\r\nfrom embedchain.loaders.base_loader import BaseLoader\r\nfrom embedchain.utils.misc import clean_strin..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\loaders\\docs_site_loader.py",
    "type": "logger",
    "content_snippet": "import hashlib\r\nimport logging\r\nfrom urllib.parse import urljoin, urlparse\r\n\r\nimport requests\r\n\r\ntry:\r\n    from bs4 import BeautifulSoup\r\nexcept ImportError:\r\n    raise ImportError(\r\n        \"DocsSite..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\loaders\\gmail.py",
    "type": "logger",
    "content_snippet": "import base64\r\nimport hashlib\r\nimport logging\r\nimport os\r\nfrom email import message_from_bytes\r\nfrom email.utils import parsedate_to_datetime\r\nfrom textwrap import dedent\r\nfrom typing import Optional\r..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\loaders\\mysql.py",
    "type": "logger",
    "content_snippet": "import hashlib\r\nimport logging\r\nfrom typing import Any, Optional\r\n\r\nfrom embedchain.loaders.base_loader import BaseLoader\r\nfrom embedchain.utils.misc import clean_string\r\n\r\nlogger = logging.getLogger(..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\loaders\\notion.py",
    "type": "logger",
    "content_snippet": "import hashlib\r\nimport logging\r\nimport os\r\nfrom typing import Any, Optional\r\n\r\nimport requests\r\n\r\nfrom embedchain.helpers.json_serializable import register_deserializable\r\nfrom embedchain.loaders.base..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\loaders\\postgres.py",
    "type": "logger",
    "content_snippet": "import hashlib\r\nimport logging\r\nfrom typing import Any, Optional\r\n\r\nfrom embedchain.loaders.base_loader import BaseLoader\r\n\r\nlogger = logging.getLogger(__name__)\r\n\r\n\r\nclass PostgresLoader(BaseLoader):..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\loaders\\sitemap.py",
    "type": "logger",
    "content_snippet": "import concurrent.futures\r\nimport hashlib\r\nimport logging\r\nimport os\r\nfrom urllib.parse import urlparse\r\n\r\nimport requests\r\nfrom tqdm import tqdm\r\n\r\ntry:\r\n    from bs4 import BeautifulSoup\r\n    from b..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\loaders\\slack.py",
    "type": "logger",
    "content_snippet": "import hashlib\r\nimport logging\r\nimport os\r\nimport ssl\r\nfrom typing import Any, Optional\r\n\r\nimport certifi\r\n\r\nfrom embedchain.loaders.base_loader import BaseLoader\r\nfrom embedchain.utils.misc import cl..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\loaders\\substack.py",
    "type": "logger",
    "content_snippet": "import hashlib\r\nimport logging\r\nimport time\r\nfrom xml.etree import ElementTree\r\n\r\nimport requests\r\n\r\nfrom embedchain.helpers.json_serializable import register_deserializable\r\nfrom embedchain.loaders.b..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\loaders\\web_page.py",
    "type": "logger",
    "content_snippet": "import hashlib\r\nimport logging\r\nfrom typing import Any, Optional\r\n\r\nimport requests\r\n\r\ntry:\r\n    from bs4 import BeautifulSoup\r\nexcept ImportError:\r\n    raise ImportError(\r\n        \"Webpage requires e..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\loaders\\youtube_channel.py",
    "type": "logger",
    "content_snippet": "import concurrent.futures\r\nimport hashlib\r\nimport logging\r\n\r\nfrom tqdm import tqdm\r\n\r\nfrom embedchain.loaders.base_loader import BaseLoader\r\nfrom embedchain.loaders.youtube_video import YoutubeVideoLo..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\loaders\\directory_loader.py",
    "type": "logger",
    "content_snippet": "import hashlib\r\nimport logging\r\nfrom pathlib import Path\r\nfrom typing import Any, Optional\r\n\r\nfrom embedchain.config import AddConfig\r\nfrom embedchain.data_formatter.data_formatter import DataFormatte..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\loaders\\beehiiv.py",
    "type": "logger",
    "content_snippet": "import hashlib\r\nimport logging\r\nimport time\r\nfrom xml.etree import ElementTree\r\n\r\nimport requests\r\n\r\nfrom embedchain.helpers.json_serializable import register_deserializable\r\nfrom embedchain.loaders.b..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\memory\\message.py",
    "type": "logger",
    "content_snippet": "import logging\r\nfrom typing import Any, Optional\r\n\r\nfrom embedchain.helpers.json_serializable import JSONSerializable\r\n\r\nlogger = logging.getLogger(__name__)\r\n\r\n\r\nclass BaseMessage(JSONSerializable):\r..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\loaders\\discord.py",
    "type": "logger",
    "content_snippet": "import hashlib\r\nimport logging\r\nimport os\r\n\r\nfrom embedchain.helpers.json_serializable import register_deserializable\r\nfrom embedchain.loaders.base_loader import BaseLoader\r\n\r\nlogger = logging.getLogg..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\utils\\misc.py",
    "type": "logger",
    "content_snippet": "import datetime\r\nimport itertools\r\nimport json\r\nimport logging\r\nimport os\r\nimport re\r\nimport string\r\nfrom typing import Any\r\n\r\nfrom schema import Optional, Or, Schema\r\nfrom tqdm import tqdm\r\n\r\nfrom em..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\memory\\base.py",
    "type": "logger",
    "content_snippet": "import json\r\nimport logging\r\nimport uuid\r\nfrom typing import Any, Optional\r\n\r\nfrom embedchain.core.db.database import get_session\r\nfrom embedchain.core.db.models import ChatHistory as ChatHistoryModel..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\telemetry\\posthog.py",
    "type": "logger",
    "content_snippet": "import json\r\nimport logging\r\nimport os\r\nimport uuid\r\n\r\nfrom posthog import Posthog\r\n\r\nimport embedchain\r\nfrom embedchain.constants import CONFIG_DIR, CONFIG_FILE\r\n\r\n\r\nclass AnonymousTelemetry:\r\n    de..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\vectordb\\elasticsearch.py",
    "type": "logger",
    "content_snippet": "import logging\r\nfrom typing import Any, Optional, Union\r\n\r\ntry:\r\n    from elasticsearch import Elasticsearch\r\n    from elasticsearch.helpers import bulk\r\nexcept ImportError:\r\n    raise ImportError(\r\n ..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\vectordb\\pinecone.py",
    "type": "logger",
    "content_snippet": "import logging\r\nimport os\r\nfrom typing import Optional, Union\r\n\r\ntry:\r\n    import pinecone\r\nexcept ImportError:\r\n    raise ImportError(\r\n        \"Pinecone requires extra dependencies. Install with `pi..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\vectordb\\chroma.py",
    "type": "logger",
    "content_snippet": "import logging\r\nfrom typing import Any, Optional, Union\r\n\r\nfrom chromadb import Collection, QueryResult\r\nfrom langchain.docstore.document import Document\r\nfrom tqdm import tqdm\r\n\r\nfrom embedchain.conf..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\vectordb\\zilliz.py",
    "type": "logger",
    "content_snippet": "import logging\r\nfrom typing import Any, Optional, Union\r\n\r\nfrom embedchain.config import ZillizDBConfig\r\nfrom embedchain.helpers.json_serializable import register_deserializable\r\nfrom embedchain.vecto..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\embedchain\\vectordb\\opensearch.py",
    "type": "logger",
    "content_snippet": "import logging\r\nimport time\r\nfrom typing import Any, Optional, Union\r\n\r\nfrom tqdm import tqdm\r\n\r\ntry:\r\n    from opensearchpy import OpenSearch\r\n    from opensearchpy.helpers import bulk\r\nexcept Import..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\examples\\api_server\\api_server.py",
    "type": "logger",
    "content_snippet": "import logging\r\n\r\nfrom flask import Flask, jsonify, request\r\n\r\nfrom embedchain import App\r\n\r\napp = Flask(__name__)\r\n\r\n\r\nlogger = logging.getLogger(__name__)\r\n\r\n\r\n@app.route(\"/add\", methods=[\"POST\"])\r\n..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\examples\\nextjs\\nextjs_slack\\app.py",
    "type": "logger",
    "content_snippet": "import logging\r\nimport os\r\nimport re\r\n\r\nimport requests\r\nfrom dotenv import load_dotenv\r\nfrom slack_bolt import App as SlackApp\r\nfrom slack_bolt.adapter.socket_mode import SocketModeHandler\r\n\r\nload_do..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\examples\\nextjs\\nextjs_discord\\app.py",
    "type": "logger",
    "content_snippet": "import logging\r\nimport os\r\n\r\nimport discord\r\nimport dotenv\r\nimport requests\r\n\r\ndotenv.load_dotenv(\".env\")\r\n\r\nintents = discord.Intents.default()\r\nintents.message_content = True\r\nclient = discord.Clien..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\examples\\rest-api\\main.py",
    "type": "logger",
    "content_snippet": "import logging\r\nimport os\r\n\r\nimport aiofiles\r\nimport yaml\r\nfrom database import Base, SessionLocal, engine\r\nfrom fastapi import Depends, FastAPI, HTTPException, UploadFile\r\nfrom models import DefaultR..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\tests\\evaluation\\test_answer_relevancy_metric.py",
    "type": "metric",
    "content_snippet": "import numpy as np\r\nimport pytest\r\n\r\nfrom embedchain.config.evaluation.base import AnswerRelevanceConfig\r\nfrom embedchain.evaluation.metrics import AnswerRelevance\r\nfrom embedchain.utils.evaluation im..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\tests\\evaluation\\test_context_relevancy_metric.py",
    "type": "metric",
    "content_snippet": "import pytest\r\n\r\nfrom embedchain.config.evaluation.base import ContextRelevanceConfig\r\nfrom embedchain.evaluation.metrics import ContextRelevance\r\nfrom embedchain.utils.evaluation import EvalData, Eva..."
  },
  {
    "path": "mem0-analysis\\repo\\embedchain\\tests\\evaluation\\test_groundedness_metric.py",
    "type": "metric",
    "content_snippet": "import numpy as np\r\nimport pytest\r\n\r\nfrom embedchain.config.evaluation.base import GroundednessConfig\r\nfrom embedchain.evaluation.metrics import Groundedness\r\nfrom embedchain.utils.evaluation import E..."
  },
  {
    "path": "mem0-analysis\\repo\\mem0\\client\\main.py",
    "type": "logger",
    "content_snippet": "import hashlib\r\nimport logging\r\nimport os\r\nimport warnings\r\nfrom functools import wraps\r\nfrom typing import Any, Dict, List, Optional, Union\r\n\r\nimport httpx\r\nimport requests\r\n\r\nfrom mem0.memory.setup ..."
  },
  {
    "path": "mem0-analysis\\repo\\mem0\\proxy\\main.py",
    "type": "logger",
    "content_snippet": "import logging\r\nimport subprocess\r\nimport sys\r\nimport threading\r\nfrom typing import List, Optional, Union\r\n\r\nimport httpx\r\n\r\nimport mem0\r\n\r\ntry:\r\n    import litellm\r\nexcept ImportError:\r\n    user_inpu..."
  },
  {
    "path": "mem0-analysis\\repo\\mem0\\memory\\graph_memory.py",
    "type": "logger",
    "content_snippet": "import logging\r\n\r\nfrom mem0.memory.utils import format_entities\r\n\r\ntry:\r\n    from langchain_neo4j import Neo4jGraph\r\nexcept ImportError:\r\n    raise ImportError(\"langchain_neo4j is not installed. Pleas..."
  },
  {
    "path": "mem0-analysis\\repo\\mem0\\vector_stores\\elasticsearch.py",
    "type": "logger",
    "content_snippet": "import logging\r\nfrom typing import Any, Dict, List, Optional\r\n\r\ntry:\r\n    from elasticsearch import Elasticsearch\r\n    from elasticsearch.helpers import bulk\r\nexcept ImportError:\r\n    raise ImportErro..."
  },
  {
    "path": "mem0-analysis\\repo\\mem0\\vector_stores\\faiss.py",
    "type": "logger",
    "content_snippet": "import logging\r\nimport os\r\nimport pickle\r\nimport uuid\r\nfrom pathlib import Path\r\nfrom typing import Dict, List, Optional\r\n\r\nimport numpy as np\r\nfrom pydantic import BaseModel\r\n\r\ntry:\r\n    logging.getL..."
  },
  {
    "path": "mem0-analysis\\repo\\mem0\\vector_stores\\langchain.py",
    "type": "logger",
    "content_snippet": "import logging\r\nfrom typing import Dict, List, Optional\r\n\r\nfrom pydantic import BaseModel\r\n\r\ntry:\r\n    from langchain_community.vectorstores import VectorStore\r\nexcept ImportError:\r\n    raise ImportEr..."
  },
  {
    "path": "mem0-analysis\\repo\\mem0\\vector_stores\\milvus.py",
    "type": "logger",
    "content_snippet": "import logging\r\nfrom typing import Dict, Optional\r\n\r\nfrom pydantic import BaseModel\r\n\r\nfrom mem0.configs.vector_stores.milvus import MetricType\r\nfrom mem0.vector_stores.base import VectorStoreBase\r\n\r\n..."
  },
  {
    "path": "mem0-analysis\\repo\\mem0\\vector_stores\\opensearch.py",
    "type": "logger",
    "content_snippet": "import logging\r\nfrom typing import Any, Dict, List, Optional\r\n\r\ntry:\r\n    from opensearchpy import OpenSearch, RequestsHttpConnection\r\n    from opensearchpy.helpers import bulk\r\nexcept ImportError:\r\n ..."
  },
  {
    "path": "mem0-analysis\\repo\\mem0\\memory\\main.py",
    "type": "logger",
    "content_snippet": "import asyncio\r\nimport concurrent\r\nimport gc\r\nimport hashlib\r\nimport json\r\nimport logging\r\nimport os\r\nimport uuid\r\nimport warnings\r\nfrom copy import deepcopy\r\nfrom datetime import datetime\r\nfrom typin..."
  },
  {
    "path": "mem0-analysis\\repo\\mem0\\vector_stores\\qdrant.py",
    "type": "logger",
    "content_snippet": "import logging\r\nimport os\r\nimport shutil\r\n\r\nfrom qdrant_client import QdrantClient\r\nfrom qdrant_client.models import (\r\n    Distance,\r\n    FieldCondition,\r\n    Filter,\r\n    MatchValue,\r\n    PointIdsLi..."
  },
  {
    "path": "mem0-analysis\\repo\\mem0\\vector_stores\\pinecone.py",
    "type": "logger",
    "content_snippet": "import logging\r\nimport os\r\nfrom typing import Any, Dict, List, Optional, Union\r\n\r\nfrom pydantic import BaseModel\r\n\r\ntry:\r\n    from pinecone import Pinecone, PodSpec, ServerlessSpec\r\n    from pinecone...."
  },
  {
    "path": "mem0-analysis\\repo\\mem0\\vector_stores\\pgvector.py",
    "type": "logger",
    "content_snippet": "import json\r\nimport logging\r\nfrom typing import List, Optional\r\n\r\nfrom pydantic import BaseModel\r\n\r\ntry:\r\n    import psycopg2\r\n    from psycopg2.extras import execute_values\r\nexcept ImportError:\r\n    ..."
  },
  {
    "path": "mem0-analysis\\repo\\mem0\\vector_stores\\supabase.py",
    "type": "logger",
    "content_snippet": "import logging\r\nimport uuid\r\nfrom typing import List, Optional\r\n\r\nfrom pydantic import BaseModel\r\n\r\ntry:\r\n    import vecs\r\nexcept ImportError:\r\n    raise ImportError(\"The 'vecs' library is required. P..."
  },
  {
    "path": "mem0-analysis\\repo\\mem0\\vector_stores\\chroma.py",
    "type": "logger",
    "content_snippet": "import logging\r\nfrom typing import Dict, List, Optional\r\n\r\nfrom pydantic import BaseModel\r\n\r\ntry:\r\n    import chromadb\r\n    from chromadb.config import Settings\r\nexcept ImportError:\r\n    raise ImportE..."
  },
  {
    "path": "mem0-analysis\\repo\\mem0\\vector_stores\\upstash_vector.py",
    "type": "logger",
    "content_snippet": "import logging\r\nfrom typing import Dict, List, Optional\r\n\r\nfrom pydantic import BaseModel\r\n\r\nfrom mem0.vector_stores.base import VectorStoreBase\r\n\r\ntry:\r\n    from upstash_vector import Index\r\nexcept I..."
  },
  {
    "path": "mem0-analysis\\repo\\mem0\\vector_stores\\azure_ai_search.py",
    "type": "logger",
    "content_snippet": "import json\r\nimport logging\r\nimport re\r\nfrom typing import List, Optional\r\n\r\nfrom pydantic import BaseModel\r\n\r\nfrom mem0.vector_stores.base import VectorStoreBase\r\n\r\ntry:\r\n    from azure.core.credenti..."
  },
  {
    "path": "mem0-analysis\\repo\\mem0\\vector_stores\\vertex_ai_vector_search.py",
    "type": "logger",
    "content_snippet": "import logging\r\nimport traceback\r\nimport uuid\r\nfrom typing import Any, Dict, List, Optional, Tuple\r\n\r\nimport google.api_core.exceptions\r\nfrom google.cloud import aiplatform, aiplatform_v1\r\nfrom google..."
  },
  {
    "path": "mem0-analysis\\repo\\mem0\\vector_stores\\weaviate.py",
    "type": "logger",
    "content_snippet": "import logging\r\nimport uuid\r\nfrom typing import Dict, List, Mapping, Optional\r\n\r\nfrom pydantic import BaseModel\r\n\r\ntry:\r\n    import weaviate\r\nexcept ImportError:\r\n    raise ImportError(\r\n        \"The ..."
  },
  {
    "path": "mem0-analysis\\repo\\mem0\\memory\\memgraph_memory.py",
    "type": "logger",
    "content_snippet": "import logging\r\n\r\nfrom mem0.memory.utils import format_entities\r\n\r\ntry:\r\n    from langchain_memgraph import Memgraph\r\nexcept ImportError:\r\n    raise ImportError(\r\n        \"langchain_memgraph is not in..."
  },
  {
    "path": "mem0-analysis\\repo\\mem0\\vector_stores\\redis.py",
    "type": "logger",
    "content_snippet": "import json\r\nimport logging\r\nfrom datetime import datetime\r\nfrom functools import reduce\r\n\r\nimport numpy as np\r\nimport pytz\r\nimport redis\r\nfrom redis.commands.search.query import Query\r\nfrom redisvl.i..."
  },
  {
    "path": "mem0-analysis\\repo\\mem0-ts\\src\\oss\\src\\embeddings\\ollama.ts",
    "type": "logger",
    "content_snippet": "import { Ollama } from \"ollama\";\r\nimport { Embedder } from \"./base\";\r\nimport { EmbeddingConfig } from \"../types\";\r\nimport { logger } from \"../utils/logger\";\r\n\r\nexport class OllamaEmbedder implements E..."
  },
  {
    "path": "mem0-analysis\\repo\\mem0-ts\\src\\oss\\src\\llms\\ollama.ts",
    "type": "logger",
    "content_snippet": "import { Ollama } from \"ollama\";\r\nimport { LLM, LLMResponse } from \"./base\";\r\nimport { LLMConfig, Message } from \"../types\";\r\nimport { logger } from \"../utils/logger\";\r\n\r\nexport class OllamaLLM implem..."
  },
  {
    "path": "mem0-analysis\\repo\\mem0-ts\\src\\oss\\src\\memory\\graph_memory.ts",
    "type": "logger",
    "content_snippet": "import neo4j, { Driver } from \"neo4j-driver\";\r\nimport { BM25 } from \"../utils/bm25\";\r\nimport { GraphStoreConfig } from \"../graphs/configs\";\r\nimport { MemoryConfig } from \"../types\";\r\nimport { Embedder..."
  },
  {
    "path": "misc\\analyze_markdown_tasks.py",
    "type": "report",
    "content_snippet": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport os\nimport re\nimport sys\nimport json\nfrom collections import defaultdict\n\ndef extract_plan_version(filename):\n    \"\"\"Extraire le num√©ro de version..."
  },
  {
    "path": "misc\\extract_foundation_core_tasks.py",
    "type": "report",
    "content_snippet": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport os\nimport json\nimport sys\nfrom collections import defaultdict\n\ndef main():\n    # Charger le rapport JSON\n    try:\n        with open(\"markdown_task..."
  },
  {
    "path": "misc\\extract_foundation_tasks.py",
    "type": "report",
    "content_snippet": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport sys\nimport json\nimport requests\nfrom collections import defaultdict\n\ndef main():\n    # Configuration\n    qdrant_url = \"http://localhost:6333\"\n    ..."
  },
  {
    "path": "migration\\gateway-manager-v77\\references_projet_mcp_servers_gateway.txt",
    "type": "logger",
    "content_snippet": ".git\\config:18:[submodule \"projet/mcp/servers/gateway\"]\n.git\\index:1487:\ufffdk\")Q\ufffdﬁ≤\u0000%projet/mcp/schemas/memory_schema.json\u0000\u0000\u0000\u0000\u0000h\u003e\ufffd\u0004/\ufffd\ufffd h\u003e\ufffd\u0004/\ufffd,\ufffd\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\ufffd\ufffd\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\ufffdK\ufffd\ufffd\u0019+\u001ft~\f\ufffd\u0011\ufffd;\ufffd\ufffd\u0026\ufffd\ufffdb\ufffd\u0000%projet/mcp/sch..."
  },
  {
    "path": "migration\\gateway-manager-v77\\references_projet_mcp_servers_gateway.txt",
    "type": "report",
    "content_snippet": ".git\\config:18:[submodule \"projet/mcp/servers/gateway\"]\n.git\\index:1487:\ufffdk\")Q\ufffdﬁ≤\u0000%projet/mcp/schemas/memory_schema.json\u0000\u0000\u0000\u0000\u0000h\u003e\ufffd\u0004/\ufffd\ufffd h\u003e\ufffd\u0004/\ufffd,\ufffd\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\ufffd\ufffd\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\ufffdK\ufffd\ufffd\u0019+\u001ft~\f\ufffd\u0011\ufffd;\ufffd\ufffd\u0026\ufffd\ufffdb\ufffd\u0000%projet/mcp/sch..."
  },
  {
    "path": "misc\\check_vectorization.py",
    "type": "report",
    "content_snippet": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport os\nimport re\nimport json\nimport sys\nfrom datetime import datetime\nfrom qdrant_client import QdrantClient\n\ndef get_markdown_tasks(file_path):\n    \"..."
  },
  {
    "path": "migration\\gateway-manager-v77\\retrospective.md",
    "type": "report",
    "content_snippet": "# R√©trospective et Feedback - Migration Gateway-Manager v77\r\n\r\nCe document est d√©di√© √† la r√©trospective de la migration du Gateway-Manager vers Go natif, conform√©ment au plan v77. Il vise √† ide..."
  },
  {
    "path": "observability_inventory.md",
    "type": "report",
    "content_snippet": "Scanning for observability sources...\nFound observability sources:\n.build\\ci\\git-hooks\\Analyze-StagedFiles.ps1\n.build\\ci\\git-hooks\\Run-Tests.ps1\n.build\\ci\\git-hooks\\Test-PostCommitHook.ps1\n.build\\ci\\g..."
  },
  {
    "path": "observability_inventory.md",
    "type": "logger",
    "content_snippet": "Scanning for observability sources...\nFound observability sources:\n.build\\ci\\git-hooks\\Analyze-StagedFiles.ps1\n.build\\ci\\git-hooks\\Run-Tests.ps1\n.build\\ci\\git-hooks\\Test-PostCommitHook.ps1\n.build\\ci\\g..."
  },
  {
    "path": "observability_inventory.md",
    "type": "metric",
    "content_snippet": "Scanning for observability sources...\nFound observability sources:\n.build\\ci\\git-hooks\\Analyze-StagedFiles.ps1\n.build\\ci\\git-hooks\\Run-Tests.ps1\n.build\\ci\\git-hooks\\Test-PostCommitHook.ps1\n.build\\ci\\g..."
  },
  {
    "path": "output\\phase1\\error-handling-patterns.md",
    "type": "logger",
    "content_snippet": "# Gestion des Erreurs - Analyse des Patterns\r\n\r\n**Date de scan**: 2025-06-18 20:45:22  \r\n**Branche**: dev  \r\n**Fichiers managers scann√©s**: 86  \r\n**Patterns d'erreur trouv√©s**: 6753  \r\n**Cat√©gories..."
  },
  {
    "path": "output\\phase1\\communication-points.json",
    "type": "logger",
    "content_snippet": "{\r\n  \"categories\": {\r\n    \"redis_pubsub\": {\r\n      \"files\": 17,\r\n      \"count\": 155,\r\n      \"patterns\": 6\r\n    },\r\n    \"grpc_calls\": {\r\n      \"files\": 2,\r\n      \"count\": 4,\r\n      \"patterns\": 4\r\n    }..."
  },
  {
    "path": "output\\phase1\\constructors-analysis.json",
    "type": "logger",
    "content_snippet": "{\r\n  \"branch\": \"dev\",\r\n  \"constructors_found\": 255,\r\n  \"constructors\": [\r\n    {\r\n      \"is_exported\": true,\r\n      \"line_number\": 13,\r\n      \"package\": \"unknown\",\r\n      \"file\": \"manager.go\",\r\n      \"..."
  },
  {
    "path": "migration\\gateway-manager-v77\\references_mcp-gateway.txt",
    "type": "report",
    "content_snippet": ".git\\config:19:\turl = https://github.com/mcp-ecosystem/mcp-gateway.git\n.git\\index:949:\ufffd0\ufffd\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\ufffd\ufffd\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000f\ufffd\u001e\u0017\t\ufffdnX\u0019\u003c\ufffd\ufffd[\ufffd73\ufffdd\ufffd\ufffdIU\u00003development/scripts/setup/mcp/setup-mcp-gateway.ps1\u0000\u0000\u0000\u0000\u0000\u0000\u0000h\u003e\ufffd\ufffd\n.g..."
  },
  {
    "path": "migration\\gateway-manager-v77\\references_mcp-gateway.txt",
    "type": "logger",
    "content_snippet": ".git\\config:19:\turl = https://github.com/mcp-ecosystem/mcp-gateway.git\n.git\\index:949:\ufffd0\ufffd\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\ufffd\ufffd\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000f\ufffd\u001e\u0017\t\ufffdnX\u0019\u003c\ufffd\ufffd[\ufffd73\ufffdd\ufffd\ufffdIU\u00003development/scripts/setup/mcp/setup-mcp-gateway.ps1\u0000\u0000\u0000\u0000\u0000\u0000\u0000h\u003e\ufffd\ufffd\n.g..."
  },
  {
    "path": "output\\phase1\\constructors-patterns.md",
    "type": "logger",
    "content_snippet": "# Patterns Constructeurs - Analyse Compl√®te\r\n\r\n**Date de scan**: 2025-06-18 20:33:25  \r\n**Branche**: dev  \r\n**Fichiers scann√©s**: 761  \r\n**Patterns recherch√©s**: 7  \r\n**Constructeurs trouv√©s**: 25..."
  },
  {
    "path": "plan_dev_resolution_conflits.md",
    "type": "report",
    "content_snippet": "# Plan de R√©solution des Conflits de Fusion - `migration/gateway-manager-v77` vers `dev`\r\n\r\n## Introduction\r\nCe document d√©taille les conflits de fusion d√©tect√©s lors de la tentative de fusion de ..."
  },
  {
    "path": "output\\phase1\\communication-points.yaml",
    "type": "logger",
    "content_snippet": "# Points de Communication - Analyse Syst√®me\r\nscan_info:\r\n  timestamp: 2025-06-18 20:43:49\r\n  branch: dev\r\n  files_scanned: 761\r\n  total_points: 1893\r\n\r\ncategories:\r\n  redis_pubsub:\r\n    count: 155\r\n ..."
  },
  {
    "path": "output\\phase1\\communication-points.md",
    "type": "logger",
    "content_snippet": "# Points de Communication - Analyse Syst√®me\r\n\r\n**Date de scan**: 2025-06-18 20:43:49  \r\n**Branche**: dev  \r\n**Fichiers scann√©s**: 761  \r\n**Points trouv√©s**: 1893\r\n\r\n## üìä Vue d'Ensemble par Cat√©..."
  },
  {
    "path": "planning-ecosystem-sync\\cmd\\validate-vectors\\main.go",
    "type": "logger",
    "content_snippet": "// Package main implements the vector validation CLI tool\n// Phase 3.2.1.1: Cr√©er planning-ecosystem-sync/cmd/validate-vectors/main.go\npackage main\n\nimport (\n\t\"context\"\n\t\"encoding/json\"\n\t\"flag\"\n\t\"fmt..."
  },
  {
    "path": "planning-ecosystem-sync\\cmd\\validate-vectors\\main.go",
    "type": "report",
    "content_snippet": "// Package main implements the vector validation CLI tool\n// Phase 3.2.1.1: Cr√©er planning-ecosystem-sync/cmd/validate-vectors/main.go\npackage main\n\nimport (\n\t\"context\"\n\t\"encoding/json\"\n\t\"flag\"\n\t\"fmt..."
  },
  {
    "path": "output\\phase1\\error-handling-patterns.json",
    "type": "logger",
    "content_snippet": "{\r\n  \"categories\": {\r\n    \"error_returns\": {\r\n      \"files\": 52,\r\n      \"count\": 2770,\r\n      \"patterns\": 4,\r\n      \"medium_severity\": 2657,\r\n      \"high_severity\": 0,\r\n      \"low_severity\": 113\r\n    ..."
  },
  {
    "path": "output\\phase1\\error-handling-patterns.json",
    "type": "report",
    "content_snippet": "{\r\n  \"categories\": {\r\n    \"error_returns\": {\r\n      \"files\": 52,\r\n      \"count\": 2770,\r\n      \"patterns\": 4,\r\n      \"medium_severity\": 2657,\r\n      \"high_severity\": 0,\r\n      \"low_severity\": 113\r\n    ..."
  },
  {
    "path": "planning-ecosystem-sync\\cmd\\vectorize\\main.go",
    "type": "logger",
    "content_snippet": "// Package main implements the vectorization CLI tool\r\n// Phase 3.1.2.1: Cr√©er planning-ecosystem-sync/cmd/vectorize/main.go\r\npackage main\r\n\r\nimport (\r\n\t\"bufio\"\r\n\t\"context\"\r\n\t\"encoding/json\"\r\n\t\"flag\"..."
  },
  {
    "path": "planning-ecosystem-sync\\cmd\\verify-quality\\main.go",
    "type": "logger",
    "content_snippet": "// Package main implements the vector quality verification CLI tool\n// Phase 3.2.2.1: Cr√©er planning-ecosystem-sync/cmd/verify-quality/main.go\npackage main\n\nimport (\n\t\"context\"\n\t\"encoding/json\"\n\t\"fla..."
  },
  {
    "path": "planning-ecosystem-sync\\cmd\\verify-quality\\main.go",
    "type": "report",
    "content_snippet": "// Package main implements the vector quality verification CLI tool\n// Phase 3.2.2.1: Cr√©er planning-ecosystem-sync/cmd/verify-quality/main.go\npackage main\n\nimport (\n\t\"context\"\n\t\"encoding/json\"\n\t\"fla..."
  },
  {
    "path": "planning-ecosystem-sync\\pkg\\qdrant\\client.go",
    "type": "logger",
    "content_snippet": "// Package qdrant provides a unified Qdrant client implementation\n// This is part of Phase 2 of plan-dev-v56: Unification des Clients Qdrant\npackage qdrant\n\nimport (\n\t\"bytes\"\n\t\"context\"\n\t\"encoding/jso..."
  },
  {
    "path": "planning-ecosystem-sync\\tools\\sync-core\\conflict_resolver.go",
    "type": "logger",
    "content_snippet": "package sync_core\r\n\r\nimport (\r\n\t\"encoding/json\"\r\n\t\"fmt\"\r\n\t\"log\"\r\n\t\"os\"\r\n\t\"path/filepath\"\r\n\t\"strings\"\r\n\t\"time\"\r\n)\r\n\r\n// ConflictResolver handles resolution of conflicts between Markdown and dynamic sys..."
  },
  {
    "path": "planning-ecosystem-sync\\tools\\sync-core\\orchestrator.go",
    "type": "logger",
    "content_snippet": "package sync_core\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"log\"\r\n\t\"time\"\r\n)\r\n\r\n// SyncOrchestrator coordinates the conversion and storage of plans\r\ntype SyncOrchestrator struct {\r\n\tparser       *MarkdownParser\r\n\tsynchr..."
  },
  {
    "path": "planning-ecosystem-sync\\tools\\sync-core\\conversion.go",
    "type": "logger",
    "content_snippet": "package sync_core\r\n\r\nimport (\r\n\t\"crypto/sha256\"\r\n\t\"encoding/hex\"\r\n\t\"encoding/json\"\r\n\t\"fmt\"\r\n\t\"log\"\r\n\t\"strings\"\r\n\t\"time\"\r\n)\r\n\r\n// DynamicPlan represents a plan in the dynamic system format\r\ntype Dynami..."
  },
  {
    "path": "planning-ecosystem-sync\\tools\\sync-core\\plan_synchronizer.go",
    "type": "logger",
    "content_snippet": "package sync_core\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"log\"\r\n\t\"os\"\r\n\t\"path/filepath\"\r\n\t\"sort\"\r\n\t\"strings\"\r\n\t\"time\"\r\n)\r\n\r\n// PlanSynchronizer handles synchronization from dynamic system to Markdown\r\ntype PlanSynchro..."
  },
  {
    "path": "planning-ecosystem-sync\\tools\\sync-core\\qdrant.go",
    "type": "logger",
    "content_snippet": "package sync_core\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"fmt\"\r\n\t\"time\"\r\n\r\n\t\"go.uber.org/zap\"\r\n)\r\n\r\n// QdrantInterface defines the unified interface for all Qdrant operations\r\n// Implementation of Phase 2.1.1.1: C..."
  },
  {
    "path": "planning-ecosystem-sync\\tools\\sync-core\\qdrant_legacy.go",
    "type": "logger",
    "content_snippet": "package sync_core\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"fmt\"\r\n\t\"time\"\r\n\r\n\t\"github.com/gerivdb/email-sender-1/planning-ecosystem-sync/pkg/qdrant\"\r\n\t\"go.uber.org/zap\"\r\n)\r\n\r\n// QdrantInterface defines the unified i..."
  },
  {
    "path": "planning-ecosystem-sync\\tools\\sync-core\\sql_storage.go",
    "type": "logger",
    "content_snippet": "package sync_core\r\n\r\nimport (\r\n\t\"database/sql\"\r\n\t\"encoding/json\"\r\n\t\"fmt\"\r\n\t\"log\"\r\n\t\"time\"\r\n\r\n\t_ \"github.com/go-sql-driver/mysql\" // MySQL driver\r\n\t_ \"github.com/lib/pq\"              // PostgreSQL driv..."
  },
  {
    "path": "planning-ecosystem-sync\\tools\\roadmap-connector\\api_analyzer.go",
    "type": "logger",
    "content_snippet": "package roadmapconnector\n\nimport (\n\t\"context\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"io\"\n\t\"net/http\"\n\t\"strings\"\n\t\"time\"\n)\n\n// APIAnalyzer analyzes existing Roadmap Manager API\ntype APIAnalyzer struct {\n\tbaseURL   ..."
  },
  {
    "path": "planning-ecosystem-sync\\tools\\roadmap-connector\\auth_security.go",
    "type": "logger",
    "content_snippet": "package roadmapconnector\n\nimport (\n\t\"context\"\n\t\"crypto/tls\"\n\t\"encoding/base64\"\n\t\"fmt\"\n\t\"net/http\"\n\t\"os\"\n\t\"strings\"\n\t\"time\"\n)\n\n// AuthenticationManager handles authentication with the Roadmap Manager\nt..."
  },
  {
    "path": "planning-ecosystem-sync\\tools\\roadmap-connector\\roadmap_manager_connector.go",
    "type": "logger",
    "content_snippet": "// filepath: d:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\planning-ecosystem-sync\\tools\\roadmap-connector\\roadmap_manager_connector.go\npackage roadmapconnector\n\nimport (\n\t\"bytes\"\n\t\"context\"\n\t\"encoding/j..."
  },
  {
    "path": "planning-ecosystem-sync\\tools\\sync-core\\conflict_detector.go",
    "type": "logger",
    "content_snippet": "package core\n\nimport (\n\t\"crypto/sha256\"\n\t\"encoding/hex\"\n\t\"fmt\"\n\t\"log\"\n\t\"os\"\n\t\"strings\"\n\t\"time\"\n)\n\n// ConflictDetector handles detection of conflicts between Markdown and dynamic system\ntype ConflictDe..."
  },
  {
    "path": "planning-ecosystem-sync\\tools\\sync-core\\test_qdrant_unified.go",
    "type": "logger",
    "content_snippet": "package sync_core\n\nimport (\n\t\"log\"\n\n\t\"go.uber.org/zap\"\n)\n\nfunc main() {\n\tlogger, _ := zap.NewDevelopment()\n\tdefer logger.Sync()\n\n\t// Test creating a sync client\n\tclient, err := NewSyncClient(\"http://l..."
  },
  {
    "path": "planning-ecosystem-sync\\tools\\validation\\cmd\\validator\\main.go",
    "type": "logger",
    "content_snippet": "package main\n\nimport (\n\t\"context\"\n\t\"flag\"\n\t\"fmt\"\n\t\"log\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"strings\"\n\n\t\"planning-ecosystem-sync/tools/validation\"\n)\n\n// formatRuleAdapter adapts FormatConsistencyRule to implement..."
  },
  {
    "path": "planning-ecosystem-sync\\pkg\\vectorization\\engine.go",
    "type": "logger",
    "content_snippet": "// Package vectorization provides a unified vectorization engine\n// Implementation of Phase 3.1.1: Cr√©ation du Package Vectorization\npackage vectorization\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"sync\"\n\t\"time\"\n..."
  },
  {
    "path": "plans_impactes_jan.md",
    "type": "report",
    "content_snippet": "D:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\projet\\roadmaps\\plans\\consolidated\\inventory-report.md\r\nD:\\DO\\WEB\\N8N_tests\\PROJETS\\EMAIL_SENDER_1\\projet\\roadmaps\\plans\\consolidated\\inventory.json\r\nD:\\DO\\W..."
  },
  {
    "path": "plans_impactes_jan_cleaned.md",
    "type": "report",
    "content_snippet": "projet/roadmaps/plans/consolidated/inventory-report.md\nprojet/roadmaps/plans/consolidated/inventory.json\nprojet/roadmaps/plans/consolidated/plan-dev-v100-harmonisation-IA-locale-avec-Jan-et-memoire.md..."
  },
  {
    "path": "projet\\architecture\\PredictiveCache.md",
    "type": "report",
    "content_snippet": "# Module de cache pr√©dictif\r\n\r\n## Vue d'ensemble\r\n\r\nLe module `PredictiveCache` fournit un syst√®me de cache intelligent qui pr√©dit les prochains acc√®s en fonction des mod√®les d'utilisation pass√©..."
  },
  {
    "path": "planning-ecosystem-sync\\tools\\workflow-orchestrator\\workflow_orchestrator.go",
    "type": "logger",
    "content_snippet": "package workflow\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"encoding/json\"\r\n\t\"fmt\"\r\n\t\"io/fs\"\r\n\t\"log\"\r\n\t\"os\"\r\n\t\"os/exec\"\r\n\t\"path/filepath\"\r\n\t\"strings\"\r\n\t\"sync\"\r\n\t\"time\"\r\n)\r\n\r\n// WorkflowOrchestrator manages the unifie..."
  },
  {
    "path": "projet\\config\\conformity\\conformity-rules.yaml",
    "type": "report",
    "content_snippet": "# EMAIL_SENDER_1 - Conformity Rules Configuration\r\n# Phase 2.2.2 - Centralized Configuration for ConformityManager\r\n# This file defines the comprehensive conformity verification rules and thresholds\r\n..."
  },
  {
    "path": "projet\\cred\\dependency_manager.go",
    "type": "logger",
    "content_snippet": "package cred\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"encoding/json\"\r\n\t\"flag\"\r\n\t\"fmt\"\r\n\t\"os\"\r\n\t\"os/exec\"\r\n\t\"path/filepath\"\r\n\t\"strings\"\r\n\t\"time\"\r\n\r\n\t\"github.com/google/uuid\"\r\n\t\"go.uber.org/zap\"\r\n\t\"golang.org/x/mod/m..."
  },
  {
    "path": "projet\\documentation\\technical\\TestFrameworkComponents\\AnalysisReportingComponent.md",
    "type": "report",
    "content_snippet": "# Composant d'analyse et de reporting\r\n\r\n## 1. Identification du composant\r\n\r\n**Nom**: AnalysisReportingComponent  \r\n**Type**: Composant principal du framework de test  \r\n**Responsabilit√©**: Analyse ..."
  },
  {
    "path": "projet\\documentation\\technical\\TestFrameworkStructures\\MemoryMetrics\\FileSystemCache\\BinningStrategies\\VarianceErrorThresholds.md",
    "type": "metric",
    "content_snippet": "# Seuils d'acceptabilit√© pour les erreurs de variance\r\n\r\n## 1. Introduction\r\n\r\nCe document d√©finit les seuils d'acceptabilit√© pour les erreurs de variance dans les histogrammes de latence. Ces seui..."
  },
  {
    "path": "projet\\documentation\\technical\\TestFrameworkStructures\\TestConfigurationStructure.md",
    "type": "report",
    "content_snippet": "# Structure de configuration des tests\r\n\r\n## 1. Vue d'ensemble\r\n\r\nLa structure de configuration des tests d√©finit le format et le contenu des configurations utilis√©es pour param√©trer l'ex√©cution d..."
  },
  {
    "path": "projet\\guides\\methodologies\\mode_debug.md",
    "type": "report",
    "content_snippet": "# Mode DEBUG\r\n\r\n## Description\r\n\r\nLe mode DEBUG est un mode op√©rationnel con√ßu pour faciliter la d√©tection, l'analyse et la correction des bugs dans le code. Il fournit des outils avanc√©s pour ana..."
  },
  {
    "path": "projet\\guides\\usage-scenarios.md",
    "type": "report",
    "content_snippet": "# Sc√©narios d'utilisation courants du module RoadmapParser\r\n\r\nCe guide pr√©sente les sc√©narios d'utilisation les plus courants du module RoadmapParser, avec des exemples de code et des explications ..."
  },
  {
    "path": "projet\\mcp\\docs\\guides\\maintenance.md",
    "type": "report",
    "content_snippet": "# Guide de maintenance MCP\r\n\r\nCe guide explique comment maintenir et g√©rer les serveurs MCP (Model Context Protocol) dans le projet EMAIL_SENDER_1.\r\n\r\n## Surveillance des serveurs\r\n\r\n### V√©rificatio..."
  },
  {
    "path": "projet\\mcp\\docs\\guides\\quick-start.md",
    "type": "report",
    "content_snippet": "# Guide de d√©marrage rapide MCP\r\n\r\nCe guide vous aidera √† d√©marrer rapidement avec la nouvelle structure MCP (Model Context Protocol) dans le projet EMAIL_SENDER_1.\r\n\r\n## Pr√©requis\r\n\r\n- PowerShell..."
  },
  {
    "path": "projet\\mcp\\docs\\guides\\troubleshooting.md",
    "type": "report",
    "content_snippet": "# Guide de d√©pannage MCP\r\n\r\nCe guide vous aidera √† r√©soudre les probl√®mes courants rencontr√©s avec les serveurs MCP (Model Context Protocol) dans le projet EMAIL_SENDER_1.\r\n\r\n## Diagnostic g√©n√©..."
  },
  {
    "path": "projet\\roadmaps\\analysis\\index.md",
    "type": "report",
    "content_snippet": "# Analysis\r\n\r\nCette section contient la documentation relative √† Analysis.\r\n\r\n## Contenu\r\n\r\n\r\n### Fichiers\r\n\r\n- [Conventions Report](./conventions-report.md)\r\n- [Progress Report](./progress-report.md..."
  },
  {
    "path": "projet\\roadmaps\\analysis\\roadmap-test.md",
    "type": "report",
    "content_snippet": "## ## ## ## ## ## ## ## ## ## # Roadmap EMAIL_SENDER_1\r\n\r\n\r\n# Granularisation des Phases d'Am√©lioration du Workflow de Roadmap\r\n\r\n## Squelette Initial des 5 Phases\r\n\r\n### Phase 1: Automatisation de l..."
  },
  {
    "path": "projet\\roadmaps\\archive\\roadmap_completed.md",
    "type": "report",
    "content_snippet": "# Roadmap Compl√©t√©e - EMAIL_SENDER_1\r\n\r\nCe fichier contient les t√¢ches compl√©t√©es de la roadmap.\r\nG√©n√©r√© le 2025-05-02 18:02:39\r\n\r\n## T√¢ches compl√©t√©es\r\n\r\n- [x] **1.1.1** Renommer `developm..."
  },
  {
    "path": "projet\\roadmaps\\journal\\journal_de_bord_test.md",
    "type": "report",
    "content_snippet": "# Journal de d√É¬©veloppement\r\n\r\nCe journal contient les entr√É¬©es de d√É¬©veloppement enrichies automatiquement par le hook post-commit.\r\n\r\n\r\n## 08-10 - Commit: 17f6fb42fa8f0355cd9052c43b41e6947f283..."
  },
  {
    "path": "projet\\roadmaps\\journal\\reports\\index.md",
    "type": "report",
    "content_snippet": "# Reports\r\n\r\nCette section contient la documentation relative √† Reports.\r\n\r\n## Contenu\r\n\r\n\r\n### Fichiers\r\n\r\n- [Roadmap Analysis](./roadmap_analysis.json)\r\n- [Roadmap Analysis](./roadmap_analysis.md)\r..."
  },
  {
    "path": "projet\\roadmaps\\plans\\audits\\audit-rapport-v43d-phase-1-1.md",
    "type": "logger",
    "content_snippet": "# Rapport d'Audit Architectural et de Code - Phase 1.1\r\n\r\n*Gestionnaire de D√©pendances v43d - Date: 2025-06-05*\r\n\r\n## R√©sum√© Ex√©cutif\r\n\r\nL'audit complet du gestionnaire de d√©pendances existant (`..."
  },
  {
    "path": "projet\\roadmaps\\plans\\audits\\audit-rapport-v43d-phase-1-2.md",
    "type": "logger",
    "content_snippet": "# Audit de la Journalisation - Rapport Phase 1.2\r\n\r\n## Plan-dev-v43d-dependency-manager\r\n\r\n**Date :** 5 juin 2025  \r\n**Version :** 1.0  \r\n**Auditeur :** IA Assistant  \r\n**Phase :** 1.2 Audit de la Jou..."
  },
  {
    "path": "projet\\roadmaps\\plans\\audits\\audit-rapport-v43d-phase-1-3.md",
    "type": "logger",
    "content_snippet": "# Rapport d'Audit Phase 1.3 - Gestion des Erreurs DependencyManager\r\n\r\n**Date**: 2025-06-05  \r\n**Version**: 1.0  \r\n**Auditeur**: System Analysis  \r\n**R√©f√©rence**: ConfigManager ErrorManager Integrat..."
  },
  {
    "path": "projet\\roadmaps\\plans\\completed\\plan-dev-v101-coherence-plans.md",
    "type": "report",
    "content_snippet": "## üß™ Roadmap granularis√©e ‚Äì Renforcement des tests et validation avanc√©e\n\n### 1. Tests de robustesse et de non-r√©gression\n- [x] Ajouter des tests de non-r√©gression pour chaque fonctionnalit√©..."
  },
  {
    "path": "projet\\roadmaps\\plans\\completed\\plan-dev-v104-mise-en-place.md",
    "type": "report",
    "content_snippet": "# Plan de D√©veloppement v104 ‚Äì Gouvernance Dynamique et Centralis√©e des Plans Dev (Mise en place)\r\n\r\n---\r\n\r\n## 1. Introduction et objectifs\r\n\r\nCe plan vise √† la mise en place d'une gouvernance un..."
  },
  {
    "path": "projet\\roadmaps\\plans\\completed\\plan-dev-v73-refactorig-remise-a-plat-archi-go.md",
    "type": "report",
    "content_snippet": "---\r\ntitle: \"Plan de D√©veloppement v73 ‚Äî Refactoring \u0026 Remise √† Plat Architecturale Go\"\r\nversion: \"v73.0\"\r\ndate: \"2025-06-29\"\r\nauthor: \"Cline\"\r\npriority: \"CRITICAL\"\r\nstatus: \"EN_COURS\"\r\nintegratio..."
  },
  {
    "path": "projet\\roadmaps\\plans\\completed\\plan-dev-v73-dep-manager.md",
    "type": "report",
    "content_snippet": "---\r\ntitle: \"Plan de D√©veloppement v73 : D√©pendency-Manager Unifi√© \u0026 Gouvernance Monorepo\"\r\nversion: \"v73.0\"\r\ndate: \"2025-06-30\"\r\nauthor: \"√âquipe D√©veloppement L√©gendaire + Copilot\"\r\npriority: \"..."
  },
  {
    "path": "projet\\roadmaps\\plans\\completed\\plan-dev-v74-logging-centralise.md",
    "type": "report",
    "content_snippet": "---\r\ntitle: \"Plan de D√©veloppement v74 : Logging Centralis√©, CacheManager \u0026 LMCache (Phases 3 √† 8 granularis√©es, .clinerules)\"\r\nversion: \"v74.5\"\r\ndate: \"2025-06-30\"\r\nauthor: \"√âquipe D√©veloppemen..."
  },
  {
    "path": "projet\\roadmaps\\plans\\completed\\plan-dev-v99a-harmonisation-plans-dev.md",
    "type": "report",
    "content_snippet": "# Plan de D√©veloppement v99a ‚Äì Harmonisation et Migration des Plans Dev\r\n\r\n...\r\n\r\n## 7. Bonnes pratiques\r\n\r\n- **Automatisation**¬†: Utiliser syst√©matiquement les scripts Go (`plan-harmonizer`, `pl..."
  },
  {
    "path": "projet\\roadmaps\\plans\\completed\\plan-dev-v99b-template-manager.md",
    "type": "report",
    "content_snippet": "# üèóÔ∏è Roadmap Actionnable et Automatisable ‚Äì Template Manager Go (v99b am√©lior√©)\r\n\r\n## 1. Recensement initial\r\n- [x] G√©n√©rer la structure de base du template-manager Go (`cmd/manager-recense..."
  },
  {
    "path": "projet\\roadmaps\\plans\\completed\\plan_ameliorations_read_file.md",
    "type": "report",
    "content_snippet": "# Plan de D√©veloppement : Am√©liorations de la lecture de fichiers volumineux (`read_file`)\r\n## üö® CONSIGNES CRITIQUES DE V√âRIFICATION\r\n\r\n### Avant CHAQUE √©tape\r\n\r\n- [ ] **V√âRIFIER la branche ac..."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\FAQ.md",
    "type": "report",
    "content_snippet": "# FAQ ‚Äì Plan v104 Gouvernance Dynamique\r\n\r\n## Comment suivre l‚Äôavancement des t√¢ches et plans¬†?\r\n- Utilisez les cases √† cocher dans `plan-dev-v104-instaurant.md`, `tasks.md`, `task_dependencies..."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\PULL_REQUEST_TEMPLATE.md",
    "type": "report",
    "content_snippet": "# Template de Pull Request ‚Äì Plan v104\r\n\r\n## Description\r\n\r\nD√©crivez bri√®vement la contribution, la migration ou l‚Äô√©volution propos√©e.\r\n\r\n## Checklist de conformit√©\r\n\r\n- [ ] Les champs obliga..."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\GUIDE.md",
    "type": "report",
    "content_snippet": "# GUIDE RAPIDE ‚Äì Impl√©mentation et Suivi du Plan v104\r\n\r\n## 1. D√©marrage\r\n\r\n- Lire le plan directeur [`plan-dev-v104-instaurant.md`](plan-dev-v104-instaurant.md:1)\r\n- Prendre connaissance de la pr..."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\README.md",
    "type": "report",
    "content_snippet": "# README ‚Äì Gouvernance et Suivi Op√©rationnel (Plan v104)\r\n\r\n## 1. Pr√©sentation\r\n\r\nCe dossier centralise tous les artefacts du plan v104¬†: inventaire, table harmonis√©e, t√¢ches, d√©pendances, aff..."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\logging_cache_pipeline_spec.md",
    "type": "report",
    "content_snippet": "# Sp√©cification technique d√©taill√©e ‚Äî Pipeline Logging \u0026 CacheManager v74\r\n\r\n## 1. Architecture cible\r\n\r\n- CacheManager (Go)‚ÄØ: point d‚Äôentr√©e unique pour logs/contextes\r\n- Adapters‚ÄØ: LMCac..."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\inventory-report.md",
    "type": "metric",
    "content_snippet": "# Rapport d‚Äôinventaire\r\n\r\n_G√©n√©r√© le 2025-07-07T03:14:29+02:00_\r\n\r\n- `.avg-exclude-exe-marker`\r\n- `.avg-exclude-marker`\r\n- `.build\\README.md`\r\n- `.build\\archive\\PredictiveModel_20250420.zip`\r\n- `..."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\inventory-report.md",
    "type": "report",
    "content_snippet": "# Rapport d‚Äôinventaire\r\n\r\n_G√©n√©r√© le 2025-07-07T03:14:29+02:00_\r\n\r\n- `.avg-exclude-exe-marker`\r\n- `.avg-exclude-marker`\r\n- `.build\\README.md`\r\n- `.build\\archive\\PredictiveModel_20250420.zip`\r\n- `..."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\inventory-report.md",
    "type": "logger",
    "content_snippet": "# Rapport d‚Äôinventaire\r\n\r\n_G√©n√©r√© le 2025-07-07T03:14:29+02:00_\r\n\r\n- `.avg-exclude-exe-marker`\r\n- `.avg-exclude-marker`\r\n- `.build\\README.md`\r\n- `.build\\archive\\PredictiveModel_20250420.zip`\r\n- `..."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\plan-dev-v33-mcp-manager.md",
    "type": "report",
    "content_snippet": "# Plan de D√©veloppement v43k - Gateway Manager\r\n\r\n*Version 1.0 - 2025-06-04 - Progression globale : 0%*\r\n\r\nCe plan d√©taille l'impl√©mentation du MCPManager pour le projet EMAIL_SENDER_1, charg√© de ..."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\plan-dev-v3.md",
    "type": "report",
    "content_snippet": "## ## ## ## ## ## ## ## ## ## # Roadmap EMAIL_SENDER_1\r\n\r\n\r\n# Granularisation des Phases d'Am√©lioration du Workflow de Roadmap\r\n\r\n## Squelette Initial des 5 Phases\r\n\r\n### Phase 1: Automatisation de l..."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\plan-dev-v42-error-manager.md",
    "type": "logger",
    "content_snippet": "# Plan de d√©veloppement v42 - Gestionnaire d'erreurs avanc√©\r\n\r\n*Version 1.1 - 2025-06-05 - Progression globale : 58%* de d√©veloppement v42 - Gestionnaire d'erreurs avanc√©\r\n*Version 1.0 - 2025-06-0..."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\plan-dev-v42-error-manager.md",
    "type": "report",
    "content_snippet": "# Plan de d√©veloppement v42 - Gestionnaire d'erreurs avanc√©\r\n\r\n*Version 1.1 - 2025-06-05 - Progression globale : 58%* de d√©veloppement v42 - Gestionnaire d'erreurs avanc√©\r\n*Version 1.0 - 2025-06-0..."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\plan-dev-v42-error-manager copy.md",
    "type": "logger",
    "content_snippet": "# Plan de d√©veloppement v42 - Gestionnaire d'erreurs avanc√©\r\n\r\n*Version 1.0 - 2025-06-04 - Progression globale : 43%*Plan de d√©veloppement v42 - Gestionnaire d‚Äôerreurs avanc√©\r\n*Version 1.0 - 202..."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\plan-dev-v41-precautions-organize-root.md",
    "type": "report",
    "content_snippet": "# Plan de d√©veloppement v41 - Pr√©cautions et S√©curisation Organize-Root\r\n\r\n*Version 1.0 - 2025-06-03 - Progression globale : 0%*\r\n\r\nCe plan de d√©veloppement d√©taille l'impl√©mentation d'un syst√®..."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\plan-dev-v43d-dependency-manager.md",
    "type": "logger",
    "content_snippet": "# Plan de d√©veloppement v43d - Audit et Harmonisation du Gestionnaire de D√©pendances\r\n\r\n*Version 1.6 - 2025-06-05 - Progression globale : 75%*\r\n\r\nCe plan de d√©veloppement d√©taille l'audit, l'harmo..."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\plan-dev-v43k-DuplicateManager.md",
    "type": "report",
    "content_snippet": "Plan de D√©veloppement v43h - DuplicateManager\r\nVersion 1.0 - 2025-06-04 - Progression globale : 0%\r\nCe plan d√©taille l'impl√©mentation du DuplicateManager pour le projet EMAIL_SENDER_1, charg√© de d..."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\plan-dev-v47-goroutines-tasks.md",
    "type": "logger",
    "content_snippet": "# Plan de d√©veloppement v44 - Optimisation des Goroutines et T√¢ches PowerShell pour EMAIL_SENDER_1\r\n\r\n*Version 1.0 - 2025-06-05 - Progression globale : 0%*\r\n\r\nCe plan de d√©veloppement d√©taille l'i..."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\plan-dev-v52-framework-branching-ultra-avance-8-niveaux.md",
    "type": "report",
    "content_snippet": "# Plan de d√©veloppement v52 - Framework de Branching Ultra-Avanc√© 8 Niveaux\r\n*Version 1.0 - 2025-01-27 - Progression globale : 0%*\r\n\r\nCe plan d√©taille l'impl√©mentation d'un framework ultra-avanc√©..."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\plan-dev-v49-integration-new-tools-Toolkit.md",
    "type": "report",
    "content_snippet": "# Plan de d√©veloppement v49 - Int√©gration des nouveaux outils dans Manager Toolkit v3.0.0\r\n\r\n**Version 3.0 (R√©organisation Structurelle Achev√©e) - 6 juin 2025 - Progression globale : 100%**\r\n\r\nCe ..."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\plan-dev-v61-memory.md",
    "type": "logger",
    "content_snippet": "# Plan-Dev v6.1 : Int√©gration AST Cline dans ContextualMemoryManager\r\n\r\n## üéØ **VISION - M√âMOIRE CONTEXTUELLE INTELLIGENTE AVEC ANALYSE AST**\r\n\r\n## üö® CONSIGNES CRITIQUES DE V√âRIFICATION\r\n\r\n###..."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\plan-dev-v63-jan-cline-copilot.md",
    "type": "report",
    "content_snippet": "ce paInt√©grer **Jan** (\u003chttps://github.com/menloresearch/jan\u003e) dans ton workflow avec **GitHub Copilot**, **Cline**, **GEMINI-CLI** et **Opencode-CLI** dans Visual Studio Code (VS Code) est une strat..."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\plan-dev-v64-correlation-avec-manager-go-existant.md",
    "type": "logger",
    "content_snippet": "# Plan de D√©veloppement v64 - Impl√©mentation Approche Hybride\r\n\r\n## üö® CONSIGNES CRITIQUES DE V√âRIFICATION\r\n\r\n### Avant CHAQUE √©tape\r\n\r\n- [ ] **V√âRIFIER la branche actuelle** : `git branch` et ..."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\plan-dev-v64-correlation-avec-manager-go-existant.md",
    "type": "report",
    "content_snippet": "# Plan de D√©veloppement v64 - Impl√©mentation Approche Hybride\r\n\r\n## üö® CONSIGNES CRITIQUES DE V√âRIFICATION\r\n\r\n### Avant CHAQUE √©tape\r\n\r\n- [ ] **V√âRIFIER la branche actuelle** : `git branch` et ..."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\plan-dev-v55-planning-ecosystem-sync.md",
    "type": "report",
    "content_snippet": "# Plan de d√©veloppement v55 - √âcosyst√®me de Synchronisation des Plans de D√©veloppement\r\n\r\n**Version 2.6 - 2025-06-13 - Progression globale : 100% ‚úÖ PROJET FINALIS√â**\r\n\r\nüéØ **PROJET INT√âGRALE..."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\plan-dev-v55-planning-ecosystem-sync.md",
    "type": "logger",
    "content_snippet": "# Plan de d√©veloppement v55 - √âcosyst√®me de Synchronisation des Plans de D√©veloppement\r\n\r\n**Version 2.6 - 2025-06-13 - Progression globale : 100% ‚úÖ PROJET FINALIS√â**\r\n\r\nüéØ **PROJET INT√âGRALE..."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\plan-dev-v67-diff-edit.md",
    "type": "report",
    "content_snippet": "# Plan de D√©veloppement v67 - Int√©gration de la m√©thode diff Edit (Cline)\r\n\r\n---\r\n\r\n## Roadmap Granularis√©e \u0026 Actionnable (Standards avanc√©s .clinerules/)\r\n\r\n### 1. Analyse et Sp√©cifications\r\n\r\n..."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\plan-dev-v66-doc-manager-dynamique.md",
    "type": "report",
    "content_snippet": "---\r\ntitle: \"Plan de D√©veloppement v66 : Doc-Manager-Dynamique - Architecture Cognitive Documentaire\"\r\nversion: \"v66.0\"\r\ndate: \"2025-01-27\"\r\nauthor: \"√âquipe D√©veloppement L√©gendaire\"\r\npriority: \"C..."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\plan-dev-v68-immutables-manager.md",
    "type": "report",
    "content_snippet": "---\r\ntitle: \"Plan de D√©veloppement v68 : Immutables Manager \u0026 Synchronisation Interbranch Universelle\"\r\nversion: \"v68.0\"\r\ndate: \"2025-06-23\"\r\nauthor: \"√âquipe D√©veloppement L√©gendaire + Copilot\"\r\np..."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\plan-dev-v76-error-reporting.md",
    "type": "report",
    "content_snippet": "# plan-dev-v77-error-reporting.md\r\n\r\n---\r\n\r\n## üö® CONSIGNES CRITIQUES DE V√âRIFICATION\r\n\r\n### Avant CHAQUE √©tape\r\n\r\n- [ ] **V√âRIFIER la branche actuelle** : `git branch` et `git status`\r\n- [ ] **V..."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\plan-dev-v78-ecosystem-managers-readme.md",
    "type": "report",
    "content_snippet": "# plan-dev-v78-ecosystem-managers-readme.md\r\n\r\n## üö® CONSIGNES CRITIQUES DE V√âRIFICATION\r\n\r\n### Avant CHAQUE √©tape\r\n\r\n- [ ] **V√âRIFIER la branche actuelle** : `git branch` et `git status`\r\n- [ ] ..."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\plan-dev-v77-migration-gateway-manager.md",
    "type": "report",
    "content_snippet": "Voici une granularisation avanc√©e de la migration Gateway-Manager en roadmap exhaustive, actionable, automatisable et test√©e, align√©e sur les standards .clinerules/ et la stack Go natif de @gerivdb..."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\plan-dev-v81-no-duplication-standards.md",
    "type": "report",
    "content_snippet": "# plan-dev-v81-no-duplication-standards.md\r\n\r\n## üö® CONSIGNES CRITIQUES DE V√âRIFICATION\r\n\r\n### Avant CHAQUE √©tape\r\n\r\n- [ ] **V√âRIFIER la branche actuelle** : `git branch` et `git status`\r\n- [ ] *..."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\plan-dev-v82-roadmap-source-of-truth.md",
    "type": "report",
    "content_snippet": "# plan-dev-v82-roadmap-source-of-truth.md\r\n\r\n## üö® CONSIGNES CRITIQUES DE V√âRIFICATION\r\n\r\n### Avant CHAQUE √©tape\r\n\r\n- [ ] **V√âRIFIER la branche actuelle** : `git branch` et `git status`\r\n- [ ] **..."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\plan-dev-v83-cross-doc-traceability.md",
    "type": "report",
    "content_snippet": "# plan-dev-v83-cross-doc-traceability.md\r\n\r\n## üö® CONSIGNES CRITIQUES DE V√âRIFICATION\r\n\r\n### Avant CHAQUE √©tape\r\n\r\n- [ ] **V√âRIFIER la branche actuelle** : `git branch` et `git status`\r\n- [ ] **V..."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\plan-dev-v75-centralisation-dyna-ecosystem-managers.md",
    "type": "report",
    "content_snippet": "Voici la **roadmap granul√©e et exhaustive** selon ta m√©thode, align√©e avec l'√©cosyst√®me d'outils du d√©p√¥t (Go, scripts, etc.), et maximisant l‚Äôautomatisation, la tra√ßabilit√© et la robustess..."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\plan-dev-v90-obserbability-unified-reporting.md",
    "type": "logger",
    "content_snippet": "Voici le plan de d√©veloppement d√©taill√© pour **Observabilit√© \u0026 Reporting Unifi√©**, align√© sur ta stack Go native, avec granularit√©, automatisation, documentation, CI/CD et robustesse maximales...."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\plan-dev-v90-obserbability-unified-reporting.md",
    "type": "metric",
    "content_snippet": "Voici le plan de d√©veloppement d√©taill√© pour **Observabilit√© \u0026 Reporting Unifi√©**, align√© sur ta stack Go native, avec granularit√©, automatisation, documentation, CI/CD et robustesse maximales...."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\plan-dev-v90-obserbability-unified-reporting.md",
    "type": "report",
    "content_snippet": "Voici le plan de d√©veloppement d√©taill√© pour **Observabilit√© \u0026 Reporting Unifi√©**, align√© sur ta stack Go native, avec granularit√©, automatisation, documentation, CI/CD et robustesse maximales...."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\plan-dev-v93-MetaOrchestrateur-EventBus.md",
    "type": "report",
    "content_snippet": "Voici la structure harmonis√©e du plan suivant, dans l‚Äôordre des roadmaps avanc√©es du projet‚ÄØ:  \n**Meta-Orchestrateur \u0026 Event Bus**\n\n---\n\n# Plan de D√©veloppement : Meta-Orchestrateur \u0026 Event Bus..."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\plan_reporter_spec.md",
    "type": "report",
    "content_snippet": "# Sp√©cification ‚Äì Scripts d‚ÄôAutomatisation, Reporting et Tra√ßabilit√©\r\n\r\n## 1. Objectif\r\n\r\nPermettre le suivi, l‚Äôaudit et la validation continue des plans via des scripts Go automatis√©s.\r\n\r\n#..."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\plan-dev-v80-cross-review-audit.md",
    "type": "report",
    "content_snippet": "# plan-dev-v80-cross-review-audit.md\r\n\r\n## üö® CONSIGNES CRITIQUES DE V√âRIFICATION\r\n\r\n### Avant CHAQUE √©tape\r\n\r\n- [ ] **V√âRIFIER la branche actuelle** : `git branch` et `git status`\r\n- [ ] **V√âRI..."
  },
  {
    "path": "projet\\roadmaps\\plans\\phase-2\\phase-2-2-error-manager-integration-COMPLETE.md",
    "type": "logger",
    "content_snippet": "# Phase 2.2 - Int√©gration ErrorManager TERMIN√âE\r\n\r\n*Date: 2025-01-27 - Progression: 0% ‚Üí 100%* ‚úÖ\r\n\r\n## ‚úÖ R√âSUM√â DE L'IMPL√âMENTATION COMPL√àTE\r\n\r\n**OBJECTIF ATTEINT** : Adaptation compl√®te ..."
  },
  {
    "path": "projet\\roadmaps\\plans\\transition\\phase3-transi-restructur√©.md",
    "type": "metric",
    "content_snippet": "# Plan de D√©veloppement D√©taill√© - Phase 3 : Int√©gration avec le Plan Magistral V5\r\n\r\nCe document pr√©sente le plan d√©taill√© pour la Phase 3 du plan de transition, qui pr√©pare le workflow √† l'..."
  },
  {
    "path": "projet\\roadmaps\\plans\\transition\\phase3-transi-restructur√©.md",
    "type": "report",
    "content_snippet": "# Plan de D√©veloppement D√©taill√© - Phase 3 : Int√©gration avec le Plan Magistral V5\r\n\r\nCe document pr√©sente le plan d√©taill√© pour la Phase 3 du plan de transition, qui pr√©pare le workflow √† l'..."
  },
  {
    "path": "projet\\roadmaps\\plans\\transition\\phase3-transi.md",
    "type": "metric",
    "content_snippet": "# Plan de D√©veloppement D√©taill√© \\- Phase 3 : Int√©gration avec le Plan Magistral V5\r\n\r\nJe vais analyser en d√©tail la Phase 3 du plan de transition et d√©velopper un plan d'impl√©mentation exhaust..."
  },
  {
    "path": "projet\\roadmaps\\plans\\transition\\phase3-transi.md",
    "type": "report",
    "content_snippet": "# Plan de D√©veloppement D√©taill√© \\- Phase 3 : Int√©gration avec le Plan Magistral V5\r\n\r\nJe vais analyser en d√©tail la Phase 3 du plan de transition et d√©velopper un plan d'impl√©mentation exhaust..."
  },
  {
    "path": "projet\\roadmaps\\plans\\versions\\phase3-transi-restructured.md",
    "type": "metric",
    "content_snippet": "# Plan de D√©veloppement D√©taill√© - Phase 3 : Int√©gration avec le Plan Magistral V5\r\n\r\n## Table des mati√®res\r\n\r\n1. [Plan de D√©veloppement D√©taill√© - Phase 3 : Int√©gration avec le Plan Magistra..."
  },
  {
    "path": "projet\\roadmaps\\plans\\versions\\phase3-transi-restructured.md",
    "type": "report",
    "content_snippet": "# Plan de D√©veloppement D√©taill√© - Phase 3 : Int√©gration avec le Plan Magistral V5\r\n\r\n## Table des mati√®res\r\n\r\n1. [Plan de D√©veloppement D√©taill√© - Phase 3 : Int√©gration avec le Plan Magistra..."
  },
  {
    "path": "projet\\roadmaps\\scripts-open-source.md",
    "type": "logger",
    "content_snippet": "# Analyse de la roadmap et proposition de scripts Python open-source\r\n\r\n## Objectif\r\n\r\nAnalyser la roadmap EMAIL_SENDER_1 pour identifier les fonctionnalit√©s cl√©s et proposer des scripts Python open..."
  },
  {
    "path": "projet\\roadmaps\\roadmap_complete_converted.md",
    "type": "report",
    "content_snippet": "## ## ## ## ## ## ## ## ## ## # Roadmap EMAIL_SENDER_1\r\n\r\n\r\n## Granularisation D√É¬©taill√É¬©e\r\n\r\n### Phase 1: R√É¬©organisation et standardisation des gestionnaires existants\r\n\r\n#### 1.1 Renommer les..."
  },
  {
    "path": "projet\\roadmaps\\utils\\convert-v12.js",
    "type": "report",
    "content_snippet": "/**\r\n * Convert v12 Architecture Cognitive Roadmap\r\n * \r\n * This script converts the plan-dev-v12-architecture-cognitive.md file\r\n * to JSON format and validates its structure.\r\n */\r\n\r\nconst fs = requ..."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\inventory.json",
    "type": "metric",
    "content_snippet": "[\".avg-exclude-exe-marker\",\".avg-exclude-marker\",\".build\\\\README.md\",\".build\\\\archive\\\\PredictiveModel_20250420.zip\",\".build\\\\archive\\\\old\\\\EMAIL_SENDER_1 (1).json\",\".build\\\\archive\\\\old\\\\EMAIL_SENDER..."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\inventory.json",
    "type": "report",
    "content_snippet": "[\".avg-exclude-exe-marker\",\".avg-exclude-marker\",\".build\\\\README.md\",\".build\\\\archive\\\\PredictiveModel_20250420.zip\",\".build\\\\archive\\\\old\\\\EMAIL_SENDER_1 (1).json\",\".build\\\\archive\\\\old\\\\EMAIL_SENDER..."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\inventory.json",
    "type": "logger",
    "content_snippet": "[\".avg-exclude-exe-marker\",\".avg-exclude-marker\",\".build\\\\README.md\",\".build\\\\archive\\\\PredictiveModel_20250420.zip\",\".build\\\\archive\\\\old\\\\EMAIL_SENDER_1 (1).json\",\".build\\\\archive\\\\old\\\\EMAIL_SENDER..."
  },
  {
    "path": "projet\\roadmaps\\visualization\\coverage\\coverage-summary.json",
    "type": "report",
    "content_snippet": "{\"total\": {\"lines\":{\"total\":2124,\"covered\":714,\"skipped\":0,\"pct\":33.61},\"statements\":{\"total\":2176,\"covered\":730,\"skipped\":0,\"pct\":33.54},\"functions\":{\"total\":414,\"covered\":150,\"skipped\":0,\"pct\":36.23..."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\roadmap_complete_2.md",
    "type": "report",
    "content_snippet": "## ## ## ## ## ## ## ## ## ## # Roadmap EMAIL_SENDER_1\r\n\r\n\r\n# Granularisation des Phases d'Am√©lioration du Workflow de Roadmap\r\n\r\n## Squelette Initial des 5 Phases\r\n\r\n### Phase 1: Automatisation de l..."
  },
  {
    "path": "projet\\roadmaps\\plans\\consolidated\\tasks.md",
    "type": "report",
    "content_snippet": "# Table des T√¢ches ‚Äì Suivi Granulaire\r\n\r\n| id_task | id_plan | niveau | parent | enfants | phase | section | t√¢che | sous-t√¢che | managers | statut | priorit√© | mvp | m√©thode | fichiers_entr√©e..."
  },
  {
    "path": "projet\\roadmaps\\visualization\\package.json",
    "type": "report",
    "content_snippet": "{\r\n  \"name\": \"metro-map-visualization\",\r\n  \"version\": \"1.0.0\",\r\n  \"description\": \"Moteur de rendu avec layout automatique pour la visualisation en carte de m√©tro\",\r\n  \"main\": \"index.js\",\r\n  \"type\": \"..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\build_env.py",
    "type": "logger",
    "content_snippet": "\"\"\"Build Environment used for isolation during sdist building\r\n\"\"\"\r\n\r\nimport logging\r\nimport os\r\nimport pathlib\r\nimport site\r\nimport sys\r\nimport textwrap\r\nfrom collections import OrderedDict\r\nfrom typ..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\cache.py",
    "type": "logger",
    "content_snippet": "\"\"\"Cache Management\r\n\"\"\"\r\n\r\nimport hashlib\r\nimport json\r\nimport logging\r\nimport os\r\nfrom pathlib import Path\r\nfrom typing import Any, Dict, List, Optional\r\n\r\nfrom pip._vendor.packaging.tags import Tag..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\cli\\parser.py",
    "type": "logger",
    "content_snippet": "\"\"\"Base option parser setup\"\"\"\r\n\r\nimport logging\r\nimport optparse\r\nimport shutil\r\nimport sys\r\nimport textwrap\r\nfrom contextlib import suppress\r\nfrom typing import Any, Dict, Generator, List, Optional,..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\cli\\spinners.py",
    "type": "logger",
    "content_snippet": "import contextlib\r\nimport itertools\r\nimport logging\r\nimport sys\r\nimport time\r\nfrom typing import IO, Generator, Optional\r\n\r\nfrom pip._internal.utils.compat import WINDOWS\r\nfrom pip._internal.utils.log..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\cli\\req_command.py",
    "type": "logger",
    "content_snippet": "\"\"\"Contains the RequirementCommand base class.\r\n\r\nThis class is in a separate module so the commands that do not always\r\nneed PackageFinder capability don't unnecessarily import the\r\nPackageFinder mac..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\commands\\configuration.py",
    "type": "logger",
    "content_snippet": "import logging\r\nimport os\r\nimport subprocess\r\nfrom optparse import Values\r\nfrom typing import Any, List, Optional\r\n\r\nfrom pip._internal.cli.base_command import Command\r\nfrom pip._internal.cli.status_c..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\commands\\debug.py",
    "type": "logger",
    "content_snippet": "import locale\r\nimport logging\r\nimport os\r\nimport sys\r\nfrom optparse import Values\r\nfrom types import ModuleType\r\nfrom typing import Any, Dict, List, Optional\r\n\r\nimport pip._vendor\r\nfrom pip._vendor.ce..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\cli\\index_command.py",
    "type": "logger",
    "content_snippet": "\"\"\"\r\nContains command classes which may interact with an index / the network.\r\n\r\nUnlike its sister module, req_command, this module still uses lazy imports\r\nso commands which don't always hit the netw..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\commands\\index.py",
    "type": "logger",
    "content_snippet": "import logging\r\nfrom optparse import Values\r\nfrom typing import Any, Iterable, List, Optional\r\n\r\nfrom pip._vendor.packaging.version import Version\r\n\r\nfrom pip._internal.cli import cmdoptions\r\nfrom pip..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\commands\\install.py",
    "type": "logger",
    "content_snippet": "import errno\r\nimport json\r\nimport operator\r\nimport os\r\nimport shutil\r\nimport site\r\nfrom optparse import SUPPRESS_HELP, Values\r\nfrom typing import List, Optional\r\n\r\nfrom pip._vendor.packaging.utils imp..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\commands\\install.py",
    "type": "report",
    "content_snippet": "import errno\r\nimport json\r\nimport operator\r\nimport os\r\nimport shutil\r\nimport site\r\nfrom optparse import SUPPRESS_HELP, Values\r\nfrom typing import List, Optional\r\n\r\nfrom pip._vendor.packaging.utils imp..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\commands\\show.py",
    "type": "logger",
    "content_snippet": "import logging\r\nfrom optparse import Values\r\nfrom typing import Generator, Iterable, Iterator, List, NamedTuple, Optional\r\n\r\nfrom pip._vendor.packaging.requirements import InvalidRequirement\r\nfrom pip..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\commands\\uninstall.py",
    "type": "logger",
    "content_snippet": "import logging\r\nfrom optparse import Values\r\nfrom typing import List\r\n\r\nfrom pip._vendor.packaging.utils import canonicalize_name\r\n\r\nfrom pip._internal.cli import cmdoptions\r\nfrom pip._internal.cli.ba..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\commands\\wheel.py",
    "type": "logger",
    "content_snippet": "import logging\r\nimport os\r\nimport shutil\r\nfrom optparse import Values\r\nfrom typing import List\r\n\r\nfrom pip._internal.cache import WheelCache\r\nfrom pip._internal.cli import cmdoptions\r\nfrom pip._intern..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\commands\\cache.py",
    "type": "logger",
    "content_snippet": "import os\r\nimport textwrap\r\nfrom optparse import Values\r\nfrom typing import Any, List\r\n\r\nfrom pip._internal.cli.base_command import Command\r\nfrom pip._internal.cli.status_codes import ERROR, SUCCESS\r\n..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\cli\\main.py",
    "type": "logger",
    "content_snippet": "\"\"\"Primary application entrypoint.\r\n\"\"\"\r\n\r\nimport locale\r\nimport logging\r\nimport os\r\nimport sys\r\nimport warnings\r\nfrom typing import List, Optional\r\n\r\nfrom pip._internal.cli.autocompletion import auto..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\configuration.py",
    "type": "logger",
    "content_snippet": "\"\"\"Configuration management setup\r\n\r\nSome terminology:\r\n- name\r\n  As written in config files.\r\n- value\r\n  Value associated with a name\r\n- key\r\n  Name combined with it's section (section.name)\r\n- varia..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\index\\sources.py",
    "type": "logger",
    "content_snippet": "import logging\r\nimport mimetypes\r\nimport os\r\nfrom collections import defaultdict\r\nfrom typing import Callable, Dict, Iterable, List, Optional, Tuple\r\n\r\nfrom pip._vendor.packaging.utils import (\r\n    I..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\locations\\__init__.py",
    "type": "logger",
    "content_snippet": "import functools\r\nimport logging\r\nimport os\r\nimport pathlib\r\nimport sys\r\nimport sysconfig\r\nfrom typing import Any, Dict, Generator, Optional, Tuple\r\n\r\nfrom pip._internal.models.scheme import SCHEME_KE..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\locations\\_distutils.py",
    "type": "logger",
    "content_snippet": "\"\"\"Locations where we look for configs, install stuff, etc\"\"\"\r\n\r\n# The following comment should be removed at some point in the future.\r\n# mypy: strict-optional=False\r\n\r\n# If pip's going to use distut..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\metadata\\base.py",
    "type": "logger",
    "content_snippet": "import csv\r\nimport email.message\r\nimport functools\r\nimport json\r\nimport logging\r\nimport pathlib\r\nimport re\r\nimport zipfile\r\nfrom typing import (\r\n    IO,\r\n    Any,\r\n    Collection,\r\n    Container,\r\n  ..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\metadata\\importlib\\_envs.py",
    "type": "logger",
    "content_snippet": "import functools\r\nimport importlib.metadata\r\nimport logging\r\nimport os\r\nimport pathlib\r\nimport sys\r\nimport zipfile\r\nimport zipimport\r\nfrom typing import Iterator, List, Optional, Sequence, Set, Tuple\r..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\index\\package_finder.py",
    "type": "logger",
    "content_snippet": "\"\"\"Routines related to PyPI, indexes\"\"\"\r\n\r\nimport enum\r\nimport functools\r\nimport itertools\r\nimport logging\r\nimport re\r\nfrom dataclasses import dataclass\r\nfrom typing import TYPE_CHECKING, FrozenSet, I..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\cli\\base_command.py",
    "type": "logger",
    "content_snippet": "\"\"\"Base Command class, and related routines\"\"\"\r\n\r\nimport logging\r\nimport logging.config\r\nimport optparse\r\nimport os\r\nimport sys\r\nimport traceback\r\nfrom optparse import Values\r\nfrom typing import List,..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\metadata\\pkg_resources.py",
    "type": "logger",
    "content_snippet": "import email.message\r\nimport email.parser\r\nimport logging\r\nimport os\r\nimport zipfile\r\nfrom typing import (\r\n    Collection,\r\n    Iterable,\r\n    Iterator,\r\n    List,\r\n    Mapping,\r\n    NamedTuple,\r\n   ..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\distributions\\sdist.py",
    "type": "logger",
    "content_snippet": "import logging\r\nfrom typing import TYPE_CHECKING, Iterable, Optional, Set, Tuple\r\n\r\nfrom pip._internal.build_env import BuildEnvironment\r\nfrom pip._internal.distributions.base import AbstractDistribut..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\index\\collector.py",
    "type": "logger",
    "content_snippet": "\"\"\"\r\nThe main purpose of this module is to expose LinkCollector.collect_sources().\r\n\"\"\"\r\n\r\nimport collections\r\nimport email.message\r\nimport functools\r\nimport itertools\r\nimport json\r\nimport logging\r\nim..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\exceptions.py",
    "type": "logger",
    "content_snippet": "\"\"\"Exceptions used throughout package.\r\n\r\nThis module MUST NOT try to import from anything within `pip._internal` to\r\noperate. This is expected to be importable from any/all files within the\r\nsubpacka..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\models\\link.py",
    "type": "logger",
    "content_snippet": "import functools\r\nimport itertools\r\nimport logging\r\nimport os\r\nimport posixpath\r\nimport re\r\nimport urllib.parse\r\nfrom dataclasses import dataclass\r\nfrom typing import (\r\n    TYPE_CHECKING,\r\n    Any,\r\n..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\models\\search_scope.py",
    "type": "logger",
    "content_snippet": "import itertools\r\nimport logging\r\nimport os\r\nimport posixpath\r\nimport urllib.parse\r\nfrom dataclasses import dataclass\r\nfrom typing import List\r\n\r\nfrom pip._vendor.packaging.utils import canonicalize_n..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\network\\auth.py",
    "type": "logger",
    "content_snippet": "\"\"\"Network Authentication Helpers\r\n\r\nContains interface (MultiDomainBasicAuth) and associated glue code for\r\nproviding credentials in the context of network requests.\r\n\"\"\"\r\n\r\nimport logging\r\nimport os..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\network\\download.py",
    "type": "logger",
    "content_snippet": "\"\"\"Download files with progress indicators.\r\n\"\"\"\r\n\r\nimport email.message\r\nimport logging\r\nimport mimetypes\r\nimport os\r\nfrom typing import Iterable, Optional, Tuple\r\n\r\nfrom pip._vendor.requests.models ..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\network\\xmlrpc.py",
    "type": "logger",
    "content_snippet": "\"\"\"xmlrpclib.Transport implementation\r\n\"\"\"\r\n\r\nimport logging\r\nimport urllib.parse\r\nimport xmlrpc.client\r\nfrom typing import TYPE_CHECKING, Tuple\r\n\r\nfrom pip._internal.exceptions import NetworkConnecti..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\network\\session.py",
    "type": "logger",
    "content_snippet": "\"\"\"PipSession and supporting code, containing all pip-specific\r\nnetwork request configuration and behavior.\r\n\"\"\"\r\n\r\nimport email.utils\r\nimport functools\r\nimport io\r\nimport ipaddress\r\nimport json\r\nimpo..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\operations\\check.py",
    "type": "logger",
    "content_snippet": "\"\"\"Validation of dependencies of packages\r\n\"\"\"\r\n\r\nimport logging\r\nfrom contextlib import suppress\r\nfrom email.parser import Parser\r\nfrom functools import reduce\r\nfrom typing import (\r\n    Callable,\r\n ..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\operations\\freeze.py",
    "type": "logger",
    "content_snippet": "import collections\r\nimport logging\r\nimport os\r\nfrom typing import Container, Dict, Generator, Iterable, List, NamedTuple, Optional, Set\r\n\r\nfrom pip._vendor.packaging.utils import canonicalize_name\r\nfr..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\operations\\install\\wheel.py",
    "type": "logger",
    "content_snippet": "\"\"\"Support for installing and building the \"wheel\" binary package format.\r\n\"\"\"\r\n\r\nimport collections\r\nimport compileall\r\nimport contextlib\r\nimport csv\r\nimport importlib\r\nimport logging\r\nimport os.path..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\operations\\prepare.py",
    "type": "logger",
    "content_snippet": "\"\"\"Prepares a distribution for installation\r\n\"\"\"\r\n\r\n# The following comment should be removed at some point in the future.\r\n# mypy: strict-optional=False\r\n\r\nimport mimetypes\r\nimport os\r\nimport shutil\r..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\req\\constructors.py",
    "type": "logger",
    "content_snippet": "\"\"\"Backing implementation for InstallRequirement's various constructors\r\n\r\nThe idea here is that these formed a major chunk of InstallRequirement's size\r\nso, moving them and support code dedicated to ..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\operations\\install\\editable_legacy.py",
    "type": "logger",
    "content_snippet": "\"\"\"Legacy editable installation process, i.e. `setup.py develop`.\r\n\"\"\"\r\n\r\nimport logging\r\nfrom typing import Optional, Sequence\r\n\r\nfrom pip._internal.build_env import BuildEnvironment\r\nfrom pip._inter..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\req\\req_install.py",
    "type": "logger",
    "content_snippet": "import functools\r\nimport logging\r\nimport os\r\nimport shutil\r\nimport sys\r\nimport uuid\r\nimport zipfile\r\nfrom optparse import Values\r\nfrom pathlib import Path\r\nfrom typing import Any, Collection, Dict, It..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\req\\req_uninstall.py",
    "type": "logger",
    "content_snippet": "import functools\r\nimport os\r\nimport sys\r\nimport sysconfig\r\nfrom importlib.util import cache_from_source\r\nfrom typing import Any, Callable, Dict, Generator, Iterable, List, Optional, Set, Tuple\r\n\r\nfrom..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\req\\req_file.py",
    "type": "logger",
    "content_snippet": "\"\"\"\r\nRequirements file parsing\r\n\"\"\"\r\n\r\nimport logging\r\nimport optparse\r\nimport os\r\nimport re\r\nimport shlex\r\nimport urllib.parse\r\nfrom optparse import Values\r\nfrom typing import (\r\n    TYPE_CHECKING,\r\n..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\legacy\\resolver.py",
    "type": "logger",
    "content_snippet": "\"\"\"Dependency Resolution\r\n\r\nThe dependency resolution in pip is performed as follows:\r\n\r\nfor top-level requirements:\r\n    a. only one spec allowed per project, regardless of conflicts or not.\r\n       ..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\reporter.py",
    "type": "logger",
    "content_snippet": "from collections import defaultdict\r\nfrom logging import getLogger\r\nfrom typing import Any, DefaultDict\r\n\r\nfrom pip._vendor.resolvelib.reporters import BaseReporter\r\n\r\nfrom .base import Candidate, Req..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\resolver.py",
    "type": "logger",
    "content_snippet": "import contextlib\r\nimport functools\r\nimport logging\r\nimport os\r\nfrom typing import TYPE_CHECKING, Dict, List, Optional, Set, Tuple, cast\r\n\r\nfrom pip._vendor.packaging.utils import canonicalize_name\r\nf..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\candidates.py",
    "type": "logger",
    "content_snippet": "import logging\r\nimport sys\r\nfrom typing import TYPE_CHECKING, Any, FrozenSet, Iterable, Optional, Tuple, Union, cast\r\n\r\nfrom pip._vendor.packaging.requirements import InvalidRequirement\r\nfrom pip._ven..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\found_candidates.py",
    "type": "logger",
    "content_snippet": "\"\"\"Utilities to lazily create and visit candidates found.\r\n\r\nCreating and visiting a candidate is a *very* costly operation. It involves\r\nfetching, extracting, potentially building modules from source..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\factory.py",
    "type": "logger",
    "content_snippet": "import contextlib\r\nimport functools\r\nimport logging\r\nfrom typing import (\r\n    TYPE_CHECKING,\r\n    Callable,\r\n    Dict,\r\n    FrozenSet,\r\n    Iterable,\r\n    Iterator,\r\n    List,\r\n    Mapping,\r\n    Name..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\factory.py",
    "type": "report",
    "content_snippet": "import contextlib\r\nimport functools\r\nimport logging\r\nfrom typing import (\r\n    TYPE_CHECKING,\r\n    Callable,\r\n    Dict,\r\n    FrozenSet,\r\n    Iterable,\r\n    Iterator,\r\n    List,\r\n    Mapping,\r\n    Name..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\utils\\deprecation.py",
    "type": "logger",
    "content_snippet": "\"\"\"\r\nA module that implements tooling to enable easy warnings about deprecations.\r\n\"\"\"\r\n\r\nimport logging\r\nimport warnings\r\nfrom typing import Any, Optional, TextIO, Type, Union\r\n\r\nfrom pip._vendor.pac..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\req\\__init__.py",
    "type": "logger",
    "content_snippet": "import collections\r\nimport logging\r\nfrom dataclasses import dataclass\r\nfrom typing import Generator, List, Optional, Sequence, Tuple\r\n\r\nfrom pip._internal.utils.logging import indent_log\r\n\r\nfrom .req_..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\utils\\logging.py",
    "type": "logger",
    "content_snippet": "import contextlib\r\nimport errno\r\nimport logging\r\nimport logging.handlers\r\nimport os\r\nimport sys\r\nimport threading\r\nfrom dataclasses import dataclass\r\nfrom io import TextIOWrapper\r\nfrom logging import ..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\utils\\subprocess.py",
    "type": "logger",
    "content_snippet": "import logging\r\nimport os\r\nimport shlex\r\nimport subprocess\r\nfrom typing import Any, Callable, Iterable, List, Literal, Mapping, Optional, Union\r\n\r\nfrom pip._vendor.rich.markup import escape\r\n\r\nfrom pi..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\self_outdated_check.py",
    "type": "logger",
    "content_snippet": "import datetime\r\nimport functools\r\nimport hashlib\r\nimport json\r\nimport logging\r\nimport optparse\r\nimport os.path\r\nimport sys\r\nfrom dataclasses import dataclass\r\nfrom typing import Any, Callable, Dict, ..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\utils\\misc.py",
    "type": "logger",
    "content_snippet": "import errno\r\nimport getpass\r\nimport hashlib\r\nimport logging\r\nimport os\r\nimport posixpath\r\nimport shutil\r\nimport stat\r\nimport sys\r\nimport sysconfig\r\nimport urllib.parse\r\nfrom dataclasses import datacl..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\utils\\unpacking.py",
    "type": "logger",
    "content_snippet": "\"\"\"Utilities related archives.\r\n\"\"\"\r\n\r\nimport logging\r\nimport os\r\nimport shutil\r\nimport stat\r\nimport sys\r\nimport tarfile\r\nimport zipfile\r\nfrom typing import Iterable, List, Optional\r\nfrom zipfile impo..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\utils\\virtualenv.py",
    "type": "logger",
    "content_snippet": "import logging\r\nimport os\r\nimport re\r\nimport site\r\nimport sys\r\nfrom typing import List, Optional\r\n\r\nlogger = logging.getLogger(__name__)\r\n_INCLUDE_SYSTEM_SITE_PACKAGES_REGEX = re.compile(\r\n    r\"inclu..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\utils\\_log.py",
    "type": "logger",
    "content_snippet": "\"\"\"Customize logging\r\n\r\nDefines custom logger class for the `logger.verbose(...)` method.\r\n\r\ninit_logging() must be called before any other modules that call logging.getLogger.\r\n\"\"\"\r\n\r\nimport logging\r..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\utils\\temp_dir.py",
    "type": "logger",
    "content_snippet": "import errno\r\nimport itertools\r\nimport logging\r\nimport os.path\r\nimport tempfile\r\nimport traceback\r\nfrom contextlib import ExitStack, contextmanager\r\nfrom pathlib import Path\r\nfrom typing import (\r\n   ..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\utils\\wheel.py",
    "type": "logger",
    "content_snippet": "\"\"\"Support functions for working with wheel files.\r\n\"\"\"\r\n\r\nimport logging\r\nfrom email.message import Message\r\nfrom email.parser import Parser\r\nfrom typing import Tuple\r\nfrom zipfile import BadZipFile,..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\vcs\\bazaar.py",
    "type": "logger",
    "content_snippet": "import logging\r\nfrom typing import List, Optional, Tuple\r\n\r\nfrom pip._internal.utils.misc import HiddenText, display_path\r\nfrom pip._internal.utils.subprocess import make_command\r\nfrom pip._internal.u..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\vcs\\mercurial.py",
    "type": "logger",
    "content_snippet": "import configparser\r\nimport logging\r\nimport os\r\nfrom typing import List, Optional, Tuple\r\n\r\nfrom pip._internal.exceptions import BadCommand, InstallationError\r\nfrom pip._internal.utils.misc import Hid..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\vcs\\git.py",
    "type": "logger",
    "content_snippet": "import logging\r\nimport os.path\r\nimport pathlib\r\nimport re\r\nimport urllib.parse\r\nimport urllib.request\r\nfrom dataclasses import replace\r\nfrom typing import List, Optional, Tuple\r\n\r\nfrom pip._internal.e..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\vcs\\versioncontrol.py",
    "type": "logger",
    "content_snippet": "\"\"\"Handles all VCS (version control) support\"\"\"\r\n\r\nimport logging\r\nimport os\r\nimport shutil\r\nimport sys\r\nimport urllib.parse\r\nfrom dataclasses import dataclass, field\r\nfrom typing import (\r\n    Any,\r\n..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\wheel_builder.py",
    "type": "logger",
    "content_snippet": "\"\"\"Orchestrator for building wheels from InstallRequirements.\r\n\"\"\"\r\n\r\nimport logging\r\nimport os.path\r\nimport re\r\nimport shutil\r\nfrom typing import Iterable, List, Optional, Tuple\r\n\r\nfrom pip._vendor.p..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_internal\\vcs\\subversion.py",
    "type": "logger",
    "content_snippet": "import logging\r\nimport os\r\nimport re\r\nfrom typing import List, Optional, Tuple\r\n\r\nfrom pip._internal.utils.misc import (\r\n    HiddenText,\r\n    display_path,\r\n    is_console_interactive,\r\n    is_instal..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\_cmd.py",
    "type": "logger",
    "content_snippet": "# SPDX-FileCopyrightText: 2015 Eric Larson\r\n#\r\n# SPDX-License-Identifier: Apache-2.0\r\nfrom __future__ import annotations\r\n\r\nimport logging\r\nfrom argparse import ArgumentParser\r\nfrom typing import TYPE..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\manifest.py",
    "type": "logger",
    "content_snippet": "# -*- coding: utf-8 -*-\r\n#\r\n# Copyright (C) 2012-2023 Python Software Foundation.\r\n# See LICENSE.txt and CONTRIBUTORS.txt.\r\n#\r\n\"\"\"\r\nClass representing the list of files in a distribution.\r\n\r\nEquivalen..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\resources.py",
    "type": "logger",
    "content_snippet": "# -*- coding: utf-8 -*-\r\n#\r\n# Copyright (C) 2013-2017 Vinay Sajip.\r\n# Licensed to the Python Software Foundation under a contributor agreement.\r\n# See LICENSE.txt and CONTRIBUTORS.txt.\r\n#\r\nfrom __futu..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\metadata.py",
    "type": "logger",
    "content_snippet": "# -*- coding: utf-8 -*-\r\n#\r\n# Copyright (C) 2012 The Python Software Foundation.\r\n# See LICENSE.txt and CONTRIBUTORS.txt.\r\n#\r\n\"\"\"Implementation of the Metadata for Python packages PEPs.\r\n\r\nSupports al..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\scripts.py",
    "type": "logger",
    "content_snippet": "# -*- coding: utf-8 -*-\r\n#\r\n# Copyright (C) 2013-2023 Vinay Sajip.\r\n# Licensed to the Python Software Foundation under a contributor agreement.\r\n# See LICENSE.txt and CONTRIBUTORS.txt.\r\n#\r\nfrom io imp..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "type": "logger",
    "content_snippet": "# -*- coding: utf-8 -*-\r\n#\r\n# Copyright (C) 2012-2023 The Python Software Foundation.\r\n# See LICENSE.txt and CONTRIBUTORS.txt.\r\n#\r\n\"\"\"PEP 376 implementation.\"\"\"\r\n\r\nfrom __future__ import unicode_liter..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "type": "logger",
    "content_snippet": "#\r\n# Copyright (C) 2012-2023 The Python Software Foundation.\r\n# See LICENSE.txt and CONTRIBUTORS.txt.\r\n#\r\nimport codecs\r\nfrom collections import deque\r\nimport contextlib\r\nimport csv\r\nfrom glob import ..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\__init__.py",
    "type": "logger",
    "content_snippet": "# -*- coding: utf-8 -*-\r\n#\r\n# Copyright (C) 2012-2023 Vinay Sajip.\r\n# Licensed to the Python Software Foundation under a contributor agreement.\r\n# See LICENSE.txt and CONTRIBUTORS.txt.\r\n#\r\nimport logg..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "type": "logger",
    "content_snippet": "# -*- coding: utf-8 -*-\r\n#\r\n# Copyright (C) 2012-2023 Vinay Sajip.\r\n# Licensed to the Python Software Foundation under a contributor agreement.\r\n# See LICENSE.txt and CONTRIBUTORS.txt.\r\n#\r\n\r\nimport gz..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\controller.py",
    "type": "logger",
    "content_snippet": "# SPDX-FileCopyrightText: 2015 Eric Larson\r\n#\r\n# SPDX-License-Identifier: Apache-2.0\r\n\r\n\"\"\"\r\nThe httplib2 algorithms ported for use with requests.\r\n\"\"\"\r\nfrom __future__ import annotations\r\n\r\nimport ca..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\index.py",
    "type": "logger",
    "content_snippet": "# -*- coding: utf-8 -*-\r\n#\r\n# Copyright (C) 2013-2023 Vinay Sajip.\r\n# Licensed to the Python Software Foundation under a contributor agreement.\r\n# See LICENSE.txt and CONTRIBUTORS.txt.\r\n#\r\nimport hash..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\version.py",
    "type": "logger",
    "content_snippet": "# -*- coding: utf-8 -*-\r\n#\r\n# Copyright (C) 2012-2023 The Python Software Foundation.\r\n# See LICENSE.txt and CONTRIBUTORS.txt.\r\n#\r\n\"\"\"\r\nImplementation of a flexible versioning scheme providing support..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\wheel.py",
    "type": "logger",
    "content_snippet": "# -*- coding: utf-8 -*-\r\n#\r\n# Copyright (C) 2013-2023 Vinay Sajip.\r\n# Licensed to the Python Software Foundation under a contributor agreement.\r\n# See LICENSE.txt and CONTRIBUTORS.txt.\r\n#\r\nfrom __futu..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_vendor\\distro\\distro.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# Copyright 2015-2021 Nir Cohen\r\n#\r\n# Licensed under the Apache License, Version 2.0 (the \"License\");\r\n# you may not use this file except in compliance with the License.\r\n# You ..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\tags.py",
    "type": "logger",
    "content_snippet": "# This file is dual licensed under the terms of the Apache License, Version\r\n# 2.0, and the BSD License. See the LICENSE file in the root of this repository\r\n# for complete details.\r\n\r\nfrom __future__..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_vendor\\requests\\help.py",
    "type": "report",
    "content_snippet": "\"\"\"Module containing bug report helper(s).\"\"\"\r\n\r\nimport json\r\nimport platform\r\nimport ssl\r\nimport sys\r\n\r\nfrom pip._vendor import idna\r\nfrom pip._vendor import urllib3\r\n\r\nfrom . import __version__ as r..."
  },
  {
    "path": "projet\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\__init__.py",
    "type": "logger",
    "content_snippet": "\"\"\"\r\nPython HTTP library with thread-safe connection pooling, file post support, user friendly, and more\r\n\"\"\"\r\nfrom __future__ import absolute_import\r\n\r\n# Set default logging handler to avoid \"No hand..."
  },
  {
    "path": "reporting\\rapport_modif_jan_20250708_123414.md",
    "type": "report",
    "content_snippet": "# Rapport de Modification des Plans pour Jan\n\nDate du rapport : 08/07/2025 12:34:14\n\nCe rapport r√©capitule les modifications apport√©es aux plans de d√©veloppement pour harmoniser l'IA locale avec Ja..."
  },
  {
    "path": "scripts\\aggregate-diagnostics\\aggregate-diagnostics_test.go",
    "type": "report",
    "content_snippet": "// scripts/aggregate-diagnostics_test.go\n// Test basique pour v√©rifier la g√©n√©ration du rapport d‚Äôaudit.\n\npackage main\n\nimport (\n\t\"os\"\n\t\"testing\"\n)\n\nfunc TestAggregateDiagnostics_GeneratesReport(..."
  },
  {
    "path": "scripts\\aggregate-diagnostics\\aggregate-diagnostics.go",
    "type": "report",
    "content_snippet": "// scripts/aggregate-diagnostics.go\n// Agr√®ge les diagnostics Go/YAML/CI dans un rapport Markdown.\n// Usage : go run scripts/aggregate-diagnostics.go\n\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\t\"path/filep..."
  },
  {
    "path": "scripts\\backup\\backup.go",
    "type": "report",
    "content_snippet": "package backup\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"io\"\r\n\t\"io/ioutil\"\r\n\t\"os\"\r\n\t\"path/filepath\"\r\n\t\"time\"\r\n)\r\n\r\n// CriticalFile represents a file or directory to be backed up.\r\ntype CriticalFile struct {\r\n\tPath      ..."
  },
  {
    "path": "scripts\\fix-github-workflows\\fix-github-workflows.go",
    "type": "report",
    "content_snippet": "// scripts/fix-github-workflows.go\r\n// D√©tecte et sugg√®re/corrige les acc√®s contextuels invalides dans les workflows GitHub Actions.\r\n// Usage : go run scripts/fix-github-workflows.go\r\n\r\npackage ma..."
  },
  {
    "path": "scripts\\fix-github-workflows\\fix-github-workflows_test.go",
    "type": "report",
    "content_snippet": "// scripts/fix-github-workflows_test.go\n// Test unitaire pour fix-github-workflows.go\n\npackage main\n\nimport (\n\t\"os\"\n\t\"testing\"\n)\n\nfunc TestFindInvalidContextVars(t *testing.T) {\n\tline := \"image: ${{ s..."
  },
  {
    "path": "scripts\\fix-go-mod-syntax\\fix-go-mod-syntax.go",
    "type": "report",
    "content_snippet": "// scripts/fix-go-mod-syntax.go\n// Corrige automatiquement les erreurs de syntaxe courantes dans les fichiers go.mod (directive mal orthographi√©e, ligne 1 incorrecte, etc.)\n// Usage : go run scripts/..."
  },
  {
    "path": "scripts\\fix-yaml-advanced\\fix-yaml-advanced.go",
    "type": "report",
    "content_snippet": "// scripts/fix-yaml-advanced.go\n// Correction avanc√©e YAML¬†: indentation, scalaires inattendus, collections imbriqu√©es, types, auto-fix, rapport d√©taill√©.\n// Usage¬†: go run scripts/fix-yaml-adva..."
  },
  {
    "path": "scripts\\fix-yaml-structure\\fix-yaml-structure.go",
    "type": "report",
    "content_snippet": "// scripts/fix-yaml-structure.go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"strings\"\n\n\t\"gopkg.in/yaml.v3\"\n)\n\ntype Correction struct {\n\tFile    string\n\tLine    int\n\tMessage str..."
  },
  {
    "path": "scripts\\gen_orchestration_report\\gen_orchestration_report.go",
    "type": "report",
    "content_snippet": "package gen_orchestration_report\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"time\"\n)\n\nfunc main() {\n\treportDir := \"reports\"\n\treportFile := filepath.Join(reportDir, \"orchestration_report.md\"..."
  },
  {
    "path": "scripts\\fix-yaml-structure\\fix-yaml-structure_test.go",
    "type": "report",
    "content_snippet": "// scripts/fix-yaml-structure_test.go\npackage main\n\nimport (\n\t\"io/ioutil\"\n\t\"os\"\n\t\"os/exec\"\n\t\"strings\"\n\t\"testing\"\n)\n\nfunc TestFixYAMLStructure(t *testing.T) {\n\ttmpfile, err := ioutil.TempFile(\"\", \"bad-..."
  },
  {
    "path": "scripts\\init-gap-analyzer.js",
    "type": "report",
    "content_snippet": "const fs = require('fs');\r\nconst path = require('path');\r\nconst data = JSON.parse(fs.readFileSync('init-cartographie-scan.json'));\r\n\r\n// Index pour d√©tection de doublons, orphelins, etc.\r\nconst nameI..."
  },
  {
    "path": "scripts\\gen_rollback_report\\gen_rollback_report.go",
    "type": "report",
    "content_snippet": "package gen_rollback_report\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"io/ioutil\"\r\n\t\"os\"\r\n\t\"os/exec\"\r\n\t\"path/filepath\"\r\n\t\"strings\"\r\n\t\"time\"\r\n)\r\n\r\nfunc main() {\r\n\treportDir := \"reports\"\r\n\treportFile := filepath.Join(repor..."
  },
  {
    "path": "scripts\\evaluate-feedback-iteration.py",
    "type": "report",
    "content_snippet": "# Phase 8 ‚Äì √âvaluation, feedback et it√©rations (Python)\r\n# Respecte granularit√©, validation crois√©e, outputs r√©els, rollback, CI/CD\r\n\r\nimport shutil\r\nimport datetime\r\nimport subprocess\r\nimport ..."
  },
  {
    "path": "scripts\\revue_croisee_automatique.md",
    "type": "report",
    "content_snippet": "# Proc√©dure de revue crois√©e automatis√©e des rapports d‚Äôaudit\r\n\r\n## Objectif\r\nGarantir la validation humaine et la tra√ßabilit√© des audits g√©n√©r√©s automatiquement.\r\n\r\n---\r\n\r\n## √âtapes\r\n\r\n1. ..."
  },
  {
    "path": "specs\\orchestrator_spec.md",
    "type": "report",
    "content_snippet": "# Sp√©cification de l'Orchestrateur Global\r\n\r\nCe document sp√©cifie l'orchestrateur global qui coordonnera l'ex√©cution s√©quentielle des diff√©rents scripts d'automatisation du projet.\r\n\r\n## 1. Objec..."
  },
  {
    "path": "scripts\\report-unresolved-errors\\report-unresolved-errors_test.go",
    "type": "report",
    "content_snippet": "// scripts/report-unresolved-errors_test.go\n// Test unitaire pour report-unresolved-errors.go\n\npackage main\n\nimport (\n\t\"os\"\n\t\"strings\"\n\t\"testing\"\n)\n\nfunc TestReportUnresolvedErrors_GeneratesReport(t *..."
  },
  {
    "path": "src\\format-support\\XML_HTML\\Documentation\\Guide_XML.md",
    "type": "report",
    "content_snippet": "# Guide d'utilisation du format XML\r\n\r\nCe guide explique comment utiliser les fonctionnalit√©s de support du format XML pour convertir, analyser et valider des fichiers XML.\r\n\r\n## Structure XML pour l..."
  },
  {
    "path": "src\\format-support\\XML_HTML\\Documentation\\Reference_API.md",
    "type": "report",
    "content_snippet": "# R√©f√©rence API - Support des formats XML et HTML\r\n\r\nCe document fournit une r√©f√©rence compl√®te de toutes les fonctions disponibles dans les modules de support XML et HTML.\r\n\r\n## Table des mati√®..."
  },
  {
    "path": "src\\format-support\\XML_HTML\\Documentation\\Guide_Integration.md",
    "type": "report",
    "content_snippet": "# Guide d'int√©gration pour les d√©veloppeurs\r\n\r\nCe guide explique comment int√©grer le support des formats XML et HTML dans vos propres scripts et applications.\r\n\r\n## Int√©gration avec le module Form..."
  },
  {
    "path": "src\\format-support\\XML_HTML\\README.md",
    "type": "report",
    "content_snippet": "# Support des formats XML et HTML\r\n\r\nCe module fournit un support complet pour les formats XML et HTML, permettant de convertir, analyser et valider des fichiers dans ces formats, ainsi que de convert..."
  },
  {
    "path": "src\\managers\\infrastructure\\InfrastructureDiagnostic.ts",
    "type": "report",
    "content_snippet": "// Infrastructure Diagnostic Manager - Phase 0.1\r\n// Diagnostic et R√©paration Infrastructure Automatis√©e\r\n\r\nexport interface DiagnosticReport {\r\n  apiServer: ServiceStatus;\r\n  dockerHealth: DockerSt..."
  },
  {
    "path": "src\\managers\\infrastructure\\InfrastructureExtensionManager.ts",
    "type": "report",
    "content_snippet": "// Infrastructure Manager Integration for VSCode Extension\r\n// Phase 0.1 : Extension Integration with Diagnostic System\r\n\r\nimport { InfrastructureDiagnostic, DiagnosticReport, RepairResult } from './I..."
  },
  {
    "path": "src\\managers\\monitoring\\PredictiveAlertingSystem.ts",
    "type": "metric",
    "content_snippet": "import * as vscode from 'vscode';\r\nimport { EventEmitter } from 'events';\r\nimport { Alert, SystemMetrics, AlertThresholds } from './ResourceDashboard';\r\n\r\n/**\r\n * Interface pour les r√®gles d'alerte p..."
  },
  {
    "path": "src\\managers\\performance\\PerformanceManager.ts",
    "type": "report",
    "content_snippet": "import * as vscode from 'vscode';\r\nimport { ResourceManager, ResourceMetrics } from './ResourceManager';\r\nimport { IDEPerformanceGuardian, IDEPerformanceMetrics } from './IDEPerformanceGuardian';\r\n\r\n/..."
  },
  {
    "path": "src\\mcp\\core\\client\\client.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nClient Python pour tester le serveur MCP.\r\n\r\nCe script montre comment utiliser le client MCP pour interagir avec le serveur MCP.\r\n\"\"\"\r\n\r\nimport l..."
  },
  {
    "path": "src\\mcp\\core\\code\\CodeManager.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nModule de gestion de code pour MCP.\r\n\r\nCe module fournit une classe de base pour g√©rer les op√©rations sur le code dans le contexte MCP.\r\nIl per..."
  },
  {
    "path": "src\\mcp\\core\\code\\register_code_tools.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nModule pour enregistrer les outils de code aupr√®s du serveur MCP.\r\n\r\nCe module fournit une fonction pour enregistrer tous les outils de code aup..."
  },
  {
    "path": "src\\mcp\\core\\code\\tools\\get_code_structure.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nOutil MCP pour obtenir la structure d'un fichier de code.\r\n\r\nCet outil permet d'extraire la structure d'un fichier de code (classes, fonctions, i..."
  },
  {
    "path": "src\\mcp\\core\\code\\tools\\search_code.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nOutil MCP pour rechercher du code.\r\n\r\nCet outil permet de rechercher du code dans des fichiers en fonction de diff√©rents crit√®res.\r\n\"\"\"\r\n\r\nimpo..."
  },
  {
    "path": "src\\mcp\\core\\document\\DocumentManager.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nModule de gestion de documents pour MCP.\r\n\r\nCe module fournit une classe de base pour g√©rer les documents dans le contexte MCP.\r\nIl permet de r\ufffd..."
  },
  {
    "path": "src\\mcp\\core\\code\\tools\\analyze_code.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nOutil MCP pour analyser du code.\r\n\r\nCet outil permet d'analyser un fichier de code pour obtenir des m√©triques et d√©tecter des probl√®mes.\r\n\"\"\"\r..."
  },
  {
    "path": "src\\mcp\\core\\document\\register_document_tools.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nModule pour enregistrer les outils de document aupr√®s du serveur MCP.\r\n\r\nCe module fournit une fonction pour enregistrer tous les outils de docu..."
  },
  {
    "path": "src\\mcp\\core\\document\\tools\\read_file.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nOutil MCP pour lire des fichiers.\r\n\r\nCet outil permet de lire le contenu d'un fichier.\r\n\"\"\"\r\n\r\nimport json\r\nimport logging\r\nfrom typing import Di..."
  },
  {
    "path": "src\\mcp\\core\\document\\tools\\fetch_documentation.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nOutil MCP pour r√©cup√©rer de la documentation.\r\n\r\nCet outil permet de r√©cup√©rer des documents √† partir d'un chemin sp√©cifi√©.\r\n\"\"\"\r\n\r\nimport..."
  },
  {
    "path": "src\\mcp\\core\\mcp\\storage_provider.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nModule pour les fournisseurs de stockage vectoriel.\r\n\r\nCe module contient les interfaces et impl√©mentations pour les fournisseurs de stockage ve..."
  },
  {
    "path": "src\\mcp\\core\\mcp\\core.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nModule principal pour le Core MCP.\r\n\r\nCe module contient la classe principale MCPCore qui g√®re le parsing des requ√™tes\r\net le formatage des r√©..."
  },
  {
    "path": "src\\mcp\\core\\memory\\MemoryManager.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nModule de gestion de m√©moire pour MCP.\r\n\r\nCe module fournit une classe de base pour g√©rer les m√©moires dans le contexte MCP.\r\nIl permet d'ajou..."
  },
  {
    "path": "src\\mcp\\core\\mcp\\protocol.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nModule pour la gestion des protocoles MCP.\r\n\r\nCe module contient les classes et fonctions pour g√©rer les diff√©rents protocoles\r\nde communicatio..."
  },
  {
    "path": "src\\mcp\\core\\memory\\register_memory_tools.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nModule pour enregistrer les outils de m√©moire aupr√®s du serveur MCP.\r\n\r\nCe module fournit une fonction pour enregistrer tous les outils de m√©m..."
  },
  {
    "path": "src\\mcp\\core\\document\\tools\\search_documentation.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nOutil MCP pour rechercher dans la documentation.\r\n\r\nCet outil permet de rechercher des documents correspondant √† une requ√™te.\r\n\"\"\"\r\n\r\nimport js..."
  },
  {
    "path": "src\\mcp\\core\\mcp\\request.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nModule pour la gestion des requ√™tes MCP.\r\n\r\nCe module contient les classes et fonctions pour g√©rer les requ√™tes MCP.\r\n\"\"\"\r\n\r\nimport json\r\nimpo..."
  },
  {
    "path": "src\\mcp\\core\\mcp\\embedding_provider.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nModule pour les fournisseurs d'embeddings.\r\n\r\nCe module contient les interfaces et impl√©mentations pour les fournisseurs d'embeddings.\r\n\"\"\"\r\n\r\ni..."
  },
  {
    "path": "src\\mcp\\core\\memory\\tools\\delete_memories.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nOutil MCP pour supprimer des m√©moires.\r\n\r\nCet outil permet de supprimer une ou plusieurs m√©moires du syst√®me MCP.\r\n\"\"\"\r\n\r\nimport json\r\nimport ..."
  },
  {
    "path": "src\\mcp\\core\\memory\\tools\\list_memories.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nOutil MCP pour lister les m√©moires.\r\n\r\nCet outil permet de lister toutes les m√©moires du syst√®me MCP avec des options de filtrage.\r\n\"\"\"\r\n\r\nimp..."
  },
  {
    "path": "src\\mcp\\core\\memory\\tools\\add_memories.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nOutil MCP pour ajouter des m√©moires.\r\n\r\nCet outil permet d'ajouter une ou plusieurs m√©moires au syst√®me MCP.\r\n\"\"\"\r\n\r\nimport json\r\nimport loggi..."
  },
  {
    "path": "src\\mcp\\core\\mcp\\response.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nModule pour la gestion des r√©ponses MCP.\r\n\r\nCe module contient les classes et fonctions pour g√©rer les r√©ponses MCP.\r\n\"\"\"\r\n\r\nimport json\r\nimpo..."
  },
  {
    "path": "src\\mcp\\core\\mcp\\memory_manager.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nModule pour la gestion des m√©moires MCP.\r\n\r\nCe module contient les classes et fonctions pour g√©rer les m√©moires MCP,\r\nnotamment le stockage, l..."
  },
  {
    "path": "src\\mcp\\core\\mcp\\tools_manager.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nModule pour la gestion des outils MCP.\r\n\r\nCe module contient les classes et fonctions pour g√©rer les outils MCP,\r\nnotamment la d√©couverte, l'en..."
  },
  {
    "path": "src\\mcp\\core\\memory\\tools\\search_memory.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nOutil MCP pour rechercher des m√©moires.\r\n\r\nCet outil permet de rechercher des m√©moires dans le syst√®me MCP.\r\n\"\"\"\r\n\r\nimport json\r\nimport loggin..."
  },
  {
    "path": "src\\mcp\\core\\roadmap\\node_storage.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nModule pour le stockage des n≈ìuds cognitifs.\r\n\r\nCe module contient les interfaces et impl√©mentations pour les fournisseurs de stockage\r\ndes n≈ì..."
  },
  {
    "path": "src\\mcp\\core\\roadmap\\cognitive_architecture.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nModule pour l'architecture cognitive des roadmaps.\r\n\r\nCe module contient les classes et fonctions pour impl√©menter l'architecture cognitive\r\ndes..."
  },
  {
    "path": "src\\mcp\\core\\roadmap\\cognitive_manager.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nModule pour la gestion de l'architecture cognitive des roadmaps.\r\n\r\nCe module contient les classes et fonctions pour g√©rer l'architecture cognit..."
  },
  {
    "path": "src\\mcp\\core\\server\\server.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nServeur FastAPI qui expose des outils similaires √† MCP.\r\n\r\nCe script cr√©e un serveur FastAPI qui expose quelques outils via une API REST.\r\n\"\"\"\r..."
  },
  {
    "path": "src\\mcp\\docs\\hygen-integration.md",
    "type": "report",
    "content_snippet": "# Int√©gration de Hygen dans la documentation globale MCP\r\n\r\nCe document explique comment Hygen s'int√®gre dans la documentation globale MCP.\r\n\r\n## Introduction\r\n\r\nHygen est un g√©n√©rateur de code si..."
  },
  {
    "path": "src\\mcp\\examples\\core_mcp_example.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nExemple d'utilisation du Core MCP.\r\n\r\nCe script montre comment utiliser le Core MCP pour cr√©er un serveur MCP simple.\r\n\"\"\"\r\n\r\nimport os\r\nimport ..."
  },
  {
    "path": "src\\mcp\\examples\\code_mcp_server.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nServeur MCP pour les outils de code.\r\n\r\nCe script d√©marre un serveur MCP qui expose les outils de code.\r\n\"\"\"\r\n\r\nimport os\r\nimport sys\r\nimport js..."
  },
  {
    "path": "src\\mcp\\examples\\memory_mcp_server.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nExemple de serveur MCP avec outils de gestion de m√©moire.\r\n\r\nCe script cr√©e un serveur MCP minimal qui expose les outils de gestion de m√©moire..."
  },
  {
    "path": "src\\mcp\\examples\\cognitive_architecture_example.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nExemple d'utilisation de l'architecture cognitive des roadmaps.\r\n\r\nCe script montre comment utiliser l'architecture cognitive pour cr√©er et navi..."
  },
  {
    "path": "src\\mcp\\examples\\memory_manager_example.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nExemple d'utilisation du Memory Manager.\r\n\r\nCe script montre comment utiliser le Memory Manager pour g√©rer les m√©moires.\r\n\"\"\"\r\n\r\nimport os\r\nimp..."
  },
  {
    "path": "src\\mcp\\examples\\tools_manager_example.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nExemple d'utilisation du Tools Manager.\r\n\r\nCe script montre comment utiliser le Tools Manager pour d√©couvrir et utiliser des outils.\r\n\"\"\"\r\n\r\nimp..."
  },
  {
    "path": "src\\mcp\\examples\\core_mcp_client.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nClient pour tester le Core MCP.\r\n\r\nCe script montre comment interagir avec un serveur MCP bas√© sur le Core MCP.\r\n\"\"\"\r\n\r\nimport os\r\nimport sys\r\ni..."
  },
  {
    "path": "src\\mcp\\proxy\\src\\utils\\cache.js",
    "type": "logger",
    "content_snippet": "/**\r\n * Module de cache\r\n * Impl√©mente un cache en m√©moire pour am√©liorer les performances\r\n */\r\n\r\nconst logger = require('./logger');\r\nconst config = require('./config');\r\n\r\n// Cache en m√©moire\r\n..."
  },
  {
    "path": "src\\mcp\\proxy\\src\\utils\\healthCheck.js",
    "type": "logger",
    "content_snippet": "/**\r\n * Module de v√©rification de sant√©\r\n * V√©rifie la sant√© des syst√®mes cibles\r\n */\r\n\r\nconst axios = require('axios');\r\nconst config = require('./config');\r\nconst logger = require('./logger');\r..."
  },
  {
    "path": "src\\mcp\\proxy\\src\\utils\\logger.js",
    "type": "logger",
    "content_snippet": "/**\r\n * Module de journalisation\r\n * Configure et expose un logger Winston pour l'application\r\n */\r\n\r\nconst winston = require('winston');\r\nconst fs = require('fs-extra');\r\nconst path = require('path')..."
  },
  {
    "path": "src\\mcp\\proxy\\src\\utils\\metrics.js",
    "type": "logger",
    "content_snippet": "/**\r\n * Module de m√©triques\r\n * Collecte et expose des m√©triques sur le fonctionnement du proxy\r\n */\r\n\r\nconst os = require('os');\r\nconst fs = require('fs-extra');\r\nconst path = require('path');\r\ncon..."
  },
  {
    "path": "src\\mcp\\proxy\\src\\server.js",
    "type": "logger",
    "content_snippet": "/**\r\n * Serveur principal du proxy MCP unifi√©\r\n * G√®re le routage des requ√™tes entre les syst√®mes Augment et Cline\r\n */\r\n\r\nconst express = require('express');\r\nconst http = require('http');\r\nconst..."
  },
  {
    "path": "src\\mcp\\proxy\\src\\utils\\systemManager.js",
    "type": "logger",
    "content_snippet": "/**\r\n * Module de gestion du syst√®me actif\r\n * G√®re la lecture et l'√©criture du fichier de lock pour d√©terminer le syst√®me actif\r\n */\r\n\r\nconst fs = require('fs-extra');\r\nconst path = require('pat..."
  },
  {
    "path": "src\\mcp\\proxy\\src\\utils\\auth.js",
    "type": "logger",
    "content_snippet": "/**\r\n * Module d'authentification\r\n * G√®re l'authentification pour l'interface web et l'API\r\n */\r\n\r\nconst crypto = require('crypto');\r\nconst fs = require('fs-extra');\r\nconst path = require('path');\r\n..."
  },
  {
    "path": "src\\mcp\\scripts\\python\\basic_mcp_client.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nClient MCP basique pour tester le serveur MCP.\r\n\r\nCe script montre comment utiliser le client MCP pour interagir avec le serveur MCP basique.\r\n\"\"..."
  },
  {
    "path": "src\\mcp\\scripts\\python\\minimal_mcp_server.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nServeur MCP minimal pour tester l'int√©gration avec PowerShell.\r\n\r\nCe script cr√©e un serveur MCP minimal qui expose un outil simple.\r\n\"\"\"\r\n\r\nimp..."
  },
  {
    "path": "src\\mcp\\scripts\\python\\basic_mcp_server.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nServeur MCP basique bas√© sur la documentation officielle.\r\n\r\nCe script cr√©e un serveur MCP simple qui expose quelques outils de base.\r\n\"\"\"\r\n\r\ni..."
  },
  {
    "path": "src\\mcp\\scripts\\python\\minimal_mcp_client.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nClient MCP minimal pour tester l'int√©gration avec PowerShell.\r\n\r\nCe script montre comment utiliser le client MCP pour interagir avec le serveur ..."
  },
  {
    "path": "src\\mcp\\server\\fastmcp.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nImpl√©mentation minimale d'un serveur MCP bas√© sur FastAPI.\r\n\r\nCe module fournit une impl√©mentation minimale d'un serveur MCP\r\npour tester les ..."
  },
  {
    "path": "src\\mcp\\tools\\check_cognitive_integrity.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nScript pour v√©rifier l'int√©grit√© et la coh√©rence des donn√©es de l'architecture cognitive.\r\n\r\nCe script v√©rifie l'int√©grit√© des fichiers d..."
  },
  {
    "path": "src\\modules\\CsvSegmenter.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\"\"\"\r\nModule de segmentation CSV pour EMAIL_SENDER_1.\r\n\r\nCe module fournit des fonctionnalit√©s avanc√©es pour parser, segmenter,\r\nvalider et analyser de..."
  },
  {
    "path": "src\\modules\\EncodingDetector.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\"\"\"\r\nModule de d√©tection d'encodage pour EMAIL_SENDER_1.\r\n\r\nCe module fournit des fonctionnalit√©s pour d√©tecter automatiquement\r\nl'encodage des fichi..."
  },
  {
    "path": "src\\modules\\JsonSegmenter.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\"\"\"\r\nModule de segmentation JSON pour EMAIL_SENDER_1.\r\n\r\nCe module fournit des fonctionnalit√©s avanc√©es pour parser, segmenter,\r\nvalider et analyser d..."
  },
  {
    "path": "src\\modules\\TextSegmenter.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\"\"\"\r\nModule de segmentation de texte pour EMAIL_SENDER_1.\r\n\r\nCe module fournit des fonctionnalit√©s avanc√©es pour analyser, segmenter\r\net traiter des d..."
  },
  {
    "path": "src\\modules\\PredictiveModel.py",
    "type": "metric",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nModule de mod√®les pr√©dictifs pour l'analyse des performances\r\nCe module fournit des fonctionnalit√©s d'analyse pr√©dictive des m√©triques de pe..."
  },
  {
    "path": "src\\modules\\XmlSegmenter.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\"\"\"\r\nModule de segmentation XML pour EMAIL_SENDER_1.\r\n\r\nCe module fournit des fonctionnalit√©s avanc√©es pour parser, segmenter,\r\nvalider et analyser de..."
  },
  {
    "path": "src\\modules\\YamlSegmenter.py",
    "type": "logger",
    "content_snippet": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\"\"\"\r\nModule de segmentation YAML pour EMAIL_SENDER_1.\r\n\r\nCe module fournit des fonctionnalit√©s avanc√©es pour parser, segmenter,\r\nvalider et analyser d..."
  },
  {
    "path": "src\\n8n\\docs\\architecture\\api-routes.md",
    "type": "report",
    "content_snippet": "# Routes API de n8n\r\n\r\nCe document d√©crit les routes API disponibles dans n8n et comment les utiliser.\r\n\r\n## Vue d'ensemble\r\n\r\nn8n expose une API REST qui permet d'interagir avec les workflows, les e..."
  },
  {
    "path": "src\\n8n\\docs\\architecture\\port-api-monitoring.md",
    "type": "report",
    "content_snippet": "# Surveillance du port et de l'API n8n\r\n\r\nCe document explique comment utiliser les scripts de surveillance du port et de l'API n8n.\r\n\r\n## Vue d'ensemble\r\n\r\nLa surveillance du port et de l'API n8n per..."
  },
  {
    "path": "src\\n8n\\docs\\architecture\\structure-test.md",
    "type": "report",
    "content_snippet": "# Test structurel de n8n\r\n\r\nCe document explique comment utiliser les scripts de test structurel pour v√©rifier l'int√©grit√© et la structure des composants n8n.\r\n\r\n## Vue d'ensemble\r\n\r\nLe test struct..."
  },
  {
    "path": "src\\n8n\\docs\\architecture\\workflow-verification.md",
    "type": "report",
    "content_snippet": "# V√©rification de la pr√©sence des workflows n8n\r\n\r\nCe document explique comment utiliser les scripts de v√©rification de la pr√©sence des workflows n8n.\r\n\r\n## Vue d'ensemble\r\n\r\nLa v√©rification de l..."
  },
  {
    "path": "src\\n8n\\docs\\architecture\\integration-tests.md",
    "type": "report",
    "content_snippet": "# Tests d'int√©gration n8n\r\n\r\nCe document explique comment utiliser les tests d'int√©gration pour v√©rifier que tous les composants de la rem√©diation n8n fonctionnent correctement ensemble.\r\n\r\n## Vue..."
  },
  {
    "path": "src\\n8n\\docs\\hygen-benefits-validation.md",
    "type": "report",
    "content_snippet": "# Guide de validation des b√©n√©fices de Hygen\r\n\r\nCe guide explique comment valider les b√©n√©fices et l'utilit√© de Hygen dans le projet n8n.\r\n\r\n## Objectifs\r\n\r\nLa validation des b√©n√©fices de Hygen..."
  },
  {
    "path": "src\\n8n\\docs\\hygen-utilities-validation.md",
    "type": "report",
    "content_snippet": "# Guide de validation des scripts d'utilitaires Hygen\r\n\r\nCe guide explique comment valider les scripts d'utilitaires Hygen dans le projet n8n.\r\n\r\n## Pr√©requis\r\n\r\n- Node.js et npm install√©s\r\n- Projet..."
  },
  {
    "path": "src\\n8n\\docs\\hygen-templates-validation.md",
    "type": "report",
    "content_snippet": "# Guide de validation des templates Hygen\r\n\r\nCe guide explique comment valider les templates Hygen dans le projet n8n.\r\n\r\n## Pr√©requis\r\n\r\n- Node.js et npm install√©s\r\n- Projet n8n initialis√©\r\n- Hyge..."
  },
  {
    "path": "src\\test\\Phase05TestRunner.ts",
    "type": "metric",
    "content_snippet": "import * as vscode from 'vscode';\r\nimport { MonitoringManager } from '../managers/monitoring/MonitoringIntegration';\r\n\r\nexport class Phase05TestRunner {\r\n  private monitoringManager?: MonitoringManage..."
  },
  {
    "path": "standards_inventory.md",
    "type": "report",
    "content_snippet": "# Inventaire des standards document√©s\r\n\r\n- BONNES-PRATIQUES.md\r\n- CONTRIBUTING.md\r\n- DOC_AUDIT.md\r\n- DOC_COVERAGE.md\r\n- DOC_INDEX.md\r\n- FAQ.md\r\n- README.md\r\n- SCRIPTS-OUTILS.md\r\n- cline_vs_copilot_fi..."
  },
  {
    "path": "tests\\failover\\automated_test.go",
    "type": "logger",
    "content_snippet": "package failover\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"sync\"\n\t\"time\"\n\n\t\"go.uber.org/zap\"\n)\n\n// AutomatedFailoverTester g√®re les tests de basculement automatis√©s\ntype AutomatedFailoverTester struct {\n\tmu    ..."
  },
  {
    "path": "tests\\performance\\performance_load_test.go",
    "type": "logger",
    "content_snippet": "package performance\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"sync\"\n\t\"testing\"\n\t\"time\"\n\n\t\"github.com/stretchr/testify/require\"\n\t\"go.uber.org/zap\"\n\t\"go.uber.org/zap/zaptest\"\n)\n\n// PerformanceTestConfig configurati..."
  },
  {
    "path": "tests\\sync-integration-test.go",
    "type": "logger",
    "content_snippet": "package tests\n\nimport (\n\t\"context\"\n\t\"database/sql\"\n\t\"fmt\"\n\t\"log\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"strings\"\n\t\"testing\"\n\t\"time\"\n\n\t\"github.com/stretchr/testify/assert\"\n\t\"github.com/stretchr/testify/require\"\n\t\"gi..."
  },
  {
    "path": "tests\\sync-integration-test.go",
    "type": "report",
    "content_snippet": "package tests\n\nimport (\n\t\"context\"\n\t\"database/sql\"\n\t\"fmt\"\n\t\"log\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"strings\"\n\t\"testing\"\n\t\"time\"\n\n\t\"github.com/stretchr/testify/assert\"\n\t\"github.com/stretchr/testify/require\"\n\t\"gi..."
  },
  {
    "path": "tests\\performance-test.go",
    "type": "logger",
    "content_snippet": "package tests\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"log\"\n\t\"math/rand\"\n\t\"os\"\n\t\"strings\"\n\t\"sync\"\n\t\"testing\"\n\t\"time\"\n\n\t\"github.com/stretchr/testify/assert\"\n\t\"github.com/stretchr/testify/require\"\n)\n\n// Performanc..."
  },
  {
    "path": "tests\\validation-test.go",
    "type": "logger",
    "content_snippet": "package tests\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\t\"time\"\n\n\t\"github.com/stretchr/testify/assert\"\n\t\"github.com/stretchr/testify/require\"\n)\n\n// ValidationTestSuite contains validation and ..."
  },
  {
    "path": "tools\\alert-manager.go",
    "type": "logger",
    "content_snippet": "package tools\r\n\r\nimport (\r\n\t\"bytes\"\r\n\t\"context\"\r\n\t\"encoding/json\"\r\n\t\"fmt\"\r\n\t\"log\"\r\n\t\"net/http\"\r\n\t\"net/smtp\"\r\n\t\"sync\"\r\n\t\"time\"\r\n)\r\n\r\n// AlertManager handles sending alerts via multiple channels\r\ntype A..."
  },
  {
    "path": "tools\\audit-generator\\main.go",
    "type": "report",
    "content_snippet": "package main\r\n\r\nimport \"fmt\"\r\n\r\nfunc main() {\r\n\tfmt.Println(\"G√©n√©ration des rapports d'audit/conformit√© Event Bus\")\r\n\t// TODO: G√©n√©rer audit_report.md, conformity_report.md\r\n}\r\n"
  },
  {
    "path": "tools\\cache-analyzer\\cache_analyzer.go",
    "type": "report",
    "content_snippet": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD:tools/cache-analyzer/cache_analyzer.go\n// Cache analyzer tool for TTL optimization\npackage cache_analyzer\n\nimport (\n\t\"context\"\n\t\"encoding/json\"\n\t\"flag\"\n\t\"fmt\"\n\t\"log\"\n\t\"os\"\n\t\"time\"\n\n\t\"emai..."
  },
  {
    "path": "tools\\diff_edit\\go\\log_diffedit.go",
    "type": "logger",
    "content_snippet": "package go\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"log\"\r\n\t\"os\"\r\n\t\"os/user\"\r\n\t\"time\"\r\n)\r\n\r\n// log_diffedit.go : log avanc√© pour diffedit.go (√† int√©grer dans diffedit.go si besoin)\r\nfunc logDiffEdit(action, file, pat..."
  },
  {
    "path": "tools\\drift-detector.go",
    "type": "logger",
    "content_snippet": "package tools\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"fmt\"\r\n\t\"log\"\r\n\t\"sync\"\r\n\t\"time\"\r\n)\r\n\r\n// DriftDetector monitors for synchronization drift and performance issues\r\ntype DriftDetector struct {\r\n\tthresholds    ma..."
  },
  {
    "path": "tools\\git-maintenance\\sync.go",
    "type": "logger",
    "content_snippet": "package git_maintenance\r\n\r\nimport (\r\n\t\"bufio\"\r\n\t\"context\"\r\n\t\"fmt\"\r\n\t\"log\"\r\n\t\"os\"\r\n\t\"os/exec\"\r\n\t\"path/filepath\"\r\n\t\"strings\"\r\n\t\"sync\"\r\n\t\"time\"\r\n)\r\n\r\ntype SubmoduleStatus struct {\r\n\tPath            strin..."
  },
  {
    "path": "tools\\observability-scanner\\main.go",
    "type": "logger",
    "content_snippet": "package main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"os\"\r\n\t\"path/filepath\"\r\n\t\"strings\" // Import du package strings\r\n)\r\n\r\nfunc main() {\r\n\tfmt.Println(\"Scanning for observability sources...\")\r\n\r\n\tvar observabilitySourc..."
  },
  {
    "path": "tools\\observability-scanner\\main.go",
    "type": "metric",
    "content_snippet": "package main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"os\"\r\n\t\"path/filepath\"\r\n\t\"strings\" // Import du package strings\r\n)\r\n\r\nfunc main() {\r\n\tfmt.Println(\"Scanning for observability sources...\")\r\n\r\n\tvar observabilitySourc..."
  },
  {
    "path": "tools\\observability-scanner\\main.go",
    "type": "report",
    "content_snippet": "package main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"os\"\r\n\t\"path/filepath\"\r\n\t\"strings\" // Import du package strings\r\n)\r\n\r\nfunc main() {\r\n\tfmt.Println(\"Scanning for observability sources...\")\r\n\r\n\tvar observabilitySourc..."
  },
  {
    "path": "tools\\orchestrator-scanner\\main.go",
    "type": "logger",
    "content_snippet": "package main\n\nimport (\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"strings\"\n\t\"sync\"\n)\n\n// ObservabilitySource repr√©sente une source d'observabilit√© d√©tect√©e\ntype ObservabilitySource struct {\n..."
  },
  {
    "path": "tools\\orchestrator-scanner\\main.go",
    "type": "metric",
    "content_snippet": "package main\n\nimport (\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"strings\"\n\t\"sync\"\n)\n\n// ObservabilitySource repr√©sente une source d'observabilit√© d√©tect√©e\ntype ObservabilitySource struct {\n..."
  },
  {
    "path": "tools\\orchestrator-scanner\\main.go",
    "type": "report",
    "content_snippet": "package main\n\nimport (\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"strings\"\n\t\"sync\"\n)\n\n// ObservabilitySource repr√©sente une source d'observabilit√© d√©tect√©e\ntype ObservabilitySource struct {\n..."
  },
  {
    "path": "tools\\performance-metrics-helpers.go",
    "type": "logger",
    "content_snippet": "package tools\r\n\r\nimport (\r\n\t\"encoding/json\"\r\n\t\"fmt\"\r\n\t\"math\"\r\n\t\"time\"\r\n)\r\n\r\n// Helper methods for PerformanceMetrics calculations\r\n\r\n// calculateDurationAverage calculates average of time durations\r\nf..."
  },
  {
    "path": "tools\\performance-metrics.go",
    "type": "logger",
    "content_snippet": "package tools\n\nimport (\n\t\"database/sql\"\n\t\"fmt\"\n\t\"log\"\n\t\"sync\"\n\t\"time\"\n\n\t_ \"github.com/lib/pq\"\n)\n\n// PerformanceMetrics collects and analyzes system performance data\ntype PerformanceMetrics struct {\n\ts..."
  },
  {
    "path": "tools\\performance-metrics.go",
    "type": "report",
    "content_snippet": "package tools\n\nimport (\n\t\"database/sql\"\n\t\"fmt\"\n\t\"log\"\n\t\"sync\"\n\t\"time\"\n\n\t_ \"github.com/lib/pq\"\n)\n\n// PerformanceMetrics collects and analyzes system performance data\ntype PerformanceMetrics struct {\n\ts..."
  },
  {
    "path": "tools\\project-validator\\project_validator.go",
    "type": "report",
    "content_snippet": "package project_validator\r\n\r\nimport (\r\n\t\"bufio\"\r\n\t\"encoding/json\"\r\n\t\"flag\"\r\n\t\"fmt\"\r\n\t\"os\"\r\n\t\"os/exec\"\r\n\t\"path/filepath\"\r\n\t\"sort\"\r\n\t\"strings\"\r\n\t\"time\"\r\n)\r\n\r\n// ProjectValidator validates Go project set..."
  },
  {
    "path": "tools\\orchestrator-scanner\\manager_inventory.md",
    "type": "metric",
    "content_snippet": "# Inventaire des Managers, Hooks, Scripts et √âv√©nements\n\n*G√©n√©r√© automatiquement le 2025-07-11T15:13:27+02:00*\n\n## R√©sum√©\n\n- **Managers**: 81\n- **Hooks**: 0\n- **Scripts**: 7577\n- **√âv√©nements..."
  },
  {
    "path": "tools\\orchestrator-scanner\\manager_inventory.md",
    "type": "report",
    "content_snippet": "# Inventaire des Managers, Hooks, Scripts et √âv√©nements\n\n*G√©n√©r√© automatiquement le 2025-07-11T15:13:27+02:00*\n\n## R√©sum√©\n\n- **Managers**: 81\n- **Hooks**: 0\n- **Scripts**: 7577\n- **√âv√©nements..."
  },
  {
    "path": "tools\\orchestrator-scanner\\manager_inventory.md",
    "type": "logger",
    "content_snippet": "# Inventaire des Managers, Hooks, Scripts et √âv√©nements\n\n*G√©n√©r√© automatiquement le 2025-07-11T15:13:27+02:00*\n\n## R√©sum√©\n\n- **Managers**: 81\n- **Hooks**: 0\n- **Scripts**: 7577\n- **√âv√©nements..."
  },
  {
    "path": "tools\\qdrant\\rag-go\\pkg\\client\\rag_client.go",
    "type": "logger",
    "content_snippet": "// Package client provides RAG-optimized Qdrant client using the unified client\n// Phase 2.2.2: Refactoring du Client RAG\npackage client\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"time\"\n\n\tunified \"github.com/geriv..."
  },
  {
    "path": "tools\\orchestrator-scanner\\event_hooks.json",
    "type": "logger",
    "content_snippet": "{\n  \"managers\": [\n    {\n      \"name\": \"roadmap_orchestrator.go\",\n      \"path\": \"cmd\\\\go\\\\roadmap-orchestrator\\\\roadmap_orchestrator.go\",\n      \"type\": \"Go\",\n      \"description\": \"PhaseResult stores th..."
  },
  {
    "path": "tools\\orchestrator-scanner\\event_hooks.json",
    "type": "metric",
    "content_snippet": "{\n  \"managers\": [\n    {\n      \"name\": \"roadmap_orchestrator.go\",\n      \"path\": \"cmd\\\\go\\\\roadmap-orchestrator\\\\roadmap_orchestrator.go\",\n      \"type\": \"Go\",\n      \"description\": \"PhaseResult stores th..."
  },
  {
    "path": "tools\\orchestrator-scanner\\event_hooks.json",
    "type": "report",
    "content_snippet": "{\n  \"managers\": [\n    {\n      \"name\": \"roadmap_orchestrator.go\",\n      \"path\": \"cmd\\\\go\\\\roadmap-orchestrator\\\\roadmap_orchestrator.go\",\n      \"type\": \"Go\",\n      \"description\": \"PhaseResult stores th..."
  },
  {
    "path": "tools\\realtime-dashboard.go",
    "type": "report",
    "content_snippet": "package tools\r\n\r\nimport (\r\n\t\"encoding/json\"\r\n\t\"fmt\"\r\n\t\"log\"\r\n\t\"net/http\"\r\n\t\"sync\"\r\n\t\"time\"\r\n\r\n\t\"github.com/gorilla/websocket\"\r\n)\r\n\r\n// RealtimeDashboard provides real-time metrics dashboard functional..."
  },
  {
    "path": "tools\\realtime-dashboard.go",
    "type": "logger",
    "content_snippet": "package tools\r\n\r\nimport (\r\n\t\"encoding/json\"\r\n\t\"fmt\"\r\n\t\"log\"\r\n\t\"net/http\"\r\n\t\"sync\"\r\n\t\"time\"\r\n\r\n\t\"github.com/gorilla/websocket\"\r\n)\r\n\r\n// RealtimeDashboard provides real-time metrics dashboard functional..."
  },
  {
    "path": "tools\\report-generator.go",
    "type": "logger",
    "content_snippet": "package tools\r\n\r\nimport (\r\n\t\"bytes\"\r\n\t\"encoding/json\"\r\n\t\"fmt\"\r\n\t\"html/template\"\r\n\t\"log\"\r\n\t\"os\"\r\n\t\"path/filepath\"\r\n\t\"time\"\r\n)\r\n\r\n// ReportGenerator handles automated report generation\r\ntype ReportGener..."
  },
  {
    "path": "tools\\report-generator.go",
    "type": "report",
    "content_snippet": "package tools\r\n\r\nimport (\r\n\t\"bytes\"\r\n\t\"encoding/json\"\r\n\t\"fmt\"\r\n\t\"html/template\"\r\n\t\"log\"\r\n\t\"os\"\r\n\t\"path/filepath\"\r\n\t\"time\"\r\n)\r\n\r\n// ReportGenerator handles automated report generation\r\ntype ReportGener..."
  },
  {
    "path": "tools\\scripts\\gen_build_and_coverage_reports.go",
    "type": "report",
    "content_snippet": "// tools/scripts/gen_build_and_coverage_reports.go\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"os\"\r\n\t\"os/exec\"\r\n)\r\n\r\nfunc main() {\r\n\tfmt.Println(\"=== G√©n√©ration du rapport de build ===\")\r\n\tbuild := exec.Co..."
  },
  {
    "path": "tools\\scripts\\gen_docs_and_archive.go",
    "type": "report",
    "content_snippet": "// tools/scripts/gen_docs_and_archive.go\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"os\"\r\n\t\"os/exec\"\r\n)\r\n\r\nfunc main() {\r\n\tfmt.Println(\"=== G√©n√©ration de la documentation technique ===\")\r\n\treadme := \"READM..."
  },
  {
    "path": "tools\\scripts\\gap_analysis.go",
    "type": "report",
    "content_snippet": "// tools/scripts/gap_analysis.go\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"os\"\r\n\t\"strings\"\r\n)\r\n\r\ntype NeutralizedFile struct {\r\n\tPath   string `json:\"path\"`\r\n\tReason string `json:\"reason\"`\r\n}\r\n\r\nfunc main(..."
  },
  {
    "path": "toolsext\\sync-logger-simple.go",
    "type": "logger",
    "content_snippet": "// Package toolsext provides sync logger functionality\npackage toolsext\n\nimport (\n\t\"log\"\n\t\"os\"\n\t\"time\"\n)\n\n// ExtSyncLogger represents a simple synchronization logger\ntype ExtSyncLogger struct {\n\tlogge..."
  },
  {
    "path": "web\\README.md",
    "type": "logger",
    "content_snippet": "# üéØ Phase 6.1.1 - Dashboard de Synchronisation\r\n\r\nCe document d√©crit l'impl√©mentation compl√®te du **Dashboard de Synchronisation** de la Phase 6.1.1, comprenant l'interface web de monitoring, la..."
  },
  {
    "path": "web\\dashboard\\sync_dashboard.go",
    "type": "logger",
    "content_snippet": "package dashboard\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"log\"\n\t\"net/http\"\n\t\"time\"\n\n\t\"github.com/gin-gonic/gin\"\n\t\"github.com/gorilla/websocket\"\n)\n\n// SyncEngine defines the interface for the synchronization eng..."
  }
]