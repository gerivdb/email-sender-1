{
  "name": "EMAIL SENDER 1",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "id": "8a8459bc-d38a-43ef-92b3-5517ba97a1a1",
      "name": "Set Intention Message",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        6180,
        6260
      ]
    },
    {
      "parameters": {
        "functionCode": "// On r√©cup√®re les donn√©es de chaque input\nconst iaOutput = $input.all()[0][0].json; // message IA\nconst contacts = $input.all()[1]; // liste de contacts\n\n// On g√©n√®re un message personnalis√© pour chaque contact\nconst results = contacts.map(contact => {\n  const nomProg = contact.json[\"Nom Prog\"] || contact.json[\"Name\"] || \"Bonjour\";\n  const ville = contact.json[\"Ville\"] || \"\";\n  const lieu = contact.json[\"bdd-Lieux\"] || \"\";\n\n  const message = `Bonjour ${nomProg},\n\n${iaOutput.choices[0].message.content}\n\nüìç Lieu : ${lieu}\nüìç Ville : ${ville}\n\nBien √† vous,`;\n\n  return {\n    json: {\n      to: contact.json[\"Email\"],\n      nomContact: nomProg,\n      ville,\n      message\n    }\n  };\n});\n\nreturn results;\n"
      },
      "id": "f8aa20be-3218-4144-9b82-23592378def7",
      "name": "Personnalisation Message",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        8680,
        7180
      ]
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "getAll",
        "databaseId": {
          "__rl": true,
          "value": "1c481449-f795-8095-a5cf-cc4418e7ddb7",
          "mode": "list",
          "cachedResultName": "LOT1",
          "cachedResultUrl": "https://www.notion.so/1c481449f7958095a5cfcc4418e7ddb7"
        },
        "options": {}
      },
      "id": "671105b1-2405-4f83-8f16-3c4ad34a22a6",
      "name": "Update Notion Status",
      "type": "n8n-nodes-base.notion",
      "typeVersion": 1,
      "position": [
        9580,
        5940
      ],
      "credentials": {
        "notionApi": {
          "id": "gFvw0ObPabSVTQIp",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "984d2948-c77e-4500-a49b-3e3cb2ead277",
      "name": "Fin Phase 1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        9620,
        6940
      ]
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "filters": {}
      },
      "id": "8d417011-1f73-4706-abeb-be21c52f1195",
      "name": "Trigger Gmail R√©ponse",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [
        10040,
        5980
      ]
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "getAll",
        "databaseId": {
          "__rl": true,
          "value": "1c481449-f795-8095-a5cf-cc4418e7ddb7",
          "mode": "list",
          "cachedResultName": "LOT1",
          "cachedResultUrl": "https://www.notion.so/1c481449f7958095a5cfcc4418e7ddb7"
        },
        "options": {}
      },
      "id": "c51a167d-b1de-4f76-a30e-ceca5b8c8742",
      "name": "Cherche Email Notion",
      "type": "n8n-nodes-base.notion",
      "typeVersion": 1,
      "position": [
        10380,
        6280
      ],
      "credentials": {
        "notionApi": {
          "id": "gFvw0ObPabSVTQIp",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "resource": "databasePage",
        "databaseId": {
          "__rl": true,
          "value": "1c481449-f795-8095-a5cf-cc4418e7ddb7",
          "mode": "list",
          "cachedResultName": "LOT1",
          "cachedResultUrl": "https://www.notion.so/1c481449f7958095a5cfcc4418e7ddb7"
        },
        "options": {}
      },
      "id": "a825d3c5-3e08-4f5d-bc86-873f3575349f",
      "name": "Update Notion R√©pondu",
      "type": "n8n-nodes-base.notion",
      "typeVersion": 1,
      "position": [
        10140,
        6600
      ],
      "credentials": {
        "notionApi": {
          "id": "gFvw0ObPabSVTQIp",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {},
      "id": "4cbf49bc-5e74-4de1-94f8-1b9521dd5270",
      "name": "Check Piste",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        10360,
        6720
      ]
    },
    {
      "parameters": {
        "resource": "databasePage",
        "databaseId": {
          "__rl": true,
          "value": "1c481449-f795-8095-a5cf-cc4418e7ddb7",
          "mode": "list",
          "cachedResultName": "LOT1",
          "cachedResultUrl": "https://www.notion.so/1c481449f7958095a5cfcc4418e7ddb7"
        },
        "options": {}
      },
      "id": "8ecc501d-e8b5-48aa-9d8c-abac233bf03d",
      "name": "Set Piste",
      "type": "n8n-nodes-base.notion",
      "typeVersion": 1,
      "position": [
        10140,
        6960
      ],
      "credentials": {
        "notionApi": {
          "id": "gFvw0ObPabSVTQIp",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {},
      "id": "4d4a2278-30ab-4420-8273-5d2ca72c69d7",
      "name": "Check Nego",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        10380,
        7080
      ]
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "getAll",
        "databaseId": {
          "__rl": true,
          "value": "1c481449-f795-8095-a5cf-cc4418e7ddb7",
          "mode": "list",
          "cachedResultName": "LOT1",
          "cachedResultUrl": "https://www.notion.so/1c481449f7958095a5cfcc4418e7ddb7"
        },
        "options": {}
      },
      "id": "c940c939-48a7-45a7-897a-669770e0e96c",
      "name": "Set Nego",
      "type": "n8n-nodes-base.notion",
      "typeVersion": 1,
      "position": [
        10460,
        7380
      ],
      "credentials": {
        "notionApi": {
          "id": "gFvw0ObPabSVTQIp",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {},
      "id": "47f136ed-17fc-4e0d-b8e2-c1c48c52d589",
      "name": "Check DEAL",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        10720,
        6180
      ]
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "f4641f7364224dbdba9151649dca276cce21ac806f327b8c9056b35ba41be559@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "BOOKING1"
        },
        "additionalFields": {}
      },
      "id": "6a335ea7-a5aa-4af4-b9e2-405d16c2172b",
      "name": "Create GCal Event",
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1,
      "position": [
        10800,
        6460
      ],
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "oO79tp1wawPKDEpg",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "getAll",
        "databaseId": {
          "__rl": true,
          "value": "1c481449-f795-8095-a5cf-cc4418e7ddb7",
          "mode": "list",
          "cachedResultName": "LOT1",
          "cachedResultUrl": "https://www.notion.so/1c481449f7958095a5cfcc4418e7ddb7"
        },
        "options": {}
      },
      "id": "eb7f44cf-b9c9-4bef-b75c-24d13d070606",
      "name": "Update Notion with Date",
      "type": "n8n-nodes-base.notion",
      "typeVersion": 1,
      "position": [
        10920,
        6740
      ],
      "credentials": {
        "notionApi": {
          "id": "gFvw0ObPabSVTQIp",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "3802bc6c-c156-479d-81a7-24a1235f0d18",
      "name": "Pr√©parer Logistique",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        11100,
        6940
      ]
    },
    {
      "parameters": {},
      "id": "3b7319d1-e905-4843-8f1e-30793b97e403",
      "name": "Concert ‚Üí Timer J+3",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [
        11420,
        5960
      ],
      "webhookId": "856881c8-cccd-4869-96af-c7c3afe1d2e6"
    },
    {
      "parameters": {
        "additionalFields": {}
      },
      "id": "94fae03b-e4d8-4644-9e0b-6163f717dc6e",
      "name": "Send Thanks Mail",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 1,
      "position": [
        11500,
        6360
      ]
    },
    {
      "parameters": {
        "resource": "databasePage",
        "databaseId": {
          "__rl": true,
          "value": "1c481449-f795-8095-a5cf-cc4418e7ddb7",
          "mode": "list",
          "cachedResultName": "LOT1",
          "cachedResultUrl": "https://www.notion.so/1c481449f7958095a5cfcc4418e7ddb7"
        },
        "options": {}
      },
      "id": "8553d648-934a-4e37-9794-1eaf1d6a0449",
      "name": "Update Notion Feedback",
      "type": "n8n-nodes-base.notion",
      "typeVersion": 1,
      "position": [
        11680,
        6700
      ],
      "credentials": {
        "notionApi": {
          "id": "gFvw0ObPabSVTQIp",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "cc9d92dc-5516-4a92-b4c4-88a18e68d146",
      "name": "Trigger Internal Review",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        11680,
        7120
      ]
    },
    {
      "parameters": {
        "path": "3b16dfba-29b4-43fe-af9b-233a91be52a9",
        "formFields": {
          "values": [
            {}
          ]
        },
        "options": {}
      },
      "id": "19feb474-82f7-4bfe-9588-dd5d70c6b8e9",
      "name": "Group Vote Review",
      "type": "n8n-nodes-base.formTrigger",
      "typeVersion": 1,
      "position": [
        12200,
        5980
      ],
      "webhookId": "3b16dfba-29b4-43fe-af9b-233a91be52a9"
    },
    {
      "parameters": {},
      "id": "f367220b-a403-4288-87ce-d1e3899a2ea6",
      "name": "Check Programmateur Feedback",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        12320,
        6240
      ]
    },
    {
      "parameters": {
        "resource": "databasePage",
        "databaseId": {
          "__rl": true,
          "value": "1c481449-f795-8095-a5cf-cc4418e7ddb7",
          "mode": "list",
          "cachedResultName": "LOT1",
          "cachedResultUrl": "https://www.notion.so/1c481449f7958095a5cfcc4418e7ddb7"
        },
        "options": {}
      },
      "id": "b032b895-269e-490f-acb3-e7c48b7771b8",
      "name": "Create New Prospect Task",
      "type": "n8n-nodes-base.notion",
      "typeVersion": 1,
      "position": [
        12280,
        6600
      ],
      "credentials": {
        "notionApi": {
          "id": "gFvw0ObPabSVTQIp",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "83745350-c37c-4f6d-8397-675f912421db",
      "name": "End Workflow Global",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        12500,
        6920
      ]
    },
    {
      "parameters": {
        "content": "Init",
        "height": 920,
        "width": 260
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        6080,
        5900
      ],
      "id": "f2b081ee-acac-4a5b-ba2b-4c520665f055",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "Plages temporelles\n",
        "height": 1740,
        "width": 840,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        6480,
        5900
      ],
      "id": "3dd5fa33-8615-4f0d-a535-858a1b0b88ca",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "Pr√©paration du mail\n",
        "height": 1720,
        "width": 700,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        7560,
        5900
      ],
      "id": "b59a6337-cc99-4396-940b-3f17a585b003",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "f4641f7364224dbdba9151649dca276cce21ac806f327b8c9056b35ba41be559@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "BOOKING1"
        },
        "returnAll": true,
        "timeMin": "={{ new Date().toISOString() }}",
        "timeMax": "={{ new Date(Date.now() + 180*86400000).toISOString() }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.3,
      "position": [
        6540,
        5980
      ],
      "id": "2aef6729-c046-417c-9dfc-8b475b9a1313",
      "name": "Google Calendar",
      "alwaysOutputData": true,
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "oO79tp1wawPKDEpg",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "getAll",
        "databaseId": {
          "__rl": true,
          "value": "1c581449-f795-8088-b362-d4399dc7d9f3",
          "mode": "list",
          "cachedResultName": "Dispo Membres",
          "cachedResultUrl": "https://www.notion.so/1c581449f7958088b362d4399dc7d9f3"
        },
        "options": {}
      },
      "id": "fca56be8-017d-4f64-a02a-2db95909701b",
      "name": "Lecture Dispo des Groupes sur Notion",
      "type": "n8n-nodes-base.notion",
      "typeVersion": 1,
      "position": [
        6560,
        6480
      ],
      "alwaysOutputData": true,
      "credentials": {
        "notionApi": {
          "id": "gFvw0ObPabSVTQIp",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "resource": "draft",
        "operation": "getAll",
        "returnAll": true,
        "options": {}
      },
      "id": "fb17c164-0d0a-42a6-8373-f2402238ae6f",
      "name": "Get Gmail Template",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2,
      "position": [
        8700,
        6740
      ],
      "webhookId": "2ce04916-264b-426d-ba5c-caaf7fc8b0d1",
      "alwaysOutputData": true,
      "credentials": {
        "gmailOAuth2": {
          "id": "xKa629oVYYGTlvnn",
          "name": "Gmail account 2"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "const template = $json.payload.parts[0].body.data;\nconst decoded = Buffer.from(template, 'base64').toString('utf-8');\nconst injected = decoded.replace('<INJECT_MESSAGE>', $node[\"Personnalisation Message\"].json.message || '');\nreturn [{ json: { html: injected, to: $node[\"Personnalisation Message\"].json.to } }];"
      },
      "id": "3f5b2bd1-4485-4c55-8e51-339033be453b",
      "name": "Inject Message into HTML",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        8680,
        6520
      ]
    },
    {
      "parameters": {
        "resource": "draft",
        "subject": "Proposition ‚Äì Groupe en tourn√©e (automatis√©)",
        "message": "={{ $json.html }}",
        "options": {}
      },
      "id": "f0ef9b9c-0eba-4238-b366-3d28a84429d0",
      "name": "Create Final Gmail Draft",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2,
      "position": [
        8700,
        6260
      ],
      "webhookId": "7d821565-6395-4077-be41-c91c0b07c30a",
      "credentials": {
        "gmailOAuth2": {
          "id": "xKa629oVYYGTlvnn",
          "name": "Gmail account 2"
        }
      }
    },
    {
      "parameters": {
        "values": {
          "number": [
            {
              "name": "minutesMin",
              "value": 30
            },
            {
              "name": "minutesMax",
              "value": 60
            }
          ]
        },
        "options": {}
      },
      "id": "2649c986-4f25-4ae5-baef-dbed32b8cc7e",
      "name": "Set Delay Config",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        9080,
        6840
      ]
    },
    {
      "parameters": {
        "functionCode": "const min = $json.minutesMin || 30;\nconst max = $json.minutesMax || 60;\nconst delay = Math.floor(Math.random() * (max - min + 1)) + min;\nreturn [{ json: { waitDuration: delay } }];"
      },
      "id": "0777b823-c2f0-47d6-9f7f-2efe01efb5ee",
      "name": "Calc Random Delay",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        9100,
        6580
      ]
    },
    {
      "parameters": {
        "unit": "minutes"
      },
      "id": "80570037-507c-4767-a947-c009e69a5e8b",
      "name": "Wait Anti-Spam",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [
        9120,
        6400
      ],
      "webhookId": "c4b6021a-103f-4210-90c7-b43a583ace84"
    },
    {
      "parameters": {
        "content": "utilisation du template GMAIL",
        "height": 1720,
        "width": 620,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        9300,
        5880
      ],
      "id": "961a0805-6b9c-4014-8e97-00d76062a3f6",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "d√©lai entre les envois",
        "height": 920,
        "width": 260
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        9000,
        6240
      ],
      "id": "3b9052d3-12e9-4179-8103-34ec25e3a428",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "jsCode": "const pages = [];\n\nconst notionDatabaseId = \"1c581449f7958088b362d4399dc7d9f3\"; // ‚Üê Copi√© depuis Set Global Config\n\nfor (const item of items) {\n  const member = item.json.member || \"Membre inconnu\";\n  const status = item.json.status || \"unknown\";\n  const date = item.json.date || \"inconnue\";\n\n  pages.push({\n    json: {\n      parent: {\n        database_id: notionDatabaseId\n      },\n      properties: {\n        Name: {\n          title: [\n            {\n              text: {\n                content: `${member} indisponible`\n              }\n            }\n          ]\n        },\n        Date: {\n          date: {\n            start: date\n          }\n        },\n        Dispo: {\n          status: {\n            name: status === \"unavailable\" ? \"Pas dispo\" : \"Dispo\"\n          }\n        }\n      }\n    }\n  });\n}\n\nreturn pages;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        7080,
        6720
      ],
      "id": "2d466a34-fe8e-4ae9-950b-037df613f9d4",
      "name": "Cr√©er page Notion"
    },
    {
      "parameters": {
        "jsCode": "// üß† Objectif : identifier les jours \"disponibles\" √† cr√©er dans Google Calendar et/ou Notion\n\nconst available = items.filter(item => item.json.status === 'available');\n\nreturn available.map(day => {\n  return {\n    json: {\n      action: 'create',\n      date: day.json.date,\n      target: ['notion', 'gcal'], // ou ajuster selon logique IA\n    }\n  };\n});\n"
      },
      "name": "Analyse et sync Notion + Google1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        7100,
        6460
      ],
      "id": "6e40cbd6-8d66-4585-b633-2971943f3981"
    },
    {
      "parameters": {
        "jsCode": "const events = [];\n\nconst calendarId = \"f4641f7364224ddbba9151649dca276cce21ac80f627b8c9056b35ba41be559@group.calendar.google.com\"; // BOOKING1\n\nfor (const item of items) {\n  if (\n    item.json.action === 'create' &&\n    item.json.target.includes('gcal')\n  ) {\n    const date = item.json.date;\n\n    events.push({\n      json: {\n        calendarId: calendarId,\n        summary: `Cr√©neau IA libre - ${date}`,\n        start: {\n          date: date // √©v√©nement sur la journ√©e enti√®re\n        },\n        end: {\n          date: date\n        },\n        transparency: 'transparent',\n        status: 'confirmed'\n      }\n    });\n  }\n}\n\nreturn events;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        6860,
        6980
      ],
      "id": "aa839f00-f3aa-4156-b7f8-3aedb96b5615",
      "name": "cr√©er event Google"
    },
    {
      "parameters": {
        "jsCode": "return [\n  {\n    json: {\n      prompt: `Voici une liste de cr√©neaux disponibles g√©n√©r√©s par IA. Merci de valider si l'un d'eux est coh√©rent et de proposer une action ou correction.`,\n      data: items.map(item => item.json)\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        6540,
        7200
      ],
      "id": "033fc06e-f2b4-41c2-a902-29b28a3fc2b6",
      "name": "Superviseur IA (DeepSeek v3)  (envoie erreur + code au mod√®le)"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://openrouter.ai/api/v1/chat/completions",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "openRouterApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        7040,
        7400
      ],
      "id": "3faccf85-c7bd-4d20-8ce0-abf8ebedb14c",
      "name": "Appel API",
      "alwaysOutputData": true,
      "retryOnFail": true,
      "credentials": {
        "openRouterApi": {
          "id": "GWgrj7r9bN07NdOc",
          "name": "OpenRouter account gerivonderbitsh@gmail.com"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "return [\n  {\n    json: {\n      model: \"deepseek/deepseek-chat-v3-0324:free\",\n      messages: [\n        {\n          role: \"user\",\n          content: \"Voici les cr√©neaux √† analyser :\\n\\n\" +\n                   JSON.stringify($json.data, null, 2) +\n                   \"\\n\\n\" +\n                   $json.prompt\n        }\n      ],\n      temperature: 0.7\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        6560,
        7400
      ],
      "id": "a0143ff5-d39f-446c-b1f9-dd148ae80ce1",
      "name": "Prep DeepSeek Cal",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e4389a98-70de-46bb-889e-4bd917cc7224",
              "name": "deepseek_message",
              "value": "={{ $json.choices[0].message.content }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        7880,
        6140
      ],
      "id": "8c5bdd98-92f0-4b2c-9d8c-d9b9dc76752b",
      "name": "extraction du content"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4868bf93-7add-4de2-8647-50167048ceb8",
              "name": "email_content",
              "value": "=<h2>üéØ Cr√©neaux propos√©s</h2>\n<pre style=\"white-space:pre-wrap; font-family:monospace;\">\n{{ $json.enrichedMessage }}\n</pre>\n\n<hr/>\n\n<h3>üé∏ Groupe de musique [Nom du groupe]</h3>\n<img src=\"https://cdn.site.com/groupe.jpg\" width=\"100%\" />\n\n<p>\n  üì∫ <a href=\"https://youtube.com/clip\">Voir le clip</a><br/>\n  üåê <a href=\"https://linktr.ee/groupe\">Linktree</a>\n</p>\n",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        8160,
        6020
      ],
      "id": "9e41aa7f-8fb7-43b5-ad77-04172596a52f",
      "name": "Injection HTML IA"
    },
    {
      "parameters": {
        "jsCode": "return [\n  {\n    json: {\n      intentMessage: \"Proposer un cr√©neau de concert\"\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        8180,
        6280
      ],
      "id": "0b562a88-11fd-448e-a06f-766731fd2384",
      "name": "Set intention Message"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e9352847-63df-45ca-bee8-de2e927dea19",
              "name": "=// Modification de l'acc√®s √† intentMessage\nconst message = input0[0]?.intentMessage || \"Message par d√©faut\";",
              "value": "Proposer un cr√©neau de concert sympa pour le groupe",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        7860,
        6520
      ],
      "id": "2fb47cfa-d040-495a-adee-76771c0f1775",
      "name": "Set - Intent Message IA",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "functionCode": "// üîÅ R√©cup√©ration des inputs (multi-inputs activ√©s)\nconst allInputs = $input.all();\n\n// üîê Fonction de conversion s√©curis√©e en tableau\nconst toArray = val => Array.isArray(val) ? val : (val ? [val] : []);\n\n// ‚úÖ Initialisation des variables d'entr√©e (toujours des tableaux)\nconst input0 = toArray(allInputs[0]);\nconst input1 = toArray(allInputs[1]);\nconst input2 = toArray(allInputs[2]);\n\n// üß† Extraction du message d'intention avec fallback\nconst message = input0[0]?.json?.intentMessage || \"Message par d√©faut: Proposer un cr√©neau de concert\";\n\n// üìÖ Extraction des dates disponibles\nconst availableDates = input1\n  .map(item => item.json.date)\n  .filter(date => date && isValidDate(date));\n\n// üìÖ Extraction des dates bloqu√©es\nconst blockedDates = new Set(\n  input2\n    .map(item => item.json.date)\n    .filter(date => date && isValidDate(date))\n);\n\n// üîç Fonction de validation de date\nfunction isValidDate(dateStr) {\n  const date = new Date(dateStr);\n  return date instanceof Date && !isNaN(date);\n}\n\n// ‚úÖ Filtrage final\nconst finalDates = availableDates.filter(date => !blockedDates.has(date));\n\n// üßæ Construction du message enrichi\nconst enriched = `${message}\\n\\nüéØ Cr√©neaux disponibles :\\n${\n  finalDates.length > 0 ? finalDates.join('\\n') : 'Aucune date disponible actuellement'\n}`;\n\n// üì§ Retour avec debug\nreturn [{\n  json: {\n    enrichedMessage: enriched,\n    intentMessage: message,\n    availableDates: finalDates,\n    debug: {\n      inputsReceived: allInputs.length,\n      totalAvailable: availableDates.length,\n      totalBlocked: blockedDates.size,\n      finalCount: finalDates.length,\n    }\n  }\n}];\n"
      },
      "id": "2c1d6386-ecdc-4ac4-a605-b696c712b170",
      "name": "Injection dans message IA (fusion intent + dates)",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        8240,
        6780
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "76d088ab-d236-47ab-9267-281a61306e4c",
              "name": "date",
              "value": "2025-04-05",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        7640,
        6740
      ],
      "id": "239178ed-70fd-44fc-be83-6690db4422ae",
      "name": "Set - Dates GCal Potentielles",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9caecf9a-802b-4709-b35e-604e1d290583",
              "name": "date",
              "value": "2025-04-06",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        7640,
        6980
      ],
      "id": "a339799f-95a6-4169-b0fd-a031e1df4b5d",
      "name": "Set - Dates Bloqu√©es Membres",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://openrouter.ai/api/v1/chat/completions",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "openRouterApi",
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "=",
        "body": "={{ JSON.stringify($json.apiRequestBody) }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        8060,
        7120
      ],
      "id": "236641c7-eca0-44b4-953c-aedede6b2db5",
      "name": "Call DeepSeek AI",
      "alwaysOutputData": true,
      "retryOnFail": true,
      "credentials": {
        "openRouterApi": {
          "id": "GWgrj7r9bN07NdOc",
          "name": "OpenRouter account gerivonderbitsh@gmail.com"
        }
      }
    },
    {
      "parameters": {
        "content": "Mise au point du mail ",
        "height": 1660,
        "width": 380,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        8540,
        5920
      ],
      "id": "c6a91901-0632-4efc-a854-41959ac49f65",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "514445ed-c38e-40fa-a37e-3d41ed9fd7c2",
              "name": "aiMessage",
              "value": "={{ $json.choices[0].message.content }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        7860,
        7320
      ],
      "id": "f4b3a213-ff60-4dcf-bd39-8f618f0c55ff",
      "name": "Set Message G√©n√©r√© IA",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "getAll",
        "databaseId": {
          "__rl": true,
          "value": "1c481449-f795-8095-a5cf-cc4418e7ddb7",
          "mode": "list",
          "cachedResultName": "LOT1",
          "cachedResultUrl": "https://www.notion.so/1c481449f7958095a5cfcc4418e7ddb7"
        },
        "returnAll": true,
        "options": {
          "filter": {
            "singleCondition": {
              "key": "Etat du mail|multi_select",
              "condition": "contains",
              "multiSelectValue": "PROSPECTüïí En attente d'envoi"
            }
          }
        }
      },
      "id": "894f9cd2-f4f7-4ecd-a5b1-7fe91fb87260",
      "name": "Get Notion Contacts LOT1",
      "type": "n8n-nodes-base.notion",
      "typeVersion": 1,
      "position": [
        7640,
        7460
      ],
      "alwaysOutputData": true,
      "credentials": {
        "notionApi": {
          "id": "gFvw0ObPabSVTQIp",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        8200,
        7420
      ],
      "id": "97ae2b6f-b80f-4525-8e63-e2a25cefce6e",
      "name": "Fusion IA + Contacts",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "jsCode": "return [\n  {\n    json: {\n      apiRequestBody: {\n        model: \"deepseek/deepseek-chat-v3-0324:free\",\n        messages: [\n          {\n            role: \"system\",\n            content: \"Tu es un assistant pour la r√©daction d'emails sobres, sans emoji ni humour, √† destination de programmateurs de salles.\"\n          },\n          {\n            role: \"user\",\n            content: (() => {\n              const intro = `Objet : GRIBITCH ‚Äì RECHERCHE DATES CONCERT SEPT-OCT25<br><br>\nBonjour,<br><br>\nNous sommes <strong>GRIBITCH</strong>, un groupe alt-rock, ou OVNI glitter-punk.<br>\nNous cherchons des dates o√π performer. Nous planifions les cr√©neaux suivants :<br>\nSeptembre, octobre 2025, de pr√©f√©rence les Jeudi, Vendredi, Samedi.`;\n\n              const blockedDates = Array.isArray($json.blockedDates) ? $json.blockedDates : [];\n              const blocked = blockedDates.length\n                ? `<br><br>‚ùå √Ä l'exception des dates suivantes d√©j√† book√©es :<br>${blockedDates.join(', ')}`\n                : '';\n\n              const links = `<br><br>\nüéµ <a href=\"https://linktr.ee/gribitch\" target=\"_blank\">Linktree</a><br>\nüì∫ <a href=\"https://www.youtube.com/user/GRIBITCHBROTHERS\" target=\"_blank\">Youtube</a>`;\n\n              const footer = `<br><br>\n[image du groupe]<br><br>\nBien √† vous,<br>\nGeri des Gribitch<br>\nüìû <a href=\"tel:+33663489058\">06 63 48 90 58</a><br>\nüìß <a href=\"mailto:grib1tch@gmail.com\">grib1tch@gmail.com</a>`;\n\n              return `${intro}${blocked}${links}${footer}`;\n            })()\n          }\n        ],\n        temperature: 0.7\n      }\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        8240,
        6980
      ],
      "id": "06373485-0769-47e3-9186-2ac7e909a5da",
      "name": "Prepare DeepSeek Request",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "content": "utilisation du template GMAIL",
        "height": 1720,
        "width": 620,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        9980,
        5880
      ],
      "id": "429a26dc-88cf-45c5-98c4-65528ad50da3",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "content": "utilisation du template GMAIL",
        "height": 1720,
        "width": 620,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        10660,
        5880
      ],
      "id": "26ddcbba-c26e-41c4-8c71-89d048a9269c",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "content": "utilisation du template GMAIL",
        "height": 1720,
        "width": 620
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        11340,
        5880
      ],
      "id": "d8679572-aef3-4d0d-bb2c-e6dd340a5deb",
      "name": "Sticky Note9"
    },
    {
      "parameters": {
        "content": "utilisation du template GMAIL",
        "height": 1720,
        "width": 620,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        12060,
        5880
      ],
      "id": "68317e2a-7f6c-4f8f-baa2-86be28d19dad",
      "name": "Sticky Note10"
    },
    {
      "parameters": {
        "resource": "draft",
        "subject": "={{ 'Proposition ‚Äì Groupe en tourn√©e (automatis√©)' }}",
        "message": "={{ $json.message }}",
        "options": {
          "sendTo": "={{ $json.to }}"
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        9360,
        5940
      ],
      "id": "76b084c4-a4ec-45cd-91a5-f14d3b26bb03",
      "name": "R√©dac draft",
      "webhookId": "165e7927-f969-4ee7-a829-2a16faf0141e",
      "credentials": {
        "gmailOAuth2": {
          "id": "xKa629oVYYGTlvnn",
          "name": "Gmail account 2"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  item.json.myNewField = 1;\n}\n\nreturn $input.all();"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        9380,
        6260
      ],
      "id": "400d4463-1df0-40d1-9482-e4717f27994b",
      "name": "verif d√©lai entre les envois"
    },
    {
      "parameters": {
        "operation": "sendAndWait",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        9640,
        6520
      ],
      "id": "4a8c98fe-9566-402c-9ebd-687b246d047a",
      "name": "Envoi du msg ssi d√©lai respect√© avec attente r√©ponse",
      "webhookId": "dffd8bf6-fe4c-48f6-88ce-12e82a695da7",
      "credentials": {
        "gmailOAuth2": {
          "id": "xKa629oVYYGTlvnn",
          "name": "Gmail account 2"
        }
      }
    },
    {
      "parameters": {},
      "id": "d81114a9-5c7c-4ad6-a74d-a7fab78788af",
      "name": "Start Phase 1",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        6140,
        6000
      ]
    },
    {
      "parameters": {
        "functionCode": "// Assuming the input comes from 'Consolider Indisponibilit√©s'\nconst inputItem = items[0];\nconst busyDatesArray = inputItem?.json?.busyDates || [];\nconst busyDates = new Set(busyDatesArray);\n\nconst availableSlots = [];\nconst today = new Date();\ntoday.setHours(12, 0, 0, 0); // Set to midday Paris time\n\nconst numberOfDaysToCheck = 180; // Check the next 180 days\n\nfor (let i = 0; i < numberOfDaysToCheck; i++) {\n    const currentDate = new Date(today);\n    currentDate.setDate(today.getDate() + i);\n    currentDate.setHours(12, 0, 0, 0);\n\n    const formattedDate = currentDate.toISOString().split('T')[0]; // YYYY-MM-DD\n\n    const dayOfWeek = currentDate.getDay(); // 0 = Sunday, 6 = Saturday\n    if (!busyDates.has(formattedDate) && (dayOfWeek === 5 || dayOfWeek === 6)) { // 5 = Friday, 6 = Saturday\n        availableSlots.push({ json: { date: formattedDate, status: 'available' } });\n    }\n}\n\nif (availableSlots.length === 0) {\n  return [];\n}\n\nreturn availableSlots;"
      },
      "id": "520ec725-b015-4e5b-a721-25808d38833d",
      "name": "Calculer Plages Libres",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        7100,
        6240
      ]
    },
    {
      "parameters": {
        "jsCode": "// Nouvelle version optimis√©e avec cache et gestion d'erreurs\nconst { googleEvents, notionPages } = $input.all();\n\n// 1. Cache des dates d√©j√† trait√©es\nconst dateCache = new Map();\nconst addToCache = (dateStr) => {\n  const dateKey = new Date(dateStr).toISOString().split('T')[0];\n  if (!dateCache.has(dateKey)) {\n    dateCache.set(dateKey, true);\n    return dateKey;\n  }\n  return null;\n};\n\n// 2. Process Google Calendar events\nconst processGCal = (events) => {\n  return events.flatMap(event => {\n    try {\n      const start = event.json.start?.date || event.json.start?.dateTime?.split('T')[0];\n      const end = event.json.end?.date || event.json.start?.dateTime?.split('T')[0];\n      \n      if (!start) return [];\n      \n      const dates = [];\n      let current = new Date(start);\n      const endDate = new Date(end || start);\n      \n      while (current <= endDate) {\n        const dateKey = addToCache(current);\n        if (dateKey) dates.push(dateKey);\n        current.setDate(current.getDate() + 1);\n      }\n      return dates;\n    } catch (error) {\n      console.error('Error processing Google event:', error);\n      return [];\n    }\n  });\n};\n\n// 3. Process Notion pages\nconst processNotion = (pages) => {\n  return pages.flatMap(page => {\n    try {\n      const propName = 'date'; // √Ä adapter\n      if (!page?.json?.properties?.[propName]?.date) return [];\n      \n      const { start, end } = page.json.properties[propName].date;\n      if (!start) return [];\n      \n      const dates = [];\n      let current = new Date(start);\n      const endDate = end ? new Date(end) : new Date(start);\n      \n      while (current <= endDate) {\n        const dateKey = addToCache(current);\n        if (dateKey) dates.push(dateKey);\n        current.setDate(current.getDate() + 1);\n      }\n      return dates;\n    } catch (error) {\n      console.error('Error processing Notion page:', error);\n      return [];\n    }\n  });\n};\n\n// Ex√©cution\nconst gcalDates = processGCal(googleEvents);\nconst notionDates = processNotion(notionPages);\nconst allDates = [...gcalDates, ...notionDates]\n  .filter(Boolean)\n  .sort((a,b) => new Date(a) - new Date(b));\n\nreturn [{ \n  json: { \n    busyDates: allDates,\n    stats: {\n      gcal: gcalDates.length,\n      notion: notionDates.length,\n      duplicates: (gcalDates.length + notionDates.length) - allDates.length\n    }\n  } \n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        6860,
        6240
      ],
      "id": "7369eac8-c3e9-4d33-999e-837400f50cf3",
      "name": "Consolider Indisponibilit√©s",
      "alwaysOutputData": true
    }
  ],
  "pinData": {
    "Start Phase 1": [
      {
        "json": {}
      }
    ]
  },
  "connections": {
    "Set Intention Message": {
      "main": [
        [
          {
            "node": "Google Calendar",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Personnalisation Message": {
      "main": [
        [
          {
            "node": "Get Gmail Template",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Notion Status": {
      "main": [
        [
          {
            "node": "verif d√©lai entre les envois",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Trigger Gmail R√©ponse": {
      "main": [
        [
          {
            "node": "Cherche Email Notion",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cherche Email Notion": {
      "main": [
        [
          {
            "node": "Update Notion R√©pondu",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Notion R√©pondu": {
      "main": [
        [
          {
            "node": "Check Piste",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Piste": {
      "main": [
        [
          {
            "node": "Set Piste",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Piste": {
      "main": [
        [
          {
            "node": "Check Nego",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Nego": {
      "main": [
        [
          {
            "node": "Set Nego",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Nego": {
      "main": [
        [
          {
            "node": "Check DEAL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check DEAL": {
      "main": [
        [
          {
            "node": "Create GCal Event",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create GCal Event": {
      "main": [
        [
          {
            "node": "Update Notion with Date",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Notion with Date": {
      "main": [
        [
          {
            "node": "Pr√©parer Logistique",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pr√©parer Logistique": {
      "main": [
        [
          {
            "node": "Concert ‚Üí Timer J+3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Concert ‚Üí Timer J+3": {
      "main": [
        [
          {
            "node": "Send Thanks Mail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Thanks Mail": {
      "main": [
        [
          {
            "node": "Update Notion Feedback",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Notion Feedback": {
      "main": [
        [
          {
            "node": "Trigger Internal Review",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Group Vote Review": {
      "main": [
        [
          {
            "node": "Check Programmateur Feedback",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Programmateur Feedback": {
      "main": [
        [
          {
            "node": "Create New Prospect Task",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create New Prospect Task": {
      "main": [
        [
          {
            "node": "End Workflow Global",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Calendar": {
      "main": [
        [
          {
            "node": "Consolider Indisponibilit√©s",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Lecture Dispo des Groupes sur Notion": {
      "main": [
        [
          {
            "node": "Consolider Indisponibilit√©s",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Gmail Template": {
      "main": [
        [
          {
            "node": "Inject Message into HTML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Inject Message into HTML": {
      "main": [
        [
          {
            "node": "Create Final Gmail Draft",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Final Gmail Draft": {
      "main": [
        [
          {
            "node": "Set Delay Config",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Delay Config": {
      "main": [
        [
          {
            "node": "Calc Random Delay",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Calc Random Delay": {
      "main": [
        [
          {
            "node": "Wait Anti-Spam",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cr√©er page Notion": {
      "main": [
        [
          {
            "node": "Superviseur IA (DeepSeek v3)  (envoie erreur + code au mod√®le)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyse et sync Notion + Google1": {
      "main": [
        [
          {
            "node": "Cr√©er page Notion",
            "type": "main",
            "index": 0
          },
          {
            "node": "cr√©er event Google",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "cr√©er event Google": {
      "main": [
        [
          {
            "node": "Superviseur IA (DeepSeek v3)  (envoie erreur + code au mod√®le)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Superviseur IA (DeepSeek v3)  (envoie erreur + code au mod√®le)": {
      "main": [
        [
          {
            "node": "Analyse et sync Notion + Google1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Prep DeepSeek Cal",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prep DeepSeek Cal": {
      "main": [
        [
          {
            "node": "Appel API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Appel API": {
      "main": [
        [
          {
            "node": "extraction du content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "extraction du content": {
      "main": [
        [
          {
            "node": "Injection HTML IA",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Injection HTML IA": {
      "main": [
        [
          {
            "node": "Set intention Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set intention Message": {
      "main": [
        [
          {
            "node": "Set - Intent Message IA",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set - Intent Message IA": {
      "main": [
        [
          {
            "node": "Injection dans message IA (fusion intent + dates)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Injection dans message IA (fusion intent + dates)": {
      "main": [
        [
          {
            "node": "Prepare DeepSeek Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set - Dates GCal Potentielles": {
      "main": [
        [
          {
            "node": "Injection dans message IA (fusion intent + dates)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set - Dates Bloqu√©es Membres": {
      "main": [
        [
          {
            "node": "Injection dans message IA (fusion intent + dates)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call DeepSeek AI": {
      "main": [
        [
          {
            "node": "Set Message G√©n√©r√© IA",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Message G√©n√©r√© IA": {
      "main": [
        [
          {
            "node": "Fusion IA + Contacts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Notion Contacts LOT1": {
      "main": [
        [
          {
            "node": "Fusion IA + Contacts",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Fusion IA + Contacts": {
      "main": [
        []
      ]
    },
    "Prepare DeepSeek Request": {
      "main": [
        [
          {
            "node": "Call DeepSeek AI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait Anti-Spam": {
      "main": [
        [
          {
            "node": "R√©dac draft",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "R√©dac draft": {
      "main": [
        [
          {
            "node": "Update Notion Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "verif d√©lai entre les envois": {
      "main": [
        [
          {
            "node": "Envoi du msg ssi d√©lai respect√© avec attente r√©ponse",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Envoi du msg ssi d√©lai respect√© avec attente r√©ponse": {
      "main": [
        [
          {
            "node": "Fin Phase 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Start Phase 1": {
      "main": [
        [
          {
            "node": "Set Intention Message",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Notion Contacts LOT1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Lecture Dispo des Groupes sur Notion",
            "type": "main",
            "index": 0
          },
          {
            "node": "Set - Dates GCal Potentielles",
            "type": "main",
            "index": 0
          },
          {
            "node": "Set - Dates Bloqu√©es Membres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Calculer Plages Libres": {
      "main": [
        []
      ]
    },
    "Consolider Indisponibilit√©s": {
      "main": [
        [
          {
            "node": "Calculer Plages Libres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "versionId": "795361e3-346c-4715-9572-18f5f5f39841",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "d13e503b3cbf5fefda6ae06a9383bb7219443a180483b51e0a815b36d3363952"
  },
  "id": "uNAkKqDyUcFaPkkh",
  "tags": []
}
