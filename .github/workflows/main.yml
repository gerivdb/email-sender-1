jobs:
  build:
    runs-on: windows-2022
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          cache: npm
          node-version: 20
      - name: Vérifier la version de PowerShell
        run: |
          $PSVersionTable.PSVersion
        shell: powershell
      - name: Installer les modules PowerShell
        run: |
          Install-Module -Name Pester -Force -SkipPublisherCheck -Scope CurrentUser
          Install-Module -Name PSScriptAnalyzer -Force -Scope CurrentUser
        shell: powershell
      - name: Analyser le code avec PSScriptAnalyzer
        run: |
          try {
            $results = Invoke-ScriptAnalyzer -Path ./development/scripts -Recurse -Severity Error
            if ($results) {
              $results | Format-Table -AutoSize
              Write-Error "Des erreurs ont été détectées par PSScriptAnalyzer"
              exit 1
            }
          } catch {
            Write-Error "Erreur lors de l'analyse du code : $_"
            exit 1
          }
        shell: powershell
      - name: Exécuter les tests TestOmnibus
        run: "try {\n  # Créer les répertoires de résultats s'ils n'existent pas\n  if (-not (Test-Path -Path \"scripts\\utils\\TestOmnibus\\Results\")) {\n    New-Item -Path \"scripts\\utils\\TestOmnibus\\Results\" -ItemType Directory -Force | Out-Null\n  }\n  \n  # Exécuter TestOmnibus\n  .\\development\\scripts\\utils\\TestOmnibus\\Invoke-EnhancedTestOmnibus.ps1 -TestPath '.\\development\\scripts\\utils\\ProactiveOptimization\\tests' -UseAdvancedOptimization\n  \n  # Vérifier si des erreurs se sont produites\n  if ($LASTEXITCODE -ne 0) {\n    Write-Error \"Des erreurs se sont produites lors de l'exécution des tests\"\n    exit 1\n  }\n} catch {\n  Write-Error \"Erreur lors de l'exécution des tests : $_\"\n  exit 1\n}\n"
        shell: powershell
      - name: Enregistrer les résultats des tests
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: warn
          name: test-results
          path: |
            development/scripts/utils/TestOmnibus/Results/**
            development/scripts/utils/ProactiveOptimization/development/testing/tests/results/**
      - name: Créer package.json de base si nécessaire
        run: "if (-not (Test-Path -Path \"package.json\")) {\n  @{\n    name = \"email-sender-1\"\n    version = \"0.1.0\"\n    description = \"Email Sender Project\"\n    scripts = @{\n      test = \"echo 'No tests configured yet'\"\n    }\n    dependencies = @{}\n    devDependencies = @{}\n  } | ConvertTo-Json | Out-File -FilePath \"package.json\" -Encoding utf8\n  \n  Write-Host \"Un fichier package.json de base a été créé. Vous pourrez l'enrichir ultérieurement.\"\n} else {\n  Write-Host \"Le fichier package.json existe déjà.\"\n}\n"
        shell: powershell
name: PowerShell et Node.js Workflow
"on":
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
