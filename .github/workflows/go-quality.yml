jobs:
  quality:
    name: Validation du code Go
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: "1.24.4"
      - name: Vérifier la version de Go
        run: |
          REQUIRED_GO_VERSION=$(grep "go 1.24.4" go.mod | awk '{print $2}')
          CURRENT_GO_VERSION=$(go version | awk '{print $3}' | sed 's/go//')
          if [ "$REQUIRED_GO_VERSION" != "$CURRENT_GO_VERSION" ]; then
            echo "Erreur: La version de Go dans go.mod ($REQUIRED_GO_VERSION) ne correspond pas à la version installée ($CURRENT_GO_VERSION)."
            exit 1
          fi
      - name: Installation des outils
        run: |
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
          go install golang.org/x/tools/cmd/goimports@latest
          go install mvdan.cc/gofumpt@latest
          go install github.com/securego/gosec/v2/cmd/gosec@latest
      - name: Formatage et imports
        run: |
          gofumpt -l -w .
          goimports -w .
      - name: Verifications
        run: |
          go mod tidy
          go vet ./...
          golangci-lint run
          gosec ./...
      - name: Build verification
        run: go build -o /dev/null
      - name: Exécution des scripts d'audit et d'inventaire feuille de route
        run: |
          go run ./cmd/audit-inventory/main.go
          go run ./cmd/audit-gap-analysis/main.go
          go run ./cmd/standards-inventory/main.go
          go run ./cmd/standards-duplication-check/main.go
          go run ./cmd/roadmap-indexer/main.go
          go run ./cmd/cross-doc-inventory/main.go
name: Go Quality
"on":
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
