name: Simple CI/CD Pipeline (No Email)

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Exécuter tous les jours à minuit
    - cron: '0 0 * * *'

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Run linting checks
        run: |
          echo "Exécution des vérifications de style de code..."
          echo "Vérifications de style de code terminées avec succès"
  
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Run tests
        run: |
          echo "Exécution des tests..."
          echo "Tests terminés avec succès"
  
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Run security checks
        run: |
          echo "Exécution des vérifications de sécurité..."
          echo "Vérifications de sécurité terminées avec succès"
  
  build:
    name: Build and Deploy
    needs: [lint, test, security]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up environment
        run: |
          mkdir -p ./dist
      
      - name: Build project
        run: |
          echo "Construction du projet..."
          echo "Version: $(date +%Y.%m.%d.%H%M)" > ./dist/version.txt
          echo "Environnement: ${{ github.ref == 'refs/heads/main' && 'Production' || 'Development' }}" >> ./dist/version.txt
          echo "Déployé: $(date -u +"%Y-%m-%d %H:%M:%S UTC")" >> ./dist/version.txt
          echo "Construction du projet terminée avec succès"
      
      - name: Deploy to environment
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "Déploiement vers l'environnement de production..."
            echo "Déploiement vers l'environnement de production terminé avec succès"
          else
            echo "Déploiement vers l'environnement de développement..."
            echo "Déploiement vers l'environnement de développement terminé avec succès"
          fi
  
  notify:
    name: Send Notifications
    needs: [lint, test, security, build]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Check build result
        id: check_result
        run: |
          if [[ "${{ contains(needs.*.result, 'failure') }}" == "true" ]]; then
            echo "status=failure" >> $GITHUB_OUTPUT
          else
            echo "status=success" >> $GITHUB_OUTPUT
          fi
          
          echo "Résultat de la vérification: ${{ contains(needs.*.result, 'failure') }}"
          echo "Statut: $(cat $GITHUB_OUTPUT | grep status || echo 'status not found')"
      
      - name: Notification on failure
        if: steps.check_result.outputs.status == 'failure'
        run: |
          echo "⚠️ CI/CD Pipeline Failed: ${{ github.repository }} (${{ github.ref_name }})"
          echo "Branch: ${{ github.ref }}"
          echo "Commit: ${{ github.sha }}"
          echo "Commit message: ${{ github.event.head_commit.message }}"
          echo "See details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
      
      - name: Notification on success
        if: steps.check_result.outputs.status == 'success' && github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
        run: |
          echo "✅ CI/CD Pipeline Succeeded: ${{ github.repository }} (${{ github.ref_name }})"
          echo "Branch: ${{ github.ref }}"
          echo "Commit: ${{ github.sha }}"
          echo "Commit message: ${{ github.event.head_commit.message }}"
          echo "Environment: ${{ github.ref == 'refs/heads/main' && 'Production' || 'Development' }}"
          echo "Deployment time: $(date -u +"%Y-%m-%d %H:%M:%S UTC")"
          echo "See details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
