jobs:
  validate-bot-contribution:
    if: github.actor == 'google-labs-jules[bot]' || github.event_name == 'workflow_call'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Validation Environment
        run: "echo \"\U0001F50D Setting up Jules Bot contribution validation...\"\necho \"Branch: ${{ github.ref_name }}\"\necho \"Validation Level: ${{ inputs.validation_level || 'standard' }}\"\necho \"Event: ${{ github.event_name }}\"\n"
      - id: branch-validation
        name: Validate Branch Structure
        run: "BRANCH_NAME=\"${{ github.ref_name }}\"\nVALIDATION_LEVEL=\"${{ inputs.validation_level || 'standard' }}\"\n\necho \"Validating branch structure for: $BRANCH_NAME\"\n\n# Check if branch follows jules-google convention\nif [[ \"$BRANCH_NAME\" == jules-google/* ]]; then\n  echo \"✅ Branch follows jules-google convention\"\n  echo \"branch_valid=true\" >> $GITHUB_OUTPUT\nelse\n  echo \"⚠️ Branch does not follow jules-google convention\"\n  echo \"branch_valid=false\" >> $GITHUB_OUTPUT\nfi\n\n# Additional validations based on level\ncase \"$VALIDATION_LEVEL\" in\n  \"strict\")\n    echo \"\U0001F512 Applying strict validation rules...\"\n    # Add strict validation logic here\n    ;;\n  \"standard\")\n    echo \"\U0001F4CB Applying standard validation rules...\"\n    # Add standard validation logic here\n    ;;\n  \"basic\")\n    echo \"\U0001F4DD Applying basic validation rules...\"\n    # Add basic validation logic here\n    ;;\nesac\n"
      - id: file-validation
        name: Validate File Changes
        run: "echo \"\U0001F50D Validating file changes...\"\n\n# Get list of changed files\nCHANGED_FILES=$(git diff --name-only HEAD^ HEAD)\n\nif [ -z \"$CHANGED_FILES\" ]; then\n  echo \"No files changed\"\n  echo \"files_valid=true\" >> $GITHUB_OUTPUT\n  exit 0\nfi\n\necho \"Changed files:\"\necho \"$CHANGED_FILES\"\n\n# Validate file types and patterns\nINVALID_FILES=\"\"\nwhile IFS= read -r file; do\n  if [[ -f \"$file\" ]]; then\n    echo \"Checking: $file\"\n    \n    # Check for sensitive files that bots shouldn't modify\n    if [[ \"$file\" == *.key ]] || [[ \"$file\" == *.pem ]] || [[ \"$file\" == *.p12 ]]; then\n      echo \"❌ Invalid file type detected: $file\"\n      INVALID_FILES=\"$INVALID_FILES $file\"\n    fi\n  fi\ndone <<< \"$CHANGED_FILES\"\n\nif [ -n \"$INVALID_FILES\" ]; then\n  echo \"files_valid=false\" >> $GITHUB_OUTPUT\n  echo \"invalid_files=$INVALID_FILES\" >> $GITHUB_OUTPUT\nelse\n  echo \"files_valid=true\" >> $GITHUB_OUTPUT\nfi\n"
      - name: Generate Validation Report
        run: "echo \"\U0001F4CA Jules Bot Contribution Validation Report\"\necho \"===========================================\"\necho \"Timestamp: $(date -u +\"%Y-%m-%d %H:%M:%S UTC\")\"\necho \"Repository: ${{ github.repository }}\"\necho \"Branch: ${{ github.ref_name }}\"\necho \"Actor: ${{ github.actor }}\"\necho \"Event: ${{ github.event_name }}\"\necho \"\"\necho \"Validation Results:\"\necho \"- Branch Structure: ${{ steps.branch-validation.outputs.branch_valid == 'true' && '✅ VALID' || '❌ INVALID' }}\"\necho \"- File Changes: ${{ steps.file-validation.outputs.files_valid == 'true' && '✅ VALID' || '❌ INVALID' }}\"\necho \"\"\n\nif [[ \"${{ steps.file-validation.outputs.files_valid }}\" == \"false\" ]]; then\n  echo \"⚠️ Invalid files detected: ${{ steps.file-validation.outputs.invalid_files }}\"\nfi\n\necho \"Overall Status: ${{ (steps.branch-validation.outputs.branch_valid == 'true' && steps.file-validation.outputs.files_valid == 'true') && '✅ APPROVED' || '❌ REQUIRES REVIEW' }}\"\n"
      - if: always()
        name: Set Validation Status
        run: "BRANCH_VALID=\"${{ steps.branch-validation.outputs.branch_valid }}\"\nFILES_VALID=\"${{ steps.file-validation.outputs.files_valid }}\"\n\nif [[ \"$BRANCH_VALID\" == \"true\" && \"$FILES_VALID\" == \"true\" ]]; then\n  echo \"\U0001F389 All validations passed - Contribution approved\"\n  exit 0\nelse\n  echo \"⚠️ Validation issues detected - Manual review recommended\"\n  # Don't fail the workflow, just warn\n  exit 0\nfi\n"
name: Jules Bot Contribution Validator
"on":
  pull_request:
    branches:
      - '**'
  workflow_call:
    inputs:
      branch_name:
        description: Branch to validate
        required: true
        type: string
      validation_level:
        default: standard
        description: Validation level (basic, standard, strict)
        required: false
        type: string
